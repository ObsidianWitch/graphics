#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "Floor"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 2, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Floor"
        {
            float3[] extent = [(0, 0, 0), (2, 2, 0)]
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [0, 1, 3, 2]
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0), (2, 0, 0), (0, 2, 0), (2, 2, 0)]
            bool[] primvars:sharp_face = [1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Wall_000"
    {
        matrix4d xformOp:transform = ( (0.02500000037252903, 0, 0, 0), (0, 2, 0, 0), (0, 0, 1.25, 0), (2, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Wall_000"
        {
            float3[] extent = [(0, 0, 0), (2, 2, 2)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 7, 6, 6, 7, 5, 4, 4, 5, 1, 0, 2, 6, 4, 0, 7, 3, 1, 5]
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0), (0, 0, 2), (0, 2, 0), (0, 2, 2), (2, 0, 0), (2, 0, 2), (2, 2, 0), (2, 2, 2)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Wall_001"
    {
        matrix4d xformOp:transform = ( (0.02500000037252903, 0, 0, 0), (0, 2, 0, 0), (0, 0, 1.25, 0), (-0.05000000447034836, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Wall_001"
        {
            float3[] extent = [(0, 0, 0), (2, 2, 2)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 7, 6, 6, 7, 5, 4, 4, 5, 1, 0, 2, 6, 4, 0, 7, 3, 1, 5]
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0), (0, 0, 2), (0, 2, 0), (0, 2, 2), (2, 0, 0), (2, 0, 2), (2, 2, 0), (2, 2, 2)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Wall_002"
    {
        matrix4d xformOp:transform = ( (1.0499999523162842, 0, 0, 0), (0, 0.02500000037252903, 0, 0), (0, 0, 1.25, 0), (-0.05000000074505806, 4, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Wall_002"
        {
            float3[] extent = [(0, 0, 0), (2, 2, 2)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 7, 6, 6, 7, 5, 4, 4, 5, 1, 0, 2, 6, 4, 0, 7, 3, 1, 5]
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0), (0, 0, 2), (0, 2, 0), (0, 2, 2), (2, 0, 0), (2, 0, 2), (2, 2, 0), (2, 2, 2)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Wall_003"
    {
        matrix4d xformOp:transform = ( (1.0499999523162842, 0, 0, 0), (0, 0.02500000037252903, 0, 0), (0, 0, 1.25, 0), (-0.05000000074505806, -0.05000000074505806, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Wall_003"
        {
            float3[] extent = [(0, 0, 0), (2, 2, 2)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 7, 6, 6, 7, 5, 4, 4, 5, 1, 0, 2, 6, 4, 0, 7, 3, 1, 5]
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0), (0, 0, 2), (0, 2, 0), (0, 2, 2), (2, 0, 0), (2, 0, 2), (2, 2, 0), (2, 2, 2)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Wardrobe"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 3, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Wardrobe"
        {
            float3[] extent = [(-2.7939677e-9, 0, 0), (0.51000005, 1, 2)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 7, 6, 4, 5, 1, 0, 2, 6, 4, 0, 7, 3, 1, 5, 6, 7, 5, 4, 10, 27, 26, 14, 48, 8, 12, 49, 52, 11, 15, 53, 19, 18, 9, 13, 23, 22, 10, 14, 31, 19, 13, 28, 29, 18, 19, 31, 8, 21, 20, 12, 11, 24, 25, 15, 54, 55, 25, 24, 53, 15, 25, 55, 9, 30, 28, 13, 22, 23, 17, 16, 14, 26, 17, 23, 39, 35, 33, 37, 36, 32, 35, 39, 34, 38, 37, 33, 47, 43, 42, 46, 44, 40, 43, 47, 41, 45, 46, 42, 21, 50, 51, 20, 20, 51, 49, 12, 51, 50, 48, 49, 27, 16, 17, 26, 47, 46, 45, 44, 53, 55, 54, 52, 42, 43, 40, 41, 39, 37, 38, 36, 33, 35, 32, 34, 28, 30, 29, 31]
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, -1.1641555e-8, -1), (0, -1.1641555e-8, -1), (0, -1.1641555e-8, -1), (0, -1.1641555e-8, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1.1641554e-8, -1), (0, 1.1641554e-8, -1), (0, 1.1641554e-8, -1), (0, 1.1641554e-8, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 6.4692024e-8, 0), (1, 6.4692024e-8, 0), (1, 6.4692024e-8, 0), (1, 6.4692024e-8, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-2.7939677e-9, 0, 0), (-2.7939677e-9, 0, 2), (-2.7939677e-9, 1, 0), (-2.7939677e-9, 1, 2), (0.5, 0, 0), (0.5, 0, 2), (0.5, 1, 0), (0.5, 1, 2), (0.5, 0.01, 0.01), (0.5, 0.010000001, 1.99), (0.5, 0.99, 0.01), (0.5, 0.99, 1.99), (0.51000005, 0.01, 0.01), (0.51000005, 0.010000001, 1.99), (0.51000005, 0.99, 0.01), (0.51000005, 0.99, 1.99), (0.5, 0.51, 0.490125), (0.51000005, 0.51, 0.490125), (0.5, 0.48999992, 1.99), (0.51000005, 0.48999992, 1.99), (0.51000005, 0.49, 0.010000005), (0.5, 0.49, 0.010000005), (0.5, 0.51, 0.010000005), (0.51000005, 0.51, 0.010000005), (0.5, 0.51, 1.99), (0.51000005, 0.51, 1.99), (0.51000005, 0.99, 0.490125), (0.5, 0.99, 0.490125), (0.51000005, 0.010000001, 1.51), (0.5, 0.48999992, 1.51), (0.5, 0.010000001, 1.51), (0.51000005, 0.48999992, 1.51), (0.5, 0.48999992, 1.49), (0.51000005, 0.010000001, 1.49), (0.5, 0.010000001, 1.49), (0.51000005, 0.48999992, 1.49), (0.5, 0.48999992, 1.01), (0.51000005, 0.010000001, 1.01), (0.5, 0.010000001, 1.01), (0.51000005, 0.48999992, 1.01), (0.5, 0.48999992, 0.99), (0.5, 0.010000001, 0.99), (0.51000005, 0.010000001, 0.99), (0.51000005, 0.48999992, 0.99), (0.5, 0.48999992, 0.51), (0.5, 0.010000001, 0.51), (0.51000005, 0.010000001, 0.51), (0.51000005, 0.48999992, 0.51), (0.5, 0.01, 0.489875), (0.51000005, 0.01, 0.489875), (0.5, 0.49, 0.489875), (0.51000005, 0.49, 0.489875), (0.5, 0.99, 0.51), (0.51000005, 0.99, 0.51), (0.5, 0.51, 0.51), (0.51000005, 0.51, 0.51)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Bookcase"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 3, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Bookcase"
        {
            float3[] extent = [(0, -0.29999995, 0), (0.55, 2.3841858e-7, 0.8)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 3, 4, 4, 4, 4, 4, 3, 4, 3, 4, 4, 3, 4, 3, 4, 4, 4, 4, 4, 3, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [7, 3, 1, 5, 2, 6, 4, 0, 16, 5, 1, 22, 28, 3, 7, 34, 2, 33, 39, 6, 33, 32, 38, 39, 32, 31, 37, 38, 31, 30, 36, 37, 30, 29, 35, 36, 29, 28, 34, 35, 2, 11, 32, 33, 11, 31, 32, 11, 10, 30, 31, 10, 29, 30, 10, 3, 28, 29, 4, 21, 27, 0, 20, 19, 25, 26, 18, 17, 23, 24, 4, 15, 20, 21, 15, 19, 20, 15, 14, 18, 19, 14, 17, 18, 14, 5, 16, 17, 27, 26, 8, 0, 26, 25, 8, 25, 24, 9, 8, 24, 23, 9, 23, 22, 1, 9, 6, 13, 15, 4, 13, 12, 14, 15, 12, 7, 5, 14, 39, 38, 13, 6, 38, 37, 13, 37, 36, 12, 13, 36, 35, 12, 35, 34, 7, 12, 0, 8, 11, 2, 8, 9, 10, 11, 9, 1, 3, 10, 28, 22, 23, 29, 29, 23, 17, 35, 22, 28, 34, 16, 16, 34, 35, 17, 18, 24, 30, 36, 30, 24, 25, 31, 31, 25, 19, 37, 18, 36, 37, 19, 20, 26, 32, 38, 32, 26, 27, 33, 33, 27, 21, 39, 20, 38, 39, 21]
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -0.99999994, -0.0000011641542), (0, -0.99999994, -0.0000011641542), (0, -0.99999994, -0.0000011641542), (0, -0.99999994, -0.0000011641542), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0.0000011641531), (0, -1, 0.0000011641531), (0, -1, 0.0000011641531), (0, -1, 0.0000011641531), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, -0.29999995, 0), (0, -0.29999995, 0.8), (0, 2.3841858e-7, 0), (0, 2.3841858e-7, 0.8), (0.55, -0.29999995, 0), (0.55, -0.29999995, 0.8), (0.55, 2.3841858e-7, 0), (0.55, 2.3841858e-7, 0.8), (0, -0.29999995, 0.275), (0, -0.29999995, 0.545), (0, 2.3841858e-7, 0.545), (0, 2.3841858e-7, 0.275), (0.55, 2.3841858e-7, 0.545), (0.55, 2.3841858e-7, 0.275), (0.55, -0.29999995, 0.545), (0.55, -0.29999995, 0.275), (0.54, -0.29999995, 0.79), (0.54, -0.29999995, 0.545), (0.54, -0.29999995, 0.535), (0.54, -0.29999995, 0.275), (0.54, -0.29999995, 0.26500002), (0.54, -0.29999995, 0.010000001), (0.010000001, -0.29999995, 0.79), (0.010000001, -0.29999995, 0.545), (0.010000001, -0.29999995, 0.535), (0.010000001, -0.29999995, 0.275), (0.010000001, -0.29999995, 0.26500002), (0.010000001, -0.29999995, 0.010000001), (0.010000001, 2.3841858e-7, 0.79), (0.010000001, 2.3841858e-7, 0.545), (0.010000001, 2.3841858e-7, 0.535), (0.010000001, 2.3841858e-7, 0.275), (0.010000001, 2.3841858e-7, 0.26500002), (0.010000001, 2.3841858e-7, 0.010000001), (0.54, 2.3841858e-7, 0.79), (0.54, 2.3841858e-7, 0.545), (0.54, 2.3841858e-7, 0.535), (0.54, 2.3841858e-7, 0.275), (0.54, 2.3841858e-7, 0.26500002), (0.54, 2.3841858e-7, 0.010000001)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Desk"
    {
        matrix4d xformOp:transform = ( (7.549790126404332e-8, -1, 0, 0), (1, 7.549790126404332e-8, 0, 0), (0, 0, 1, 0), (0.6500000357627869, 2.8500001430511475, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Desk"
        {
            float3[] extent = [(-7.1723116e-9, 0, -2.2351742e-8), (1.5, 0.70499986, 0.79999995)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [3, 1, 5, 7, 1, 3, 2, 0, 3, 7, 6, 2, 16, 14, 35, 32, 7, 5, 4, 6, 8, 9, 31, 30, 6, 4, 0, 2, 14, 15, 34, 35, 11, 10, 28, 29, 30, 31, 29, 28, 10, 8, 30, 28, 9, 11, 29, 31, 18, 16, 32, 33, 17, 19, 37, 38, 15, 18, 33, 34, 19, 13, 36, 37, 12, 17, 38, 39, 36, 39, 38, 37, 33, 32, 35, 34, 13, 12, 39, 36, 21, 20, 25, 26, 26, 25, 24, 27, 22, 23, 27, 24, 23, 21, 26, 27, 20, 22, 24, 25, 5, 1, 0, 4]
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, -1.0173497e-8, 0), (-1, -1.0173497e-8, 0), (-1, -1.0173497e-8, 0), (-1, -1.0173497e-8, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 4.4509952e-7), (1, 0, 4.4509952e-7), (1, 0, 4.4509952e-7), (1, 0, 4.4509952e-7), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-5.960477e-7, 1, 0), (-5.960477e-7, 1, 0), (-5.960477e-7, 1, 0), (-5.960477e-7, 1, 0), (5.6363742e-8, 0, -1), (5.6363742e-8, 0, -1), (5.6363742e-8, 0, -1), (5.6363742e-8, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0.0000011920941, 0, -1), (0.0000011920941, 0, -1), (0.0000011920941, 0, -1), (0.0000011920941, 0, -1), (-1, 0, -6.1926903e-7), (-1, 0, -6.1926903e-7), (-1, 0, -6.1926903e-7), (-1, 0, -6.1926903e-7), (1, 0, 6.1926903e-7), (1, 0, 6.1926903e-7), (1, 0, 6.1926903e-7), (1, 0, 6.1926903e-7), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, -4.4268072e-7), (-1, 0, -4.4268072e-7), (-1, 0, -4.4268072e-7), (-1, 0, -4.4268072e-7), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 1.5481724e-7), (-1, 0, 1.5481724e-7), (-1, 0, 1.5481724e-7), (-1, 0, 1.5481724e-7), (1, 0, -1.5481724e-7), (1, 0, -1.5481724e-7), (1, 0, -1.5481724e-7), (1, 0, -1.5481724e-7), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0.75), (0, 0, 0.79999995), (-7.1723116e-9, 0.70499986, 0.75), (-7.1723116e-9, 0.70499986, 0.79999995), (1.5, 0, 0.75000006), (1.5, 0, 0.79999995), (1.5, 0.70499986, 0.75000006), (1.5, 0.70499986, 0.79999995), (1.43, 0.07000001, 0.77), (1.4799999, 0.07000004, 0.77000004), (1.43, 0.019999992, 0.77), (1.4799999, 0.019999992, 0.77000004), (0.069999896, 0.07000001, 0.77), (0.019999886, 0.07000001, 0.77), (0.06999989, 0.6350001, 0.77), (0.019999878, 0.6350001, 0.77), (0.06999989, 0.68500006, 0.77), (0.069999896, 0.019999992, 0.77), (0.019999878, 0.68500006, 0.77), (0.019999886, 0.019999992, 0.77), (1.4799999, 0.68500006, 0.77000004), (1.43, 0.68500006, 0.77000004), (1.4799999, 0.6350001, 0.77000004), (1.43, 0.6350001, 0.77000004), (1.4799998, 0.6350001, 3.7252903e-8), (1.4799998, 0.68500006, 3.7252903e-8), (1.4299998, 0.68500006, 3.7252903e-8), (1.4299998, 0.6350001, 3.7252903e-8), (1.4300004, 0.019999992, -2.2351742e-8), (1.4800004, 0.019999992, 3.7252903e-8), (1.4300004, 0.07000001, -2.2351742e-8), (1.4800004, 0.07000004, 3.7252903e-8), (0.07000023, 0.68500006, -2.2351742e-8), (0.02000022, 0.68500006, -2.2351742e-8), (0.02000022, 0.6350001, -2.2351742e-8), (0.07000023, 0.6350001, -2.2351742e-8), (0.019999886, 0.07000001, -2.2351742e-8), (0.019999886, 0.019999992, -2.2351742e-8), (0.069999896, 0.019999992, -2.2351742e-8), (0.069999896, 0.07000001, -2.2351742e-8)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Nightstand"
    {
        matrix4d xformOp:transform = ( (7.549790126404332e-8, 1, 0, 0), (-1, 7.549790126404332e-8, 0, 0), (0, 0, 1, 0), (0.5, 0.5, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Nightstand"
        {
            float3[] extent = [(0, 0, -1.8626451e-9), (0.5, 0.5, 0.5)]
            int[] faceVertexCounts = [4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 3, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [37, 53, 50, 32, 28, 31, 39, 41, 33, 21, 40, 5, 6, 8, 7, 7, 8, 12, 11, 11, 12, 10, 9, 9, 10, 6, 5, 7, 11, 9, 5, 12, 8, 6, 10, 13, 14, 16, 15, 15, 16, 38, 18, 18, 38, 2, 17, 17, 2, 14, 13, 15, 18, 17, 13, 38, 16, 14, 2, 19, 40, 21, 20, 20, 21, 25, 24, 24, 25, 23, 22, 20, 24, 22, 19, 25, 21, 40, 23, 26, 41, 28, 27, 27, 28, 31, 30, 30, 31, 39, 29, 23, 40, 19, 22, 27, 30, 29, 26, 35, 2, 38, 25, 28, 41, 23, 35, 48, 55, 36, 33, 54, 51, 34, 25, 33, 34, 28, 21, 33, 25, 14, 36, 37, 10, 2, 35, 36, 14, 10, 37, 32, 6, 28, 34, 31, 33, 44, 45, 34, 35, 34, 51, 48, 12, 16, 14, 10, 41, 26, 29, 39, 41, 39, 38, 16, 40, 23, 12, 8, 23, 41, 16, 12, 44, 45, 52, 49, 43, 42, 3, 0, 34, 39, 31, 45, 44, 37, 36, 33, 40, 8, 32, 32, 8, 6, 35, 38, 39, 34, 32, 50, 54, 33, 0, 3, 4, 1, 48, 51, 4, 3, 43, 46, 47, 42, 55, 53, 49, 52, 55, 48, 3, 42, 55, 52, 45, 36, 50, 53, 43, 0, 51, 54, 1, 4, 49, 53, 37, 44, 54, 50, 0, 1, 42, 43, 53, 55]
            normal3f[] normals = [(0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -3.725292e-8, -1), (0, -3.725292e-8, -1), (0, -3.725292e-8, -1), (0, -3.725292e-8, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-2.6077015e-7, 1, -1.8626442e-7), (-2.6077015e-7, 1, -1.8626442e-7), (-2.6077015e-7, 1, -1.8626442e-7), (-2.6077015e-7, 1, -1.8626442e-7), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-3.7252846e-8, 0, 1), (-3.7252846e-8, 0, 1), (-3.7252846e-8, 0, 1), (-3.7252846e-8, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (2.980232e-7, -1, -7.4505806e-7), (2.980232e-7, -1, -7.4505806e-7), (2.980232e-7, -1, -7.4505806e-7), (2.980232e-7, -1, -7.4505806e-7), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-4.6566058e-9, -3.7252885e-8, -1), (-4.6566058e-9, -3.7252885e-8, -1), (-4.6566058e-9, -3.7252885e-8, -1), (-4.6566058e-9, -3.7252885e-8, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-2.2204466e-14, -1, -7.4505823e-7), (-2.2204466e-14, -1, -7.4505823e-7), (-2.2204466e-14, -1, -7.4505823e-7), (-2.2204466e-14, -1, -7.4505823e-7), (6.51926e-8, 5.5511172e-15, -1), (6.51926e-8, 5.5511172e-15, -1), (6.51926e-8, 5.5511172e-15, -1), (6.51926e-8, 5.5511172e-15, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 4.6566133e-9, -1), (0, 4.6566133e-9, -1), (0, 4.6566133e-9, -1), (0, 4.6566133e-9, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 6.622739e-8, -1), (0, 6.622739e-8, -1), (0, 6.622739e-8, -1), (0, 6.622739e-8, -1), (0, 6.6227386e-8, -1), (0, 6.6227386e-8, -1), (0, 6.6227386e-8, -1), (0, 6.6227386e-8, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, -1.0348026e-8, -1.8626446e-8), (1, -1.0348026e-8, -1.8626446e-8), (1, -1.0348026e-8, -1.8626446e-8), (1, -1.0348026e-8, -1.8626446e-8), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0.5), (0, 0.5, 0.5), (0.5, 0, 0.05), (0.5, 0, 0.5), (0.5, 0.5, 0.5), (0, 0, -1.8626451e-9), (0, 0, 0.049999997), (0, 0.05, -1.8626451e-9), (0, 0.05, 0.049999997), (0.05, 0, -1.8626451e-9), (0.05, 0, 0.049999997), (0.05, 0.05, -1.8626451e-9), (0.05, 0.05, 0.049999997), (0.45000002, 0, -1.8626451e-9), (0.45000002, 0, 0.049999997), (0.45000002, 0.05, -1.8626451e-9), (0.45000002, 0.05, 0.049999997), (0.5, 0, -1.8626451e-9), (0.5, 0.05, -1.8626451e-9), (0, 0.45000002, 0), (0, 0.5, 0), (0, 0.5, 0.049999997), (0.05, 0.45000002, 0), (0.05, 0.45000002, 0.049999997), (0.05, 0.5, 0), (0.05, 0.5, 0.049999997), (0.45000002, 0.45000002, 0), (0.45000002, 0.5, 0), (0.45000002, 0.5, 0.049999997), (0.5, 0.45000002, 0), (0.5, 0.5, 0), (0.5, 0.5, 0.049999997), (0, 0, 0.1), (0, 0.5, 0.1), (0.5, 0.5, 0.1), (0.5, 0, 0.1), (0.45000002, 0, 0.1), (0.050000012, 0, 0.1), (0.5, 0.050000027, 0.05), (0.5, 0.45, 0.049999997), (0, 0.45, 0.049999997), (0.45000002, 0.45, 0.05), (0.45000002, 0, 0.45), (0.050000012, 0, 0.45), (0.050000012, 0.44999996, 0.1), (0.45000002, 0.44999996, 0.1), (0.050000027, 0.44999996, 0.45000002), (0.45000002, 0.44999996, 0.45000002), (0.5, 0, 0.3), (0.05000002, 0.44999996, 0.30000007), (0, 0, 0.30000004), (0.5, 0.5, 0.30000007), (0.45000002, 0.44999996, 0.30000007), (0.050000012, 0, 0.30000004), (0, 0.5, 0.30000007), (0.45000002, 0, 0.30000004)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }
}

