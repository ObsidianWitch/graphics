#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "Wall_000"
    {
        matrix4d xformOp:transform = ( (0.02500000037252903, 0, 0, 0), (0, 0.699999988079071, 0, 0), (0, 0, 1.25, 0), (2.4000000953674316, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Wall_000" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(0, 0, 0), (2, 2, 2)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 7, 6, 6, 7, 5, 4, 4, 5, 1, 0, 2, 6, 4, 0, 7, 3, 1, 5]
            rel material:binding = </root/_materials/White>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0), (0, 0, 2), (0, 2, 0), (0, 2, 2), (2, 0, 0), (2, 0, 2), (2, 2, 0), (2, 2, 2)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Scope "_materials"
    {
        def Material "White"
        {
            token outputs:surface.connect = </root/_materials/White/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.5
                float inputs:specular = 0.5
                token outputs:surface
            }
        }

        def Material "WoodFurniture"
        {
            token outputs:surface.connect = </root/_materials/WoodFurniture/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (1, 0.5647122, 0.2917709)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.5
                float inputs:specular = 0.5
                token outputs:surface
            }
        }

        def Material "Grey"
        {
            token outputs:surface.connect = </root/_materials/Grey/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.9, 0.9, 0.9)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.5
                float inputs:specular = 0.5
                token outputs:surface
            }
        }

        def Material "WoodBorder"
        {
            token outputs:surface.connect = </root/_materials/WoodBorder/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.7529381, 0.40724066, 0.19120185)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.5
                float inputs:specular = 0.5
                token outputs:surface
            }
        }

        def Material "WoodFlooring"
        {
            token outputs:surface.connect = </root/_materials/WoodFlooring/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/WoodFlooring/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.5
                float inputs:specular = 0.5
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/wood_flooring.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/WoodFlooring/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "LightBlue"
        {
            token outputs:surface.connect = </root/_materials/LightBlue/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.38238946, 0.68371326, 0.9559737)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.5
                float inputs:specular = 0.5
                token outputs:surface
            }
        }

        def Material "Black"
        {
            token outputs:surface.connect = </root/_materials/Black/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.1, 0.1, 0.1)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.5
                float inputs:specular = 0.5
                token outputs:surface
            }
        }

        def Material "BlockBrightRed"
        {
            token outputs:surface.connect = </root/_materials/BlockBrightRed/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.7230515, 0.010329742, 0.015208535)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.5
                float inputs:specular = 0.5
                token outputs:surface
            }
        }

        def Material "BlockNougat"
        {
            token outputs:surface.connect = </root/_materials/BlockNougat/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.73045695, 0.25818312, 0.11443549)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.5
                float inputs:specular = 0.5
                token outputs:surface
            }
        }

        def Material "BlockTransClear"
        {
        }

        def Material "BlockLightRoyalBlue"
        {
            token outputs:surface.connect = </root/_materials/BlockLightRoyalBlue/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.18781888, 0.5209959, 0.8227862)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.5
                float inputs:specular = 0.5
                token outputs:surface
            }
        }

        def Material "BlockLightNougat"
        {
            token outputs:surface.connect = </root/_materials/BlockLightNougat/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.9734396, 0.5457252, 0.34191462)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.5
                float inputs:specular = 0.5
                token outputs:surface
            }
        }

        def Material "BlockTrBrown"
        {
            token outputs:surface.connect = </root/_materials/BlockTrBrown/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.30946708, 0.25015858, 0.14995992)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.5
                float inputs:specular = 0.5
                token outputs:surface
            }
        }
    }

    def Xform "Wall_001"
    {
        matrix4d xformOp:transform = ( (0.02500000037252903, 0, 0, 0), (0, 2.299999952316284, 0, 0), (0, 0, 1.25, 0), (-0.05000000447034836, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Wall_001" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(0, 0, 0), (2, 2, 2)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 7, 6, 6, 7, 5, 4, 4, 5, 1, 0, 2, 6, 4, 0, 7, 3, 1, 5]
            rel material:binding = </root/_materials/White>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0), (0, 0, 2), (0, 2, 0), (0, 2, 2), (2, 0, 0), (2, 0, 2), (2, 2, 0), (2, 2, 2)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Wall_002"
    {
        matrix4d xformOp:transform = ( (0.30000001192092896, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.05000000074505806, 4.600000381469727, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Wall_002" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(0, 0, 0), (2.5, 0.05000019, 2.5)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 7, 6, 6, 7, 5, 4, 4, 5, 1, 0, 2, 6, 4, 0, 7, 3, 1, 5]
            rel material:binding = </root/_materials/White>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0), (0, 0, 2.5), (0, 0.05000019, 0), (0, 0.05000019, 2.5), (2.5, 0, 0), (2.5, 0, 2.5), (2.5, 0.05000019, 0), (2.5, 0.05000019, 2.5)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Wall_003"
    {
        matrix4d xformOp:transform = ( (1.25, 0, 0, 0), (0, 0.02500000037252903, 0, 0), (0, 0, 1.25, 0), (-0.05000000074505806, -0.05000000074505806, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Wall_003" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(0, 0, 0), (2, 2, 2)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 7, 6, 6, 7, 5, 4, 4, 5, 1, 0, 2, 6, 4, 0, 7, 3, 1, 5]
            rel material:binding = </root/_materials/White>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0), (0, 0, 2), (0, 2, 0), (0, 2, 2), (2, 0, 0), (2, 0, 2), (2, 2, 0), (2, 2, 2)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Wall_004"
    {
        matrix4d xformOp:transform = ( (0.02500000037252903, 0, 0, 0), (0, 1.1499998569488525, 0, 0), (0, 0, 1.25, 0), (2.4000000953674316, 2.299999952316284, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Wall_004" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(0, 0, 0), (2, 2, 2)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 7, 6, 6, 7, 5, 4, 4, 5, 1, 0, 2, 6, 4, 0, 7, 3, 1, 5]
            rel material:binding = </root/_materials/White>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0), (0, 0, 2), (0, 2, 0), (0, 2, 2), (2, 0, 0), (2, 0, 2), (2, 2, 0), (2, 2, 2)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Wall_005"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (2.4000000953674316, 1.399999976158142, 2.1000001430511475, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Wall_005" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-2.9802322e-8, 0, 0), (0.049999744, 0.9000001, 0.4000001)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [7, 3, 1, 5, 0, 4, 5, 1, 0, 1, 3, 2, 2, 3, 7, 6, 4, 0, 2, 6, 4, 6, 7, 5]
            rel material:binding = </root/_materials/White>
            normal3f[] normals = [(0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.049999744, 0.9000001, 0), (0.049999744, 0, 0), (0.049999744, 0.9000001, 0.4000001), (0.049999744, 0, 0.4000001), (-2.9802322e-8, 0.9000001, 0), (-2.9802322e-8, 0, 0), (-2.9802322e-8, 0.9000001, 0.4000001), (-2.9802322e-8, 0, 0.4000001)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Wall_006"
    {
        matrix4d xformOp:transform = ( (-0.20000000298023224, -3.019916050561733e-8, 0, 0), (1.5099580252808664e-7, -1, 0, 0), (0, 0, 1, 0), (2.450000286102295, 4.650000095367432, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Wall_006" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(0, 0, 0), (2.5, 0.05000019, 2.5)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 7, 6, 6, 7, 5, 4, 4, 5, 1, 0, 2, 6, 4, 0, 7, 3, 1, 5]
            rel material:binding = </root/_materials/White>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0), (0, 0, 2.5), (0, 0.05000019, 0), (0, 0.05000019, 2.5), (2.5, 0, 0), (2.5, 0, 2.5), (2.5, 0.05000019, 0), (2.5, 0.05000019, 2.5)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Door"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (2.424999952316284, 1.4000003337860107, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Door" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.054999884, 0, 0), (0.054999884, 0.9000001, 2.1)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [52, 33, 3, 40, 40, 3, 7, 42, 48, 37, 5, 44, 44, 5, 1, 39, 31, 34, 4, 0, 10, 8, 9, 11, 14, 15, 13, 12, 9, 8, 12, 13, 8, 10, 14, 12, 11, 9, 13, 15, 10, 11, 15, 14, 18, 16, 17, 19, 22, 23, 21, 20, 17, 16, 25, 27, 16, 18, 26, 25, 19, 17, 27, 24, 18, 19, 24, 26, 24, 27, 21, 23, 29, 27, 25, 20, 21, 26, 24, 29, 28, 25, 26, 28, 22, 20, 28, 29, 23, 22, 2, 6, 35, 30, 30, 35, 34, 31, 42, 7, 36, 46, 46, 36, 37, 48, 39, 1, 32, 50, 50, 32, 33, 52, 31, 51, 53, 30, 51, 50, 52, 53, 0, 38, 51, 31, 38, 39, 50, 51, 35, 47, 49, 34, 47, 46, 48, 49, 6, 43, 47, 35, 43, 42, 46, 47, 4, 45, 38, 0, 45, 44, 39, 38, 34, 49, 45, 4, 49, 48, 44, 45, 2, 41, 43, 6, 41, 40, 42, 43, 30, 53, 41, 2, 53, 52, 40, 41, 33, 36, 7, 3, 32, 37, 36, 33, 37, 32, 1, 5, 40, 84, 57, 3, 90, 86, 55, 83, 86, 39, 1, 55, 31, 0, 54, 80, 60, 61, 59, 58, 64, 62, 63, 65, 59, 63, 62, 58, 58, 62, 64, 60, 61, 65, 63, 59, 60, 64, 65, 61, 68, 69, 67, 66, 72, 70, 71, 73, 67, 77, 75, 66, 66, 75, 76, 68, 69, 74, 77, 67, 68, 76, 74, 69, 74, 79, 73, 71, 77, 77, 71, 70, 75, 76, 78, 79, 74, 75, 70, 72, 78, 76, 78, 72, 73, 79, 2, 30, 81, 56, 30, 31, 80, 81, 84, 88, 82, 57, 88, 90, 83, 82, 81, 80, 91, 89, 89, 91, 90, 88, 56, 81, 89, 85, 85, 89, 88, 84, 54, 0, 38, 87, 87, 38, 39, 86, 80, 54, 87, 91, 91, 87, 86, 90, 2, 56, 85, 41, 41, 85, 84, 40, 33, 3, 57, 82, 32, 33, 82, 83, 83, 55, 1, 32]
            rel material:binding = </root/_materials/WoodFurniture>
            normal3f[] normals = [(0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.000002633706, 0, -1), (-0.000002633706, 0, -1), (-0.000002633706, 0, -1), (-0.000002633706, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0.9000001, 0), (0, 0.9000001, 2.1), (0, 0, 0), (0, 0, 2.1), (0.024999887, 0.9000001, 0), (0.024999887, 0.9000001, 2.1), (0.024999887, 0, 0), (0.024999887, 0, 2.1), (0.02499989, 0.8800001, 0.96), (0.02499989, 0.8800001, 1.2), (0.02499989, 0.8400001, 0.96), (0.02499989, 0.8400001, 1.2), (0.03499988, 0.8800001, 0.96), (0.03499988, 0.8800001, 1.2), (0.03499988, 0.8400001, 0.96), (0.03499988, 0.8400001, 1.2), (0.034999896, 0.86499965, 1.0799999), (0.034999896, 0.86499965, 1.09), (0.034999896, 0.85499966, 1.0799999), (0.034999896, 0.85499966, 1.09), (0.054999884, 0.86499965, 1.0799999), (0.054999884, 0.86499965, 1.09), (0.054999884, 0.7649997, 1.0799999), (0.054999884, 0.7649997, 1.09), (0.044999894, 0.85499966, 1.09), (0.044999894, 0.86499965, 1.0799999), (0.044999894, 0.85499966, 1.0799999), (0.044999894, 0.86499965, 1.09), (0.044999894, 0.7649997, 1.0799999), (0.044999894, 0.7649997, 1.09), (0, 0.020000018, 0), (0, 0.88, 0), (0, 0.88, 2.1), (0, 0.019999988, 2.1), (0.024999887, 0.88, 0), (0.024999887, 0.019999988, 0), (0.024999887, 0.020000018, 2.1), (0.024999887, 0.88, 2.1), (0, 0.9000001, 0.020000052), (0, 0.9000001, 2.08), (0, 0, 2.08), (0, 0, 0.019999992), (0.024999887, 0, 2.08), (0.024999887, 0, 0.019999992), (0.024999887, 0.9000001, 2.08), (0.024999887, 0.9000001, 0.019999992), (0.024999887, 0.020000018, 2.08), (0.024999887, 0.019999988, 0.019999992), (0.024999887, 0.88, 2.08), (0.024999887, 0.88, 0.019999992), (0, 0.88, 2.08), (0, 0.88, 0.019999992), (0, 0.019999988, 2.08), (0, 0.019999988, 0.019999992), (-0.024999887, 0.9000001, 0), (-0.024999887, 0.9000001, 2.1), (-0.024999887, 0, 0), (-0.024999887, 0, 2.1), (-0.02499989, 0.8800001, 0.96), (-0.02499989, 0.8800001, 1.2), (-0.02499989, 0.8400001, 0.96), (-0.02499989, 0.8400001, 1.2), (-0.03499988, 0.8800001, 0.96), (-0.03499988, 0.8800001, 1.2), (-0.03499988, 0.8400001, 0.96), (-0.03499988, 0.8400001, 1.2), (-0.034999896, 0.86499965, 1.0799999), (-0.034999896, 0.86499965, 1.09), (-0.034999896, 0.85499966, 1.0799999), (-0.034999896, 0.85499966, 1.09), (-0.054999884, 0.86499965, 1.0799999), (-0.054999884, 0.86499965, 1.09), (-0.054999884, 0.7649997, 1.0799999), (-0.054999884, 0.7649997, 1.09), (-0.044999894, 0.85499966, 1.09), (-0.044999894, 0.86499965, 1.0799999), (-0.044999894, 0.85499966, 1.0799999), (-0.044999894, 0.86499965, 1.09), (-0.044999894, 0.7649997, 1.0799999), (-0.044999894, 0.7649997, 1.09), (-0.024999887, 0.88, 0), (-0.024999887, 0.019999988, 0), (-0.024999887, 0.020000018, 2.1), (-0.024999887, 0.88, 2.1), (-0.024999887, 0, 2.08), (-0.024999887, 0, 0.019999992), (-0.024999887, 0.9000001, 2.08), (-0.024999887, 0.9000001, 0.019999992), (-0.024999887, 0.020000018, 2.08), (-0.024999887, 0.019999988, 0.019999992), (-0.024999887, 0.88, 2.08), (-0.024999887, 0.88, 0.019999992)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "WoodFurniture" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [33, 73]
                rel material:binding = </root/_materials/WoodFurniture>
            }

            def GeomSubset "Grey" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67]
                rel material:binding = </root/_materials/Grey>
            }

            def GeomSubset "WoodBorder" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84]
                rel material:binding = </root/_materials/WoodBorder>
            }
        }
    }

    def Xform "Floor"
    {
        matrix4d xformOp:transform = ( (2.4000000953674316, 0, 0, 0), (0, 4.599999904632568, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Floor" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(0, 0, 0), (1, 1, 0)]
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [0, 1, 3, 2]
            rel material:binding = </root/_materials/WoodFlooring>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0), (1, 0, 0), (0, 1, 0), (1, 1, 0)]
            bool[] primvars:sharp_face = [1] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0, 9.999999), (0, 0), (10.000002, 0), (9.999998, 10)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Window"
    {
        matrix4d xformOp:transform = ( (1.25, 0, 0, 0), (0, 0.02500000037252903, 0, 0), (0, 0, 1.25, 0), (1.3249999284744263, 4.650000095367432, 0.05000000074505806, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Window" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.49999994, -2.999989, 0), (0.49999994, 0, 1.6799997)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [9, 13, 5, 0, 14, 10, 1, 4, 8, 3, 1, 10, 5, 13, 18, 16, 0, 1, 3, 2, 5, 4, 1, 0, 2, 3, 11, 6, 14, 4, 17, 19, 2, 7, 9, 0, 11, 3, 8, 12, 2, 6, 15, 7, 4, 5, 16, 17, 23, 19, 17, 21, 18, 22, 20, 16, 20, 21, 17, 16, 18, 19, 23, 22, 11, 12, 29, 25, 15, 6, 24, 26, 48, 55, 54, 49, 20, 27, 28, 21, 19, 18, 13, 14, 21, 28, 30, 23, 22, 31, 27, 20, 31, 30, 29, 26, 24, 25, 28, 27, 24, 27, 31, 26, 28, 25, 29, 30, 6, 11, 25, 24, 13, 40, 41, 14, 14, 41, 10, 9, 40, 13, 9, 32, 37, 40, 41, 36, 33, 10, 8, 10, 33, 35, 37, 42, 44, 40, 32, 34, 35, 33, 37, 32, 33, 36, 34, 38, 39, 35, 41, 45, 43, 36, 34, 32, 9, 7, 39, 12, 8, 35, 34, 7, 15, 38, 36, 43, 42, 37, 49, 47, 43, 45, 44, 42, 46, 48, 46, 42, 43, 47, 44, 48, 49, 45, 39, 51, 29, 12, 15, 26, 50, 38, 47, 53, 52, 46, 45, 41, 40, 44, 49, 54, 53, 47, 46, 52, 55, 48, 55, 26, 29, 54, 50, 52, 53, 51, 50, 26, 55, 52, 53, 54, 29, 51, 38, 50, 51, 39, 23, 30, 31, 22, 56, 57, 59, 58, 60, 62, 63, 61, 57, 56, 60, 61, 56, 58, 62, 60, 58, 59, 63, 62, 59, 57, 61, 63]
            rel material:binding = </root/_materials/Grey>
            normal3f[] normals = [(0, -1, 0.0000027277215), (0, -1, 0.0000027277215), (0, -1, 0.0000027277215), (0, -1, 0.0000027277215), (0, -1, -3.8967744e-7), (0, -1, -3.8967744e-7), (0, -1, -3.8967744e-7), (0, -1, -3.8967744e-7), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, -1.8626451e-8), (-1, 0, -1.8626451e-8), (-1, 0, -1.8626451e-8), (-1, 0, -1.8626451e-8), (0, -1, 0.0000044775293), (0, -1, 0.0000044775293), (0, -1, 0.0000044775293), (0, -1, 0.0000044775293), (0, -1, -0.0000044775134), (0, -1, -0.0000044775134), (0, -1, -0.0000044775134), (0, -1, -0.0000044775134), (0, -0.99999994, 2.3881507e-8), (0, -0.99999994, 2.3881507e-8), (0, -0.99999994, 2.3881507e-8), (0, -0.99999994, 2.3881507e-8), (0, -1, 2.3881528e-8), (0, -1, 2.3881528e-8), (0, -1, 2.3881528e-8), (0, -1, 2.3881528e-8), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 9.190604e-9, -9.803395e-9), (1, 9.190604e-9, -9.803395e-9), (1, 9.190604e-9, -9.803395e-9), (1, 9.190604e-9, -9.803395e-9), (1, 0, 9.803395e-9), (1, 0, 9.803395e-9), (1, 0, 9.803395e-9), (1, 0, 9.803395e-9), (1, 0, 1.8626451e-8), (1, 0, 1.8626451e-8), (1, 0, 1.8626451e-8), (1, 0, 1.8626451e-8), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 1, 0.0000033420677), (0, 1, 0.0000033420677), (0, 1, 0.0000033420677), (0, 1, 0.0000033420677), (0, 1, -0.0000015596373), (0, 1, -0.0000015596373), (0, 1, -0.0000015596373), (0, 1, -0.0000015596373), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, -1.8626451e-8), (1, 0, -1.8626451e-8), (1, 0, -1.8626451e-8), (1, 0, -1.8626451e-8), (0, -1, 0.000007164047), (0, -1, 0.000007164047), (0, -1, 0.000007164047), (0, -1, 0.000007164047), (0, -1, -0.0000071640216), (0, -1, -0.0000071640216), (0, -1, -0.0000071640216), (0, -1, -0.0000071640216), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 9.803395e-9), (-1, 0, 9.803395e-9), (-1, 0, 9.803395e-9), (-1, 0, 9.803395e-9), (-1, 0, 1.8626451e-8), (-1, 0, 1.8626451e-8), (-1, 0, 1.8626451e-8), (-1, 0, 1.8626451e-8), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0.0000035648723), (0, 1, 0.0000035648723), (0, 1, 0.0000035648723), (0, 1, 0.0000035648723), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 9.190604e-9, -9.803395e-9), (-1, 9.190604e-9, -9.803395e-9), (-1, 9.190604e-9, -9.803395e-9), (-1, 9.190604e-9, -9.803395e-9), (0, 1, -5.1743075e-7), (0, 1, -5.1743075e-7), (0, 1, -5.1743075e-7), (0, 1, -5.1743075e-7), (0, -1, -0.0000031938207), (0, -1, -0.0000031938207), (0, -1, -0.0000031938207), (0, -1, -0.0000031938207), (-0.999982, -0.0060003484, 2.5529678e-7), (-0.999982, -0.0060003484, 2.5529678e-7), (-0.999982, -0.0060003484, 2.5529678e-7), (-0.999982, -0.0060003484, 2.5529678e-7), (0, -0.029988496, -0.9995502), (0, -0.029988496, -0.9995502), (0, -0.029988496, -0.9995502), (0, -0.029988496, -0.9995502), (0.999982, -0.0060003027, -2.552974e-7), (0.999982, -0.0060003027, -2.552974e-7), (0.999982, -0.0060003027, -2.552974e-7), (0.999982, -0.0060003027, -2.552974e-7), (0, -0.029988447, 0.9995503), (0, -0.029988447, 0.9995503), (0, -0.029988447, 0.9995503), (0, -0.029988447, 0.9995503)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.49999994, -2.399994, 0), (-0.49999994, -2.399994, 1.6799997), (-0.49999994, 0, 0), (-0.49999994, 0, 1.6799997), (-0.46, -2.399994, 1.64), (-0.45999998, -2.399994, 0.04000002), (-0.45999998, 0, 0.04000002), (0, 0, 0), (0, 0, 1.6799997), (0, -2.399994, 0), (0, -2.399994, 1.6799997), (-0.45999998, 0, 1.64), (0, 0, 1.64), (-0.0039999485, -2.399994, 0.04000002), (-0.0039999783, -2.399994, 1.64), (0, 0, 0.04000002), (-0.45999998, -2.800003, 0.04000002), (-0.46, -2.800003, 1.64), (-0.0039999485, -2.800003, 0.04000002), (-0.0039999783, -2.800003, 1.64), (-0.41999996, -2.800003, 0.08000001), (-0.42, -2.800003, 1.6000001), (-0.04399994, -2.800003, 0.08000001), (-0.04399997, -2.800003, 1.6000001), (-0.45999998, -1.1999893, 0.04000002), (-0.45999998, -1.1999893, 1.64), (0, -1.1999893, 0.04000002), (-0.41999996, -1.1999893, 0.08000001), (-0.41999996, -1.1999893, 1.6000001), (0, -1.1999893, 1.64), (-0.04399994, -1.1999893, 1.6000001), (-0.04399994, -1.1999893, 0.08000001), (0.49999994, -2.399994, 0), (0.49999994, -2.399994, 1.6799997), (0.49999994, 0, 0), (0.49999994, 0, 1.6799997), (0.46, -2.399994, 1.64), (0.45999998, -2.399994, 0.04000002), (0.45999998, 0, 0.04000002), (0.45999998, 0, 1.64), (0.0039999485, -2.399994, 0.04000002), (0.0039999783, -2.399994, 1.64), (0.45999998, -2.800003, 0.04000002), (0.46, -2.800003, 1.64), (0.0039999485, -2.800003, 0.04000002), (0.0039999783, -2.800003, 1.64), (0.41999996, -2.800003, 0.08000001), (0.42, -2.800003, 1.6000001), (0.04399994, -2.800003, 0.08000001), (0.04399997, -2.800003, 1.6000001), (0.45999998, -1.1999893, 0.04000002), (0.45999998, -1.1999893, 1.64), (0.41999996, -1.1999893, 0.08000001), (0.41999996, -1.1999893, 1.6000001), (0.04399994, -1.1999893, 1.6000001), (0.04399994, -1.1999893, 0.08000001), (0.011999941, -2.800003, 0.8), (0.011999971, -2.800003, 0.92), (0.036000043, -2.800003, 0.8), (0.036000073, -2.800003, 0.92), (0.0131999515, -2.999989, 0.806), (0.0131999785, -2.999989, 0.91400003), (0.034800045, -2.999989, 0.806), (0.03480007, -2.999989, 0.91400003)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "Grey" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58]
                rel material:binding = </root/_materials/Grey>
            }

            def GeomSubset "White" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [59, 60, 61, 62, 63, 64]
                rel material:binding = </root/_materials/White>
            }
        }
    }

    def Xform "Wall_007"
    {
        matrix4d xformOp:transform = ( (0.5, 0, 0, 0), (0, 1, 0, 0), (0, 0, 0.019999999552965164, 0), (0.699999988079071, 4.599999904632568, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Wall_007" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(0, 0, 0), (2.5, 0.05000019, 2.5)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 7, 6, 6, 7, 5, 4, 4, 5, 1, 0, 2, 6, 4, 0, 7, 3, 1, 5]
            rel material:binding = </root/_materials/White>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0), (0, 0, 2.5), (0, 0.05000019, 0), (0, 0.05000019, 2.5), (2.5, 0, 0), (2.5, 0, 2.5), (2.5, 0.05000019, 0), (2.5, 0.05000019, 2.5)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Wall_008"
    {
        matrix4d xformOp:transform = ( (0.5, 0, 0, 0), (0, 1, 0, 0), (0, 0, 0.14000000059604645, 0), (0.7000000476837158, 4.600000381469727, 2.1500000953674316, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Wall_008" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(0, 0, 0), (2.5, 0.05000019, 2.5)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 7, 6, 6, 7, 5, 4, 4, 5, 1, 0, 2, 6, 4, 0, 7, 3, 1, 5]
            rel material:binding = </root/_materials/White>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0), (0, 0, 2.5), (0, 0.05000019, 0), (0, 0.05000019, 2.5), (2.5, 0, 0), (2.5, 0, 2.5), (2.5, 0.05000019, 0), (2.5, 0.05000019, 2.5)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Bed"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Bed" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-5.9604645e-8, -0.02, -0.000064864755), (1.8199999, 0.91999996, 0.5)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 2, 7, 7, 2, 4, 11, 11, 4, 3, 9, 9, 3, 1, 0, 7, 11, 9, 0, 5, 0, 7, 6, 6, 7, 11, 10, 10, 11, 9, 8, 8, 9, 0, 5, 6, 10, 8, 5, 12, 13, 15, 14, 14, 15, 19, 18, 18, 19, 17, 16, 16, 17, 13, 12, 14, 18, 16, 12, 19, 15, 13, 17, 20, 21, 23, 22, 22, 23, 27, 26, 26, 27, 25, 24, 24, 25, 21, 20, 22, 26, 24, 20, 27, 23, 21, 25, 28, 29, 31, 30, 30, 31, 35, 34, 34, 35, 33, 32, 32, 33, 29, 28, 30, 34, 32, 28, 35, 31, 29, 33, 36, 37, 39, 38, 38, 39, 43, 42, 42, 43, 41, 40, 40, 41, 37, 36, 38, 42, 40, 36, 43, 39, 37, 41, 67, 64, 51, 50, 66, 48, 49, 65, 66, 46, 45, 67, 49, 48, 50, 51, 65, 49, 51, 64, 46, 47, 44, 45, 52, 55, 56, 57, 58, 59, 57, 56, 60, 54, 55, 63, 54, 58, 56, 55, 53, 59, 58, 54, 62, 63, 55, 52, 59, 53, 52, 57, 53, 61, 62, 52, 61, 60, 63, 62, 61, 53, 54, 60, 47, 65, 64, 44, 48, 66, 67, 50, 46, 66, 65, 47, 45, 44, 64, 67, 73, 71, 70, 72, 69, 68, 70, 71, 69, 71, 76, 74, 75, 74, 76, 77, 71, 73, 77, 76, 72, 81, 77, 73, 78, 79, 81, 80, 72, 70, 80, 81, 70, 68, 78, 80, 77, 81, 79, 75]
            rel material:binding = </root/_materials/WoodFurniture>
            normal3f[] normals = [(-1, -9.934108e-8, -1.986822e-7), (-1, -9.934108e-8, -1.986822e-7), (-1, -9.934108e-8, -1.986822e-7), (-1, -9.934108e-8, -1.986822e-7), (0, 1, -4.856675e-7), (0, 1, -4.856675e-7), (0, 1, -4.856675e-7), (0, 1, -4.856675e-7), (1, 0, -7.947287e-7), (1, 0, -7.947287e-7), (1, 0, -7.947287e-7), (1, 0, -7.947287e-7), (-4.967054e-8, -1, -1.9868217e-7), (-4.967054e-8, -1, -1.9868217e-7), (-4.967054e-8, -1, -1.9868217e-7), (-4.967054e-8, -1, -1.9868217e-7), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, -9.934108e-8, -2.9802322e-7), (-1, -9.934108e-8, -2.9802322e-7), (-1, -9.934108e-8, -2.9802322e-7), (-1, -9.934108e-8, -2.9802322e-7), (0, 1, 6.622739e-7), (0, 1, 6.622739e-7), (0, 1, 6.622739e-7), (0, 1, 6.622739e-7), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-4.9670547e-8, -1, -2.9802328e-7), (-4.9670547e-8, -1, -2.9802328e-7), (-4.9670547e-8, -1, -2.9802328e-7), (-4.9670547e-8, -1, -2.9802328e-7), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.9805806, 0, 0.19611639), (0.9805806, 0, 0.19611639), (0.9805806, 0, 0.19611639), (0.9805806, 0, 0.19611639), (-0.9805807, 0, 0.19611603), (-0.9805807, 0, 0.19611603), (-0.9805807, 0, 0.19611603), (-0.9805807, 0, 0.19611603), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0.9805806, 0.19611642), (0, 0.9805806, 0.19611642), (0, 0.9805806, 0.19611642), (0, 0.9805806, 0.19611642), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.9805806, 0, 0.19611639), (0.9805806, 0, 0.19611639), (0.9805806, 0, 0.19611639), (0.9805806, 0, 0.19611639), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0.980581, -0.19611463), (0, 0.980581, -0.19611463), (0, 0.980581, -0.19611463), (0, 0.980581, -0.19611463), (0, 0.980581, 0.19611463), (0, 0.980581, 0.19611463), (0, 0.980581, 0.19611463), (0, 0.980581, 0.19611463), (-0.9805807, 0, 0.19611606), (-0.9805807, 0, 0.19611606), (-0.9805807, 0, 0.19611606), (-0.9805807, 0, 0.19611606), (0.98058057, 0, -0.1961164), (0.98058057, 0, -0.1961164), (0.98058057, 0, -0.1961164), (0.98058057, 0, -0.1961164), (0, -0.9805806, 0.19611642), (0, -0.9805806, 0.19611642), (0, -0.9805806, 0.19611642), (0, -0.9805806, 0.19611642), (0, -1, -3.9913814e-7), (0, -1, -3.9913814e-7), (0, -1, -3.9913814e-7), (0, -1, -3.9913814e-7), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.9805807, 0, -0.1961161), (-0.9805807, 0, -0.1961161), (-0.9805807, 0, -0.1961161), (-0.9805807, 0, -0.1961161), (0, 0.9805806, -0.19611642), (0, 0.9805806, -0.19611642), (0, 0.9805806, -0.19611642), (0, 0.9805806, -0.19611642), (0, -0.9805806, 0.19611607), (0, -0.9805806, 0.19611607), (0, -0.9805806, 0.19611607), (0, -0.9805806, 0.19611607), (-0.9805807, 0, -0.19611607), (-0.9805807, 0, -0.19611607), (-0.9805807, 0, -0.19611607), (-0.9805807, 0, -0.19611607), (0.98058057, 0, -0.1961164), (0.98058057, 0, -0.1961164), (0.98058057, 0, -0.1961164), (0.98058057, 0, -0.1961164), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, 0.70711, -0.7071036), (0, 0.70711, -0.7071036), (0, 0.70711, -0.7071036), (0, 0.70711, -0.7071036), (0, 1, -0.0000011272748), (0, 1, -0.0000011272748), (0, 1, -0.0000011272748), (0, 1, -0.0000011272748), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -0.70710695, -0.70710665), (0, -0.70710695, -0.70710665), (0, -0.70710695, -0.70710665), (0, -0.70710695, -0.70710665), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0.7071093, 8.589734e-8, -0.7071043), (0.7071093, 8.589734e-8, -0.7071043), (0.7071093, 8.589734e-8, -0.7071043), (0.7071093, 8.589734e-8, -0.7071043)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(1.1920929e-7, 1.1920929e-7, 0.25), (0, 0, 0.39999998), (0, 0.9000001, 0.39999998), (1.8000001, 0, 0.39999998), (1.8000001, 0.9000001, 0.39999998), (5.9604645e-8, 5.9604645e-8, 0.15), (5.9604645e-8, 0.90000004, 0.15), (-5.9604645e-8, 0.90000004, 0.25), (1.8, 5.9604645e-8, 0.15), (1.8, -5.9604645e-8, 0.25), (1.8, 0.90000004, 0.15), (1.8, 0.90000004, 0.25), (0.010000005, 0.010000002, 9.313226e-10), (0.010000005, 0.010000002, 0.16), (0.010000005, 0.06, 9.313226e-10), (0.010000005, 0.06, 0.16), (0.059999995, 0.010000002, 9.313226e-10), (0.059999995, 0.010000002, 0.16), (0.059999995, 0.06, 9.313226e-10), (0.059999995, 0.06, 0.16), (1.74, 0.010000001, -6.9849193e-9), (1.74, 0.010000001, 0.16), (1.74, 0.06, -6.9849193e-9), (1.74, 0.06, 0.16), (1.79, 0.010000001, -6.9849193e-9), (1.79, 0.010000001, 0.16), (1.79, 0.06, -6.9849193e-9), (1.79, 0.06, 0.16), (0.010000005, 0.84000003, 0.000064857304), (0.010000005, 0.84000003, 0.16006485), (0.010000005, 0.89000005, 0.000064857304), (0.010000005, 0.89000005, 0.16006485), (0.059999995, 0.84000003, 0.000064857304), (0.059999995, 0.84000003, 0.16006485), (0.059999995, 0.89000005, 0.000064857304), (0.059999995, 0.89000005, 0.16006485), (1.74, 0.84000003, -0.000064864755), (1.74, 0.84000003, 0.15993515), (1.74, 0.89000005, -0.000064864755), (1.74, 0.89000005, 0.15993515), (1.79, 0.84000003, -0.000064864755), (1.79, 0.84000003, 0.15993515), (1.79, 0.89000005, -0.000064864755), (1.79, 0.89000005, 0.15993515), (0.39666668, 0.44, 0.39999998), (0.39666668, 0, 0.39999998), (0.01, 0, 0.39999998), (0.01, 0.44, 0.39999998), (0.01, 0.01, 0.5), (0.01, 0.44, 0.5), (0.39666668, 0.01, 0.5), (0.39666668, 0.44, 0.5), (0.4066667, 0.45000005, 0.45), (0, 0.45000005, 0.45), (0, 0.90000004, 0.45), (0.4066667, 0.90000004, 0.45), (0.39666668, 0.89000005, 0.5), (0.39666668, 0.46000004, 0.5), (0.01, 0.89000005, 0.5), (0.01, 0.46000004, 0.5), (0.01, 0.89000005, 0.39999998), (0.01, 0.45000005, 0.39999998), (0.39666668, 0.45000005, 0.39999998), (0.39666668, 0.89000005, 0.39999998), (0.4066667, 0.45, 0.45), (0, 0.45, 0.45), (0, 0, 0.45), (0.4066667, 0, 0.45), (0.41, 0, 0.39999998), (0.41, 0.9000001, 0.39999998), (0.41, -0.02, 0.42), (0.41, 0.91999996, 0.42), (1.8199999, -0.02, 0.42), (1.8199999, 0.91999996, 0.42), (0.41, 0.9, 0.25), (1.8000001, 0.9, 0.25), (0.41, 0.91999984, 0.27), (1.8199999, 0.91999984, 0.27), (0.41, 0, 0.24999997), (1.8000001, 0, 0.24999997), (0.41, -0.02, 0.26999998), (1.8199999, -0.02, 0.26999998)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "WoodFurniture" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
                rel material:binding = </root/_materials/WoodFurniture>
            }

            def GeomSubset "LightBlue" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4]
                rel material:binding = </root/_materials/LightBlue>
            }

            def GeomSubset "White" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]
                rel material:binding = </root/_materials/White>
            }
        }
    }

    def Xform "Bookcase_000"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 3.6000003814697266, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Bookcase_000" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(0, -0.29999995, 0), (0.55, 2.3841858e-7, 0.8)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 3, 4, 4, 4, 4, 4, 3, 4, 3, 4, 4, 3, 4, 3, 4, 4, 4, 4, 4, 3, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [7, 3, 1, 5, 2, 6, 4, 0, 16, 5, 1, 22, 28, 3, 7, 34, 2, 33, 39, 6, 33, 32, 38, 39, 32, 31, 37, 38, 31, 30, 36, 37, 30, 29, 35, 36, 29, 28, 34, 35, 2, 11, 32, 33, 11, 31, 32, 11, 10, 30, 31, 10, 29, 30, 10, 3, 28, 29, 4, 21, 27, 0, 20, 19, 25, 26, 18, 17, 23, 24, 4, 15, 20, 21, 15, 19, 20, 15, 14, 18, 19, 14, 17, 18, 14, 5, 16, 17, 27, 26, 8, 0, 26, 25, 8, 25, 24, 9, 8, 24, 23, 9, 23, 22, 1, 9, 6, 13, 15, 4, 13, 12, 14, 15, 12, 7, 5, 14, 39, 38, 13, 6, 38, 37, 13, 37, 36, 12, 13, 36, 35, 12, 35, 34, 7, 12, 0, 8, 11, 2, 8, 9, 10, 11, 9, 1, 3, 10, 28, 22, 23, 29, 29, 23, 17, 35, 22, 28, 34, 16, 16, 34, 35, 17, 18, 24, 30, 36, 30, 24, 25, 31, 31, 25, 19, 37, 18, 36, 37, 19, 20, 26, 32, 38, 32, 26, 27, 33, 33, 27, 21, 39, 20, 38, 39, 21]
            rel material:binding = </root/_materials/Grey>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -0.99999994, -0.0000011641542), (0, -0.99999994, -0.0000011641542), (0, -0.99999994, -0.0000011641542), (0, -0.99999994, -0.0000011641542), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0.0000011641531), (0, -1, 0.0000011641531), (0, -1, 0.0000011641531), (0, -1, 0.0000011641531), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, -0.29999995, 0), (0, -0.29999995, 0.8), (0, 2.3841858e-7, 0), (0, 2.3841858e-7, 0.8), (0.55, -0.29999995, 0), (0.55, -0.29999995, 0.8), (0.55, 2.3841858e-7, 0), (0.55, 2.3841858e-7, 0.8), (0, -0.29999995, 0.275), (0, -0.29999995, 0.545), (0, 2.3841858e-7, 0.545), (0, 2.3841858e-7, 0.275), (0.55, 2.3841858e-7, 0.545), (0.55, 2.3841858e-7, 0.275), (0.55, -0.29999995, 0.545), (0.55, -0.29999995, 0.275), (0.54, -0.29999995, 0.79), (0.54, -0.29999995, 0.545), (0.54, -0.29999995, 0.535), (0.54, -0.29999995, 0.275), (0.54, -0.29999995, 0.26500002), (0.54, -0.29999995, 0.010000001), (0.010000001, -0.29999995, 0.79), (0.010000001, -0.29999995, 0.545), (0.010000001, -0.29999995, 0.535), (0.010000001, -0.29999995, 0.275), (0.010000001, -0.29999995, 0.26500002), (0.010000001, -0.29999995, 0.010000001), (0.010000001, 2.3841858e-7, 0.79), (0.010000001, 2.3841858e-7, 0.545), (0.010000001, 2.3841858e-7, 0.535), (0.010000001, 2.3841858e-7, 0.275), (0.010000001, 2.3841858e-7, 0.26500002), (0.010000001, 2.3841858e-7, 0.010000001), (0.54, 2.3841858e-7, 0.79), (0.54, 2.3841858e-7, 0.545), (0.54, 2.3841858e-7, 0.535), (0.54, 2.3841858e-7, 0.275), (0.54, 2.3841858e-7, 0.26500002), (0.54, 2.3841858e-7, 0.010000001)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Bookcase_001"
    {
        matrix4d xformOp:transform = ( (-1, 1.5099580252808664e-7, 0, 0), (-1.5099580252808664e-7, -1, 0, 0), (0, 0, 1, 0), (2.4000000953674316, 0.9000000357627869, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Bookcase_001" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-1.1175871e-8, -2.9802322e-8, -2.9802322e-8), (0.3, 0.90000004, 1.7500001)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [8, 9, 11, 10, 10, 11, 15, 14, 14, 15, 13, 12, 12, 13, 9, 8, 10, 14, 12, 8, 15, 11, 9, 13, 16, 17, 19, 18, 18, 19, 23, 22, 22, 23, 21, 20, 20, 21, 17, 16, 18, 22, 20, 16, 23, 19, 17, 21, 24, 25, 27, 26, 26, 27, 31, 30, 30, 31, 29, 28, 28, 29, 25, 24, 26, 30, 28, 24, 31, 27, 25, 29, 32, 33, 35, 34, 34, 35, 39, 38, 38, 39, 37, 36, 36, 37, 33, 32, 34, 38, 36, 32, 39, 35, 33, 37, 7, 3, 1, 5, 2, 6, 4, 0, 56, 7, 5, 62, 68, 1, 3, 74, 0, 73, 79, 2, 92, 72, 78, 94, 72, 71, 77, 78, 71, 70, 76, 77, 70, 69, 75, 76, 69, 68, 74, 75, 81, 40, 72, 92, 40, 41, 71, 72, 41, 42, 70, 71, 42, 43, 69, 70, 43, 1, 68, 69, 6, 61, 67, 4, 68, 62, 63, 69, 60, 59, 65, 66, 69, 63, 57, 75, 58, 57, 63, 64, 56, 74, 75, 57, 84, 51, 60, 88, 51, 50, 59, 60, 50, 49, 58, 59, 49, 48, 57, 58, 48, 7, 56, 57, 86, 55, 40, 81, 55, 54, 41, 40, 54, 53, 42, 41, 53, 52, 43, 42, 52, 5, 1, 43, 90, 66, 55, 86, 66, 65, 54, 55, 65, 64, 53, 54, 64, 63, 52, 53, 63, 62, 5, 52, 82, 47, 51, 84, 47, 46, 50, 51, 46, 45, 49, 50, 45, 44, 48, 49, 44, 3, 7, 48, 94, 78, 47, 82, 78, 77, 46, 47, 77, 76, 45, 46, 76, 75, 44, 45, 75, 74, 3, 44, 79, 95, 83, 2, 95, 94, 82, 83, 2, 83, 85, 6, 83, 82, 84, 85, 67, 91, 87, 4, 91, 90, 86, 87, 4, 87, 80, 0, 87, 86, 81, 80, 6, 85, 89, 61, 85, 84, 88, 89, 62, 56, 74, 68, 89, 88, 90, 91, 0, 80, 93, 73, 80, 81, 92, 93, 73, 93, 95, 79, 93, 92, 94, 95, 58, 64, 70, 76, 58, 76, 77, 59, 71, 65, 59, 77, 70, 64, 65, 71, 60, 66, 72, 78, 60, 78, 94, 88, 88, 94, 92, 90, 72, 66, 90, 92, 89, 91, 93, 95, 89, 95, 79, 61, 73, 67, 61, 79, 93, 91, 67, 73]
            rel material:binding = </root/_materials/WoodFurniture>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 2.70733e-8, 0), (1, 2.70733e-8, 0), (1, 2.70733e-8, 0), (1, 2.70733e-8, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, -2.7073371e-8, 0), (1, -2.7073371e-8, 0), (1, -2.7073371e-8, 0), (1, -2.7073371e-8, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1.4537717e-7, 0.99999994), (0, -1.4537717e-7, 0.99999994), (0, -1.4537717e-7, 0.99999994), (0, -1.4537717e-7, 0.99999994), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, -5.3989726e-7, 0), (1, -5.3989726e-7, 0), (1, -5.3989726e-7, 0), (1, -5.3989726e-7, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 5.398969e-7, 0), (1, 5.398969e-7, 0), (1, 5.398969e-7, 0), (1, 5.398969e-7, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0, -1.4537717e-7, 0.99999994), (0, -1.4537717e-7, 0.99999994), (0, -1.4537717e-7, 0.99999994), (0, -1.4537717e-7, 0.99999994), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1.4537717e-7, -0.99999994), (0, 1.4537717e-7, -0.99999994), (0, 1.4537717e-7, -0.99999994), (0, 1.4537717e-7, -0.99999994), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -2.9075434e-7, 0.99999994), (0, -2.9075434e-7, 0.99999994), (0, -2.9075434e-7, 0.99999994), (0, -2.9075434e-7, 0.99999994), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1.4537717e-7, 0.99999994), (0, -1.4537717e-7, 0.99999994), (0, -1.4537717e-7, 0.99999994), (0, -1.4537717e-7, 0.99999994), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 1.4537717e-7, -0.99999994), (0, 1.4537717e-7, -0.99999994), (0, 1.4537717e-7, -0.99999994), (0, 1.4537717e-7, -0.99999994), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1.4537717e-7, 0.99999994), (0, -1.4537717e-7, 0.99999994), (0, -1.4537717e-7, 0.99999994), (0, -1.4537717e-7, 0.99999994), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0.25000003), (0, 0, 1.7500001), (0, 0.90000004, 0.25000003), (0, 0.90000004, 1.7500001), (0.3, 0, 0.25000003), (0.3, 0, 1.7500001), (0.3, 0.90000004, 0.25000003), (0.3, 0.90000004, 1.7500001), (-1.1175871e-8, 0, -1.4901161e-8), (-1.1175871e-8, 0, 0.25), (-1.1175871e-8, 0.04, -1.4901161e-8), (-1.1175871e-8, 0.04, 0.25), (0.04000001, 0, -1.4901161e-8), (0.04000001, 0, 0.25), (0.04000001, 0.04, -1.4901161e-8), (0.04000001, 0.04, 0.25), (-1.1175871e-8, 0.86, -2.9802322e-8), (-1.1175871e-8, 0.86, 0.25), (-1.1175871e-8, 0.90000004, -2.9802322e-8), (-1.1175871e-8, 0.90000004, 0.25), (0.04000001, 0.86, -2.9802322e-8), (0.04000001, 0.86, 0.25), (0.04000001, 0.90000004, -2.9802322e-8), (0.04000001, 0.90000004, 0.25), (0.26, -2.9802322e-8, -1.4901161e-8), (0.26, -2.9802322e-8, 0.25), (0.26, 0.03999997, -1.4901161e-8), (0.26, 0.03999997, 0.25), (0.3, -2.9802322e-8, -1.4901161e-8), (0.3, -2.9802322e-8, 0.25), (0.3, 0.03999997, -1.4901161e-8), (0.3, 0.03999997, 0.25), (0.26, 0.86, -2.9802322e-8), (0.26, 0.86, 0.25), (0.26, 0.9, -2.9802322e-8), (0.26, 0.9, 0.25), (0.3, 0.86, -2.9802322e-8), (0.3, 0.86, 0.25), (0.3, 0.9, -2.9802322e-8), (0.3, 0.9, 0.25), (0, 0, 0.98000014), (0, 0, 1.02), (0, 0, 1.3449999), (0, 0, 1.3849999), (0, 0.90000004, 1.3849999), (0, 0.90000004, 1.3449999), (0, 0.90000004, 1.02), (0, 0.90000004, 0.98), (0.3, 0.90000004, 1.3849999), (0.3, 0.90000004, 1.3449999), (0.3, 0.90000004, 1.02), (0.3, 0.90000004, 0.98), (0.3, 0, 1.3849999), (0.3, 0, 1.3449999), (0.3, 0, 1.02), (0.3, 0, 0.98), (0.3, 0.86, 1.7100002), (0.3, 0.86, 1.3849999), (0.3, 0.86, 1.3449999), (0.3, 0.86, 1.02), (0.3, 0.86, 0.98), (0.3, 0.86, 0.29000002), (0.3, 0.03999999, 1.71), (0.3, 0.03999999, 1.3849998), (0.3, 0.03999999, 1.3449998), (0.3, 0.03999999, 1.0199997), (0.3, 0.03999999, 0.98), (0.3, 0.03999999, 0.2899999), (0, 0.03999999, 1.71), (0, 0.03999999, 1.3849998), (0, 0.03999999, 1.3449998), (0, 0.03999999, 1.0199997), (0, 0.03999999, 0.98), (0, 0.03999999, 0.2899999), (0, 0.86, 1.7100002), (0, 0.86, 1.3849999), (0, 0.86, 1.3449999), (0, 0.86, 1.02), (0, 0.86, 0.98), (0, 0.86, 0.29000002), (0, 0, 0.615), (0, 0, 0.65500003), (0, 0.90000004, 0.655), (0, 0.90000004, 0.615), (0.3, 0.90000004, 0.655), (0.3, 0.90000004, 0.615), (0.3, 0, 0.655), (0.3, 0, 0.615), (0.3, 0.86, 0.655), (0.3, 0.86, 0.615), (0.3, 0.03999999, 0.65499985), (0.3, 0.03999999, 0.6149999), (0, 0.03999999, 0.65499985), (0, 0.03999999, 0.6149999), (0, 0.86, 0.655), (0, 0.86, 0.615)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Desk"
    {
        matrix4d xformOp:transform = ( (7.549790126404332e-8, -1, 0, 0), (1, 7.549790126404332e-8, 0, 0), (0, 0, 1, 0), (0.6500000357627869, 3.450000524520874, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Desk" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-7.1723116e-9, 0, -2.2351742e-8), (1.5, 0.70999986, 0.81)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [3, 1, 5, 7, 1, 3, 2, 0, 3, 7, 6, 2, 16, 14, 35, 32, 7, 5, 4, 6, 8, 9, 31, 30, 6, 4, 0, 2, 14, 15, 34, 35, 11, 10, 28, 29, 30, 31, 29, 28, 10, 8, 30, 28, 9, 11, 29, 31, 18, 16, 32, 33, 17, 19, 37, 38, 15, 18, 33, 34, 19, 13, 36, 37, 12, 17, 38, 39, 36, 39, 38, 37, 33, 32, 35, 34, 13, 12, 39, 36, 21, 20, 25, 26, 26, 25, 24, 27, 22, 23, 27, 24, 23, 21, 26, 27, 20, 22, 24, 25, 5, 1, 0, 4, 41, 40, 42, 43, 45, 47, 46, 44, 42, 40, 44, 46, 40, 41, 45, 44, 41, 43, 47, 45, 43, 42, 46, 47]
            rel material:binding = </root/_materials/WoodFurniture>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, -1.0173497e-8, 0), (-1, -1.0173497e-8, 0), (-1, -1.0173497e-8, 0), (-1, -1.0173497e-8, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 4.4509952e-7), (1, 0, 4.4509952e-7), (1, 0, 4.4509952e-7), (1, 0, 4.4509952e-7), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-5.960477e-7, 1, 0), (-5.960477e-7, 1, 0), (-5.960477e-7, 1, 0), (-5.960477e-7, 1, 0), (5.6363742e-8, 0, -1), (5.6363742e-8, 0, -1), (5.6363742e-8, 0, -1), (5.6363742e-8, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0.0000011920941, 0, -1), (0.0000011920941, 0, -1), (0.0000011920941, 0, -1), (0.0000011920941, 0, -1), (-1, 0, -6.1926903e-7), (-1, 0, -6.1926903e-7), (-1, 0, -6.1926903e-7), (-1, 0, -6.1926903e-7), (1, 0, 6.1926903e-7), (1, 0, 6.1926903e-7), (1, 0, 6.1926903e-7), (1, 0, 6.1926903e-7), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, -4.4268072e-7), (-1, 0, -4.4268072e-7), (-1, 0, -4.4268072e-7), (-1, 0, -4.4268072e-7), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 1.5481724e-7), (-1, 0, 1.5481724e-7), (-1, 0, 1.5481724e-7), (-1, 0, 1.5481724e-7), (1, 0, -1.5481724e-7), (1, 0, -1.5481724e-7), (1, 0, -1.5481724e-7), (1, 0, -1.5481724e-7), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (3.1043868e-8, 0, -1), (3.1043868e-8, 0, -1), (3.1043868e-8, 0, -1), (3.1043868e-8, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0.75), (0, 0, 0.79999995), (-7.1723116e-9, 0.70499986, 0.75), (-7.1723116e-9, 0.70499986, 0.79999995), (1.5, 0, 0.75000006), (1.5, 0, 0.79999995), (1.5, 0.70499986, 0.75000006), (1.5, 0.70499986, 0.79999995), (1.43, 0.07000001, 0.77), (1.4799999, 0.07000004, 0.77000004), (1.43, 0.019999992, 0.77), (1.4799999, 0.019999992, 0.77000004), (0.069999896, 0.07000001, 0.77), (0.019999886, 0.07000001, 0.77), (0.06999989, 0.6350001, 0.77), (0.019999878, 0.6350001, 0.77), (0.06999989, 0.68500006, 0.77), (0.069999896, 0.019999992, 0.77), (0.019999878, 0.68500006, 0.77), (0.019999886, 0.019999992, 0.77), (1.4799999, 0.68500006, 0.77000004), (1.43, 0.68500006, 0.77000004), (1.4799999, 0.6350001, 0.77000004), (1.43, 0.6350001, 0.77000004), (1.4799998, 0.6350001, 3.7252903e-8), (1.4799998, 0.68500006, 3.7252903e-8), (1.4299998, 0.68500006, 3.7252903e-8), (1.4299998, 0.6350001, 3.7252903e-8), (1.4300004, 0.019999992, -2.2351742e-8), (1.4800004, 0.019999992, 3.7252903e-8), (1.4300004, 0.07000001, -2.2351742e-8), (1.4800004, 0.07000004, 3.7252903e-8), (0.07000023, 0.68500006, -2.2351742e-8), (0.02000022, 0.68500006, -2.2351742e-8), (0.02000022, 0.6350001, -2.2351742e-8), (0.07000023, 0.6350001, -2.2351742e-8), (0.019999886, 0.07000001, -2.2351742e-8), (0.019999886, 0.019999992, -2.2351742e-8), (0.069999896, 0.019999992, -2.2351742e-8), (0.069999896, 0.07000001, -2.2351742e-8), (-7.1723116e-9, 0.70499986, 0.74999994), (-7.1723116e-9, 0.70499986, 0.81), (1.5, 0.70499986, 0.75), (1.5, 0.70499986, 0.81), (-7.1723116e-9, 0.70999986, 0.74999994), (-7.1723116e-9, 0.70999986, 0.81), (1.5, 0.70999986, 0.75), (1.5, 0.70999986, 0.81)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Nightstand"
    {
        matrix4d xformOp:transform = ( (7.549790126404332e-8, 1, 0, 0), (-1, 7.549790126404332e-8, 0, 0), (0, 0, 1, 0), (0.5, 1.1000003814697266, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Nightstand" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(0, -9.311444e-9, -1.8626451e-9), (0.5, 0.5, 0.5)]
            int[] faceVertexCounts = [4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 3, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 3, 4, 3, 4, 3, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [36, 42, 47, 45, 28, 31, 39, 41, 33, 21, 40, 5, 6, 8, 7, 7, 8, 12, 11, 11, 12, 10, 9, 9, 10, 6, 5, 7, 11, 9, 5, 12, 8, 6, 10, 13, 14, 16, 15, 15, 16, 38, 18, 18, 38, 2, 17, 17, 2, 14, 13, 15, 18, 17, 13, 38, 16, 14, 2, 19, 40, 21, 20, 20, 21, 25, 24, 24, 25, 23, 22, 20, 24, 22, 19, 25, 21, 40, 23, 26, 41, 28, 27, 27, 28, 31, 30, 30, 31, 39, 29, 23, 40, 19, 22, 27, 30, 29, 26, 35, 2, 38, 25, 28, 41, 23, 46, 43, 37, 44, 37, 43, 0, 32, 25, 33, 34, 28, 21, 33, 25, 14, 36, 37, 10, 2, 35, 36, 14, 10, 37, 32, 6, 28, 34, 31, 33, 44, 45, 34, 12, 16, 14, 10, 41, 26, 29, 39, 41, 39, 38, 16, 40, 23, 12, 8, 23, 41, 16, 12, 34, 4, 3, 35, 43, 42, 3, 0, 34, 39, 31, 45, 44, 37, 36, 33, 40, 8, 32, 32, 8, 6, 35, 38, 39, 34, 33, 1, 4, 34, 0, 3, 4, 1, 43, 46, 47, 42, 35, 3, 42, 36, 47, 46, 44, 45, 67, 53, 56, 64, 58, 50, 51, 59, 60, 48, 49, 62, 65, 57, 52, 66, 52, 68, 66, 55, 61, 63, 54, 61, 60, 62, 63, 55, 48, 60, 61, 67, 69, 53, 59, 53, 69, 58, 68, 52, 51, 64, 56, 50, 65, 54, 49, 53, 59, 51, 56, 63, 62, 49, 54, 61, 69, 68, 63, 48, 55, 64, 51, 54, 66, 67, 55, 54, 65, 66, 48, 51, 50, 49, 55, 67, 64, 52, 57, 50, 58, 50, 57, 65, 68, 58, 62, 63, 59, 69, 61, 60, 69, 67, 66, 68, 58, 59, 60, 62, 0, 1, 33, 32]
            rel material:binding = </root/_materials/WoodFurniture>
            normal3f[] normals = [(-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, -3.725292e-8, -1), (0, -3.725292e-8, -1), (0, -3.725292e-8, -1), (0, -3.725292e-8, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-2.6077015e-7, 1, -1.8626442e-7), (-2.6077015e-7, 1, -1.8626442e-7), (-2.6077015e-7, 1, -1.8626442e-7), (-2.6077015e-7, 1, -1.8626442e-7), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-3.7252846e-8, 0, 1), (-3.7252846e-8, 0, 1), (-3.7252846e-8, 0, 1), (-3.7252846e-8, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (2.980232e-7, -1, -7.4505806e-7), (2.980232e-7, -1, -7.4505806e-7), (2.980232e-7, -1, -7.4505806e-7), (2.980232e-7, -1, -7.4505806e-7), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-4.6566058e-9, -3.7252885e-8, -1), (-4.6566058e-9, -3.7252885e-8, -1), (-4.6566058e-9, -3.7252885e-8, -1), (-4.6566058e-9, -3.7252885e-8, -1), (0.99999994, -1.182632e-8, -2.1287375e-8), (0.99999994, -1.182632e-8, -2.1287375e-8), (0.99999994, -1.182632e-8, -2.1287375e-8), (0.99999994, -1.182632e-8, -2.1287375e-8), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-2.2204466e-14, -1, -7.4505823e-7), (-2.2204466e-14, -1, -7.4505823e-7), (-2.2204466e-14, -1, -7.4505823e-7), (-2.2204466e-14, -1, -7.4505823e-7), (6.51926e-8, 5.5511172e-15, -1), (6.51926e-8, 5.5511172e-15, -1), (6.51926e-8, 5.5511172e-15, -1), (6.51926e-8, 5.5511172e-15, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 4.6566133e-9, -1), (0, 4.6566133e-9, -1), (0, 4.6566133e-9, -1), (0, 4.6566133e-9, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 6.622739e-8, -1), (0, 6.622739e-8, -1), (0, 6.622739e-8, -1), (0, 6.622739e-8, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, -1.06436865e-7), (0, -1, -1.06436865e-7), (0, -1, -1.06436865e-7), (0, -1, -1.06436865e-7), (9.3110214e-7, 1, 0), (9.3110214e-7, 1, 0), (9.3110214e-7, 1, 0), (9.3110214e-7, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (9.3118916e-7, 1, 0), (9.3118916e-7, 1, 0), (9.3118916e-7, 1, 0), (9.3118916e-7, 1, 0), (-0.99999994, 0.0000014903969, 0), (-0.99999994, 0.0000014903969, 0), (-0.99999994, 0.0000014903969, 0), (0, -0.000002980226, 1), (0, -0.000002980226, 1), (0, -0.000002980226, 1), (0, -0.000002980226, 1), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, -3.3866428e-8, 0.99999994), (0, -3.3866428e-8, 0.99999994), (0, -3.3866428e-8, 0.99999994), (0, -3.3866428e-8, 0.99999994), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (1, 0, -6.7731996e-8), (1, 0, -6.7731996e-8), (1, 0, -6.7731996e-8), (-1, -2.6457759e-8, -0.0000014901011), (-1, -2.6457759e-8, -0.0000014901011), (-1, -2.6457759e-8, -0.0000014901011), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, -2.2837048e-8, -2.569167e-8), (1, -2.2837048e-8, -2.569167e-8), (1, -2.2837048e-8, -2.569167e-8), (1, -2.2837048e-8, -2.569167e-8), (-0.0000033484541, 6.6971616e-8, -1), (-0.0000033484541, 6.6971616e-8, -1), (-0.0000033484541, 6.6971616e-8, -1), (-0.0000033484541, 6.6971616e-8, -1), (0, -3.3866286e-8, 1), (0, -3.3866286e-8, 1), (0, -3.3866286e-8, 1), (0, -3.3866286e-8, 1), (4.901697e-8, -1, 0), (4.901697e-8, -1, 0), (4.901697e-8, -1, 0), (4.901697e-8, -1, 0), (-1, 4.281945e-8, 0), (-1, 4.281945e-8, 0), (-1, 4.281945e-8, 0), (-1, 4.281945e-8, 0), (-2.3875408e-8, 1, 1.5148657e-13), (-2.3875408e-8, 1, 1.5148657e-13), (-2.3875408e-8, 1, 1.5148657e-13), (-2.3875408e-8, 1, 1.5148657e-13), (9.311896e-7, 1, 0), (9.311896e-7, 1, 0), (9.311896e-7, 1, 0), (0, -1, -1.924734e-7), (0, -1, -1.924734e-7), (0, -1, -1.924734e-7), (0, -1, -1.924734e-7), (9.311018e-7, 1, 0), (9.311018e-7, 1, 0), (9.311018e-7, 1, 0), (0.0000024069077, 6.6971516e-8, -1), (0.0000024069077, 6.6971516e-8, -1), (0.0000024069077, 6.6971516e-8, -1), (0.0000024069077, 6.6971516e-8, -1), (1, -2.5870234e-8, 0), (1, -2.5870234e-8, 0), (1, -2.5870234e-8, 0), (-0.99999994, -2.9874045e-8, 0), (-0.99999994, -2.9874045e-8, 0), (-0.99999994, -2.9874045e-8, 0), (-0.99999994, -2.9874045e-8, 0), (0.99999994, -5.974809e-8, 0), (0.99999994, -5.974809e-8, 0), (0.99999994, -5.974809e-8, 0), (0.99999994, -5.974809e-8, 0), (0, -0.0000029802263, -1), (0, -0.0000029802263, -1), (0, -0.0000029802263, -1), (0, -0.0000029802263, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0.5), (0, 0.5, 0.5), (0.5, 0, 0.05), (0.5, 0, 0.5), (0.5, 0.5, 0.5), (0, 0, -1.8626451e-9), (0, 0, 0.049999997), (0, 0.05, -1.8626451e-9), (0, 0.05, 0.049999997), (0.05, 0, -1.8626451e-9), (0.05, 0, 0.049999997), (0.05, 0.05, -1.8626451e-9), (0.05, 0.05, 0.049999997), (0.45000002, 0, -1.8626451e-9), (0.45000002, 0, 0.049999997), (0.45000002, 0.05, -1.8626451e-9), (0.45000002, 0.05, 0.049999997), (0.5, 0, -1.8626451e-9), (0.5, 0.05, -1.8626451e-9), (0, 0.45000002, 0), (0, 0.5, 0), (0, 0.5, 0.049999997), (0.05, 0.45000002, 0), (0.05, 0.45000002, 0.049999997), (0.05, 0.5, 0), (0.05, 0.5, 0.049999997), (0.45000002, 0.45000002, 0), (0.45000002, 0.5, 0), (0.45000002, 0.5, 0.049999997), (0.5, 0.45000002, 0), (0.5, 0.5, 0), (0.5, 0.5, 0.049999997), (0, 0, 0.1), (0, 0.5, 0.1), (0.5, 0.5, 0.1), (0.5, 0, 0.1), (0.45000002, 0, 0.1), (0.050000012, 0, 0.1), (0.5, 0.050000027, 0.05), (0.5, 0.45, 0.049999997), (0, 0.45, 0.049999997), (0.45000002, 0.45, 0.05), (0.45000002, 0, 0.45), (0.050000012, 0, 0.45), (0.050000012, 0.44999996, 0.1), (0.45000002, 0.44999996, 0.1), (0.050000027, 0.44999996, 0.45000002), (0.45000002, 0.44999996, 0.45000002), (0.45000002, 0.44999996, 0.30000007), (0.05000002, 0.44999996, 0.30000007), (0.050000027, 0.44999996, 0.45000002), (0.45000002, 0.44999996, 0.45000002), (0.059999526, -9.311444e-9, 0.45), (0.43999964, 9.311381e-9, 0.45), (0.050000012, 0, 0.30000004), (0.45000002, 0, 0.30000004), (0.45000002, 0, 0.45), (0.050000012, 0, 0.45), (0.059999526, 0.44, 0.45000002), (0.43999967, 0.44, 0.45000002), (0.43999967, 0.44, 0.30000007), (0.43999964, 0.01000003, 0.30000007), (0.059999526, 0.44, 0.30000007), (0.05999954, 0.010000011, 0.30000007), (0.45000002, 0, 0.43999994), (0.050000012, 0, 0.43999994), (0.059999526, -9.311444e-9, 0.43999994), (0.43999964, 9.311381e-9, 0.43999994), (0.05999954, 0.010000011, 0.4399999), (0.43999964, 0.01000003, 0.4399999)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Wardrobe"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 3.6000003814697266, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Wardrobe" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-2.7939677e-9, 0, 0), (0.51000005, 1, 2)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 7, 6, 4, 5, 1, 0, 2, 6, 4, 0, 7, 3, 1, 5, 6, 7, 5, 4, 10, 27, 26, 14, 48, 8, 12, 49, 52, 11, 15, 53, 19, 18, 9, 13, 23, 22, 10, 14, 31, 19, 13, 28, 29, 18, 19, 31, 8, 21, 20, 12, 11, 24, 25, 15, 54, 55, 25, 24, 53, 15, 25, 55, 9, 30, 28, 13, 22, 23, 17, 16, 14, 26, 17, 23, 39, 35, 33, 37, 36, 32, 35, 39, 34, 38, 37, 33, 47, 43, 42, 46, 44, 40, 43, 47, 41, 45, 46, 42, 21, 50, 51, 20, 20, 51, 49, 12, 51, 50, 48, 49, 27, 16, 17, 26, 47, 46, 45, 44, 53, 55, 54, 52, 42, 43, 40, 41, 39, 37, 38, 36, 33, 35, 32, 34, 28, 30, 29, 31]
            rel material:binding = </root/_materials/WoodFurniture>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, -1.1641555e-8, -1), (0, -1.1641555e-8, -1), (0, -1.1641555e-8, -1), (0, -1.1641555e-8, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1.1641554e-8, -1), (0, 1.1641554e-8, -1), (0, 1.1641554e-8, -1), (0, 1.1641554e-8, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 6.4692024e-8, 0), (1, 6.4692024e-8, 0), (1, 6.4692024e-8, 0), (1, 6.4692024e-8, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-2.7939677e-9, 0, 0), (-2.7939677e-9, 0, 2), (-2.7939677e-9, 1, 0), (-2.7939677e-9, 1, 2), (0.5, 0, 0), (0.5, 0, 2), (0.5, 1, 0), (0.5, 1, 2), (0.5, 0.01, 0.01), (0.5, 0.010000001, 1.99), (0.5, 0.99, 0.01), (0.5, 0.99, 1.99), (0.51000005, 0.01, 0.01), (0.51000005, 0.010000001, 1.99), (0.51000005, 0.99, 0.01), (0.51000005, 0.99, 1.99), (0.5, 0.51, 0.490125), (0.51000005, 0.51, 0.490125), (0.5, 0.48999992, 1.99), (0.51000005, 0.48999992, 1.99), (0.51000005, 0.49, 0.010000005), (0.5, 0.49, 0.010000005), (0.5, 0.51, 0.010000005), (0.51000005, 0.51, 0.010000005), (0.5, 0.51, 1.99), (0.51000005, 0.51, 1.99), (0.51000005, 0.99, 0.490125), (0.5, 0.99, 0.490125), (0.51000005, 0.010000001, 1.51), (0.5, 0.48999992, 1.51), (0.5, 0.010000001, 1.51), (0.51000005, 0.48999992, 1.51), (0.5, 0.48999992, 1.49), (0.51000005, 0.010000001, 1.49), (0.5, 0.010000001, 1.49), (0.51000005, 0.48999992, 1.49), (0.5, 0.48999992, 1.01), (0.51000005, 0.010000001, 1.01), (0.5, 0.010000001, 1.01), (0.51000005, 0.48999992, 1.01), (0.5, 0.48999992, 0.99), (0.5, 0.010000001, 0.99), (0.51000005, 0.010000001, 0.99), (0.51000005, 0.48999992, 0.99), (0.5, 0.48999992, 0.51), (0.5, 0.010000001, 0.51), (0.51000005, 0.010000001, 0.51), (0.51000005, 0.48999992, 0.51), (0.5, 0.01, 0.489875), (0.51000005, 0.01, 0.489875), (0.5, 0.49, 0.489875), (0.51000005, 0.49, 0.489875), (0.5, 0.99, 0.51), (0.51000005, 0.99, 0.51), (0.5, 0.51, 0.51), (0.51000005, 0.51, 0.51)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "WoodFurniture" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]
                rel material:binding = </root/_materials/WoodFurniture>
            }

            def GeomSubset "Grey" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5]
                rel material:binding = </root/_materials/Grey>
            }
        }
    }

    def Xform "DeskDrawers"
    {
        matrix4d xformOp:transform = ( (7.549790126404332e-8, 1, 0, 0), (-1, 7.549790126404332e-8, 0, 0), (0, 0, 1, 0), (1.149999976158142, 2.0199999809265137, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "DeskDrawers" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(0, 0, 0), (0.39999998, 0.505, 0.5)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 3, 4, 3, 3, 4, 4, 3]
            int[] faceVertexIndices = [11, 1, 3, 12, 12, 3, 7, 16, 16, 7, 5, 20, 20, 5, 1, 11, 2, 6, 4, 0, 7, 3, 1, 5, 38, 23, 8, 39, 35, 22, 9, 32, 31, 21, 10, 28, 27, 20, 11, 24, 37, 19, 23, 38, 34, 18, 22, 35, 30, 17, 21, 31, 26, 16, 20, 27, 36, 15, 46, 34, 33, 44, 45, 17, 30, 43, 26, 25, 40, 41, 39, 8, 15, 36, 32, 9, 14, 33, 28, 10, 13, 29, 24, 11, 12, 25, 10, 24, 25, 13, 13, 25, 26, 17, 17, 26, 27, 21, 21, 27, 24, 10, 9, 28, 29, 14, 14, 29, 30, 18, 18, 30, 31, 22, 22, 31, 28, 9, 8, 32, 33, 15, 15, 33, 34, 19, 19, 34, 35, 23, 23, 35, 32, 8, 0, 39, 36, 2, 2, 36, 37, 6, 6, 37, 38, 4, 4, 38, 39, 0, 40, 12, 16, 41, 25, 12, 40, 16, 26, 41, 42, 13, 17, 43, 30, 29, 42, 43, 29, 13, 42, 44, 14, 18, 45, 33, 14, 44, 18, 34, 45, 46, 15, 19, 47, 37, 36, 46, 47, 19, 37, 47]
            rel material:binding = </root/_materials/WoodFurniture>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, 0.8944272, 0.44721365), (0, 0.8944272, 0.44721365), (0, 0.8944272, 0.44721365), (0, 0.8944272, 0.44721365), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0.8944272, 0.44721365), (0, 0.8944272, 0.44721365), (0, 0.8944272, 0.44721365), (0, 0.8944272, 0.44721365), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0.89442664, 0.4472147), (0, 0.89442664, 0.4472147), (0, 0.89442664, 0.4472147), (0, 0.89442664, 0.4472147), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0.8944268, 0.44721442), (0, 0.8944268, 0.44721442), (0, 0.8944268, 0.44721442), (0, 0.8944268, 0.44721442), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0), (0, 0, 0.5), (0, 0.5, 0), (0, 0.5, 0.5), (0.39999998, 0, 0), (0.39999998, 0, 0.5), (0.39999998, 0.5, 0), (0.39999998, 0.5, 0.5), (0, 0, 0.12), (0, 0, 0.24), (0, 0, 0.36), (0, 0, 0.49), (0, 0.5, 0.49), (0, 0.5, 0.36), (0, 0.5, 0.24), (0, 0.5, 0.12), (0.39999998, 0.5, 0.49), (0.39999998, 0.5, 0.36), (0.39999998, 0.5, 0.24), (0.39999998, 0.5, 0.12), (0.39999998, 0, 0.49), (0.39999998, 0, 0.36), (0.39999998, 0, 0.24), (0.39999998, 0, 0.12), (0, 0, 0.48), (0, 0.5, 0.48), (0.39999998, 0.5, 0.48), (0.39999998, 0, 0.48), (0, 0, 0.35), (0, 0.5, 0.35), (0.39999998, 0.5, 0.35), (0.39999998, 0, 0.35), (0, 0, 0.23), (0, 0.5, 0.23), (0.39999998, 0.5, 0.23), (0.39999998, 0, 0.23), (0, 0.5, 0.11), (0.39999998, 0.5, 0.11), (0.39999998, 0, 0.11), (0, 0, 0.11), (0, 0.505, 0.48), (0.39999998, 0.505, 0.48), (0, 0.505, 0.35), (0.39999998, 0.505, 0.35), (0, 0.505, 0.23), (0.39999998, 0.505, 0.23), (0, 0.505, 0.11), (0.39999998, 0.505, 0.11)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Chair"
    {
        matrix4d xformOp:transform = ( (7.549790126404332e-8, 1, 0, 0), (-1, 7.549790126404332e-8, 0, 0), (0, 0, 1, 0), (0.9000000357627869, 2.799999952316284, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Chair" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.29999998, 0, 0), (0.29999998, 0.540625, 1.3399999)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [8, 1, 3, 9, 10, 7, 1, 8, 5, 3, 1, 7, 0, 2, 17, 16, 3, 5, 13, 12, 6, 10, 8, 0, 0, 8, 9, 2, 2, 9, 11, 4, 14, 12, 13, 15, 11, 9, 14, 15, 5, 11, 15, 13, 9, 3, 12, 14, 17, 18, 19, 16, 4, 6, 19, 18, 6, 0, 16, 19, 20, 21, 23, 22, 18, 17, 40, 41, 2, 4, 21, 20, 4, 18, 23, 21, 33, 35, 30, 31, 28, 29, 31, 30, 37, 39, 29, 28, 24, 25, 38, 36, 39, 37, 35, 33, 24, 36, 37, 28, 27, 26, 34, 32, 33, 32, 38, 39, 27, 32, 33, 31, 34, 26, 30, 35, 25, 27, 31, 29, 26, 24, 28, 30, 38, 25, 29, 39, 38, 32, 34, 36, 35, 37, 36, 34, 49, 48, 45, 47, 23, 18, 41, 43, 17, 22, 42, 40, 22, 23, 43, 42, 45, 44, 46, 47, 73, 72, 61, 62, 75, 60, 80, 87, 69, 68, 58, 57, 41, 40, 51, 48, 40, 42, 50, 51, 42, 43, 49, 50, 43, 41, 48, 49, 55, 54, 53, 52, 67, 66, 54, 55, 64, 67, 55, 52, 66, 65, 53, 54, 58, 59, 56, 57, 60, 61, 81, 80, 71, 70, 56, 59, 68, 71, 59, 58, 63, 62, 61, 60, 74, 73, 62, 63, 69, 57, 79, 84, 75, 74, 63, 60, 17, 2, 20, 22, 25, 24, 26, 27, 50, 46, 65, 66, 44, 51, 67, 64, 51, 50, 66, 67, 46, 44, 64, 65, 48, 51, 71, 68, 51, 44, 70, 71, 44, 45, 69, 70, 45, 48, 68, 69, 46, 50, 74, 75, 47, 46, 75, 72, 50, 49, 73, 74, 49, 47, 72, 73, 83, 82, 76, 77, 85, 84, 79, 78, 86, 87, 80, 81, 61, 72, 86, 81, 56, 70, 85, 78, 52, 53, 77, 76, 65, 64, 82, 83, 70, 69, 84, 85, 64, 52, 76, 82, 72, 75, 87, 86, 57, 56, 78, 79, 53, 65, 83, 77, 92, 93, 91, 89, 10, 92, 89, 7, 5, 7, 89, 91, 88, 96, 97, 90, 91, 94, 13, 5, 6, 88, 92, 10, 88, 90, 93, 92, 90, 4, 11, 93, 95, 15, 13, 94, 11, 15, 95, 93, 93, 95, 94, 91, 97, 96, 19, 18, 6, 19, 96, 88, 98, 99, 23, 21, 18, 41, 116, 97, 90, 98, 21, 4, 109, 107, 106, 111, 104, 106, 107, 105, 113, 104, 105, 115, 100, 112, 114, 101, 115, 109, 111, 113, 100, 104, 113, 112, 103, 108, 110, 102, 109, 115, 114, 108, 103, 107, 109, 108, 110, 111, 106, 102, 101, 105, 107, 103, 102, 106, 104, 100, 114, 115, 105, 101, 114, 112, 110, 108, 111, 110, 112, 113, 97, 116, 117, 99, 99, 117, 43, 23, 45, 47, 119, 118, 137, 145, 141, 128, 41, 48, 121, 116, 116, 121, 120, 117, 117, 120, 49, 43, 125, 122, 123, 124, 133, 125, 124, 132, 130, 122, 125, 133, 132, 124, 123, 131, 58, 57, 126, 127, 128, 141, 81, 61, 135, 127, 126, 134, 68, 58, 127, 135, 129, 128, 61, 62, 136, 129, 62, 73, 137, 128, 129, 136, 97, 99, 98, 90, 101, 103, 102, 100, 120, 132, 131, 119, 118, 130, 133, 121, 121, 133, 132, 120, 119, 131, 130, 118, 48, 68, 135, 121, 121, 135, 134, 118, 118, 134, 69, 45, 119, 137, 136, 120, 47, 72, 137, 119, 120, 136, 73, 49, 143, 139, 138, 142, 144, 140, 79, 84, 86, 81, 141, 145, 126, 140, 144, 134, 122, 138, 139, 123, 131, 143, 142, 130, 134, 144, 84, 69, 130, 142, 138, 122, 72, 86, 145, 137, 57, 79, 140, 126, 123, 139, 143, 131]
            rel material:binding = </root/_materials/Black>
            normal3f[] normals = [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -0.99998045, -0.006249674), (0, -0.99998045, -0.006249674), (0, -0.99998045, -0.006249674), (0, -0.99998045, -0.006249674), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0.44721413, -0.89442694), (0, 0.44721413, -0.89442694), (0, 0.44721413, -0.89442694), (0, 0.44721413, -0.89442694), (0, -0.999481, 0.0322098), (0, -0.999481, 0.0322098), (0, -0.999481, 0.0322098), (0, -0.999481, 0.0322098), (0.9935577, 0, -0.11332762), (0.9935577, 0, -0.11332762), (0.9935577, 0, -0.11332762), (0.9935577, 0, -0.11332762), (0, 0.9995121, -0.031234706), (0, 0.9995121, -0.031234706), (0, 0.9995121, -0.031234706), (0, 0.9995121, -0.031234706), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.44721413, 0.89442694), (0, 0.44721413, 0.89442694), (0, 0.44721413, 0.89442694), (0, 0.44721413, 0.89442694), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0.8944275, 0.44721308, 0), (0.8944275, 0.44721308, 0), (0.8944275, 0.44721308, 0), (0.8944275, 0.44721308, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, -0.043437064, 0.9990561), (0, -0.043437064, 0.9990561), (0, -0.043437064, 0.9990561), (0, -0.043437064, 0.9990561), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, -0.0000020425616, 0), (-1, -0.0000020425616, 0), (-1, -0.0000020425616, 0), (-1, -0.0000020425616, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -0.99999976, 0.00076361356), (0, -0.99999976, 0.00076361356), (0, -0.99999976, 0.00076361356), (0, -0.99999976, 0.00076361356), (1, -0.0000010998463, 0), (1, -0.0000010998463, 0), (1, -0.0000010998463, 0), (1, -0.0000010998463, 0), (1, 0.0000010998409, 0), (1, 0.0000010998409, 0), (1, 0.0000010998409, 0), (1, 0.0000010998409, 0), (0, 0.9999999, 0.00064489443), (0, 0.9999999, 0.00064489443), (0, 0.9999999, 0.00064489443), (0, 0.9999999, 0.00064489443), (0, -0.9999999, 0.00064489443), (0, -0.9999999, 0.00064489443), (0, -0.9999999, 0.00064489443), (0, -0.9999999, 0.00064489443), (-1, 0.0000020425716, 0), (-1, 0.0000020425716, 0), (-1, 0.0000020425716, 0), (-1, 0.0000020425716, 0), (-0.0000011008557, 0, -1), (-0.0000011008557, 0, -1), (-0.0000011008557, 0, -1), (-0.0000011008557, 0, -1), (0, 0.9999997, 0.00076361344), (0, 0.9999997, 0.00076361344), (0, 0.9999997, 0.00076361344), (0, 0.9999997, 0.00076361344), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0.042878937, 0, 0.99908024), (0.042878937, 0, 0.99908024), (0.042878937, 0, 0.99908024), (0.042878937, 0, 0.99908024), (0, 0.043437045, 0.9990561), (0, 0.043437045, 0.9990561), (0, 0.043437045, 0.9990561), (0, 0.043437045, 0.9990561), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-6.1923123e-7, 0, -1), (-6.1923123e-7, 0, -1), (-6.1923123e-7, 0, -1), (-6.1923123e-7, 0, -1), (-0.0000012681857, -1, 0), (-0.0000012681857, -1, 0), (-0.0000012681857, -1, 0), (-0.0000012681857, -1, 0), (6.340928e-7, 1, 0), (6.340928e-7, 1, 0), (6.340928e-7, 1, 0), (6.340928e-7, 1, 0), (-0.000002980222, -1, 0), (-0.000002980222, -1, 0), (-0.000002980222, -1, 0), (-0.000002980222, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (-1.513385e-7, -7.450585e-7, -1), (-1.513385e-7, -7.450585e-7, -1), (-1.513385e-7, -7.450585e-7, -1), (-1.513385e-7, -7.450585e-7, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-0.0000010568214, 0, 1), (-0.0000010568214, 0, 1), (-0.0000010568214, 0, 1), (-0.0000010568214, 0, 1), (-1.2790697e-7, 1, 0), (-1.2790697e-7, 1, 0), (-1.2790697e-7, 1, 0), (-1.2790697e-7, 1, 0), (2.5581394e-7, -1, 0), (2.5581394e-7, -1, 0), (2.5581394e-7, -1, 0), (2.5581394e-7, -1, 0), (0.54130465, 0, -0.8408265), (0.54130465, 0, -0.8408265), (0.54130465, 0, -0.8408265), (0.54130465, 0, -0.8408265), (-0.54130465, 0, 0.8408265), (-0.54130465, 0, 0.8408265), (-0.54130465, 0, 0.8408265), (-0.54130465, 0, 0.8408265), (-2.5983258e-7, -0.58123827, -0.8137334), (-2.5983258e-7, -0.58123827, -0.8137334), (-2.5983258e-7, -0.58123827, -0.8137334), (-2.5983258e-7, -0.58123827, -0.8137334), (1, -6.9294797e-9, 0), (1, -6.9294797e-9, 0), (1, -6.9294797e-9, 0), (1, -6.9294797e-9, 0), (4.907952e-7, 0.58123827, 0.8137334), (4.907952e-7, 0.58123827, 0.8137334), (4.907952e-7, 0.58123827, 0.8137334), (4.907952e-7, 0.58123827, 0.8137334), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 7.658899e-9, 0), (1, 7.658899e-9, 0), (1, 7.658899e-9, 0), (1, 7.658899e-9, 0), (0, -0.6196444, 0.78488266), (0, -0.6196444, 0.78488266), (0, -0.6196444, 0.78488266), (0, -0.6196444, 0.78488266), (0, 0.6196444, -0.78488266), (0, 0.6196444, -0.78488266), (0, 0.6196444, -0.78488266), (0, 0.6196444, -0.78488266), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 7.450585e-7, 1), (0, 7.450585e-7, 1), (0, 7.450585e-7, 1), (0, 7.450585e-7, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, -8.732459e-9, 0), (1, -8.732459e-9, 0), (1, -8.732459e-9, 0), (1, -8.732459e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (7.4505544e-7, 1, 0), (7.4505544e-7, 1, 0), (7.4505544e-7, 1, 0), (7.4505544e-7, 1, 0), (-9.511392e-7, -1, 4.95385e-7), (-9.511392e-7, -1, 4.95385e-7), (-9.511392e-7, -1, 4.95385e-7), (-9.511392e-7, -1, 4.95385e-7), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0.0000014901109, -1, 0), (-0.0000014901109, -1, 0), (-0.0000014901109, -1, 0), (-0.0000014901109, -1, 0), (6.340929e-7, 1, 0), (6.340929e-7, 1, 0), (6.340929e-7, 1, 0), (6.340929e-7, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -0.99998045, -0.006249674), (0, -0.99998045, -0.006249674), (0, -0.99998045, -0.006249674), (0, -0.99998045, -0.006249674), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0.44721413, -0.89442694), (0, 0.44721413, -0.89442694), (0, 0.44721413, -0.89442694), (0, 0.44721413, -0.89442694), (0, -0.999481, 0.032209773), (0, -0.999481, 0.032209773), (0, -0.999481, 0.032209773), (0, -0.999481, 0.032209773), (-0.9935577, 0, -0.11332762), (-0.9935577, 0, -0.11332762), (-0.9935577, 0, -0.11332762), (-0.9935577, 0, -0.11332762), (0, 0.9995121, -0.031234706), (0, 0.9995121, -0.031234706), (0, 0.9995121, -0.031234706), (0, 0.9995121, -0.031234706), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.44721392, 0.89442694), (0, 0.44721392, 0.89442694), (0, 0.44721392, 0.89442694), (0, 0.44721392, 0.89442694), (-0.8944274, 0.4472133, 0), (-0.8944274, 0.4472133, 0), (-0.8944274, 0.4472133, 0), (-0.8944274, 0.4472133, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, -0.043437056, 0.9990561), (0, -0.043437056, 0.9990561), (0, -0.043437056, 0.9990561), (0, -0.043437056, 0.9990561), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, -0.0000025139223, 0), (1, -0.0000025139223, 0), (1, -0.0000025139223, 0), (1, -0.0000025139223, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -0.9999997, 0.00076361344), (0, -0.9999997, 0.00076361344), (0, -0.9999997, 0.00076361344), (0, -0.9999997, 0.00076361344), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0.9999999, 0.00064489443), (0, 0.9999999, 0.00064489443), (0, 0.9999999, 0.00064489443), (0, 0.9999999, 0.00064489443), (0, -0.9999999, 0.00064489443), (0, -0.9999999, 0.00064489443), (0, -0.9999999, 0.00064489443), (0, -0.9999999, 0.00064489443), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.0000011008557, 0, -1), (0.0000011008557, 0, -1), (0.0000011008557, 0, -1), (0.0000011008557, 0, -1), (0, 0.99999976, 0.00076361356), (0, 0.99999976, 0.00076361356), (0, 0.99999976, 0.00076361356), (0, 0.99999976, 0.00076361356), (-0.04287888, 0, 0.99908024), (-0.04287888, 0, 0.99908024), (-0.04287888, 0, 0.99908024), (-0.04287888, 0, 0.99908024), (0, 0.043437045, 0.9990561), (0, 0.043437045, 0.9990561), (0, 0.043437045, 0.9990561), (0, 0.043437045, 0.9990561), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (6.4895477e-7, 0, -1), (6.4895477e-7, 0, -1), (6.4895477e-7, 0, -1), (6.4895477e-7, 0, -1), (0.0000012681855, -1, 0), (0.0000012681855, -1, 0), (0.0000012681855, -1, 0), (0.0000012681855, -1, 0), (-6.340928e-7, 1, 0), (-6.340928e-7, 1, 0), (-6.340928e-7, 1, 0), (-6.340928e-7, 1, 0), (0.000002980222, -1, 0), (0.000002980222, -1, 0), (0.000002980222, -1, 0), (0.000002980222, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0.99999994, -8.7324485e-9, 0), (-0.99999994, -8.7324485e-9, 0), (-0.99999994, -8.7324485e-9, 0), (-0.99999994, -8.7324485e-9, 0), (2.9103745e-7, -7.450585e-7, -1), (2.9103745e-7, -7.450585e-7, -1), (2.9103745e-7, -7.450585e-7, -1), (2.9103745e-7, -7.450585e-7, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0.0000010568214, 0, 1), (0.0000010568214, 0, 1), (0.0000010568214, 0, 1), (0.0000010568214, 0, 1), (1.2790697e-7, 1, 0), (1.2790697e-7, 1, 0), (1.2790697e-7, 1, 0), (1.2790697e-7, 1, 0), (-2.5581394e-7, -1, 0), (-2.5581394e-7, -1, 0), (-2.5581394e-7, -1, 0), (-2.5581394e-7, -1, 0), (-0.54130465, 0, -0.8408265), (-0.54130465, 0, -0.8408265), (-0.54130465, 0, -0.8408265), (-0.54130465, 0, -0.8408265), (0.54130465, 0, 0.8408264), (0.54130465, 0, 0.8408264), (0.54130465, 0, 0.8408264), (0.54130465, 0, 0.8408264), (0, -0.58123827, -0.8137334), (0, -0.58123827, -0.8137334), (0, -0.58123827, -0.8137334), (0, -0.58123827, -0.8137334), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-3.6087891e-7, 0.58123827, 0.8137334), (-3.6087891e-7, 0.58123827, 0.8137334), (-3.6087891e-7, 0.58123827, 0.8137334), (-3.6087891e-7, 0.58123827, 0.8137334), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -0.6196444, 0.78488266), (0, -0.6196444, 0.78488266), (0, -0.6196444, 0.78488266), (0, -0.6196444, 0.78488266), (0, 0.6196444, -0.78488266), (0, 0.6196444, -0.78488266), (0, 0.6196444, -0.78488266), (0, 0.6196444, -0.78488266), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 7.450585e-7, 1), (0, 7.450585e-7, 1), (0, 7.450585e-7, 1), (0, 7.450585e-7, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-7.4505544e-7, 1, 0), (-7.4505544e-7, 1, 0), (-7.4505544e-7, 1, 0), (-7.4505544e-7, 1, 0), (9.511392e-7, -1, 4.95385e-7), (9.511392e-7, -1, 4.95385e-7), (9.511392e-7, -1, 4.95385e-7), (9.511392e-7, -1, 4.95385e-7), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0.0000014901109, -1, 0), (0.0000014901109, -1, 0), (0.0000014901109, -1, 0), (0.0000014901109, -1, 0), (-6.340929e-7, 1, 0), (-6.340929e-7, 1, 0), (-6.340929e-7, 1, 0), (-6.340929e-7, 1, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.25300005, 0.52, 0.5), (-0.18000004, 0.539375, 1.3399999), (-0.25300005, 0.5, 0.5), (-0.18000004, 0.52, 1.3399999), (0, 0.5, 0.5), (0, 0.52, 1.3399999), (0, 0.52, 0.5), (0, 0.539375, 1.3399999), (-0.18000004, 0.540625, 1.14), (-0.18000004, 0.52, 1.14), (0, 0.540625, 1.14), (0, 0.52, 1.14), (-0.17000005, 0.5, 1.3299999), (0, 0.5, 1.3299999), (-0.17000005, 0.5, 1.15), (0, 0.5, 1.15), (-0.25300005, 0.52, 0.45), (-0.25300005, 0.5, 0.45), (0, 0.5, 0.45), (0, 0.52, 0.45), (-0.25300005, 0, 0.5), (0, 0, 0.5), (-0.25300005, 0, 0.45), (0, 0, 0.45), (-0.25300005, 0.4, 0.46), (-0.25300005, 0.099999994, 0.46), (-0.29999998, 0.4, 0.45999998), (-0.29999998, 0.099999994, 0.45999998), (-0.25300005, 0.400168, 0.7205), (-0.25300005, 0.099832, 0.7205), (-0.29999998, 0.400168, 0.7205), (-0.29999998, 0.099832, 0.7205), (-0.29999998, 0.10599998, 0.49050003), (-0.29999998, 0.10616797, 0.7105), (-0.29999998, 0.394, 0.49050003), (-0.29999998, 0.393832, 0.7105), (-0.25300005, 0.394, 0.4905), (-0.25300005, 0.393832, 0.7105), (-0.25300005, 0.10599998, 0.4905), (-0.25300005, 0.10616797, 0.7105), (-0.02000007, 0.27000004, 0.44000003), (0, 0.27000004, 0.44000003), (-0.02000007, 0.23000002, 0.44000003), (0, 0.23000002, 0.44000003), (-0.02000007, 0.27000004, 0.19000003), (0, 0.27000004, 0.19000003), (-0.02000007, 0.23000002, 0.19000003), (0, 0.23000002, 0.19000003), (0, 0.27000004, 0.23000005), (0, 0.23000002, 0.23000005), (-0.02000007, 0.23000002, 0.23000005), (-0.02000007, 0.27000004, 0.23000005), (-0.29999998, 0.27000004, 0.04000002), (-0.29999998, 0.23000002, 0.04000002), (-0.29999998, 0.23000002, 0.08000004), (-0.29999998, 0.27000004, 0.08000004), (-0.02000007, 0.52000004, 0.03999999), (0, 0.52, 0.03999999), (0, 0.52, 0.08000001), (-0.02000007, 0.52000004, 0.08000001), (-0.02000007, 0, 0.03999999), (0, 0, 0.03999999), (0, 0, 0.08000001), (-0.02000007, 0, 0.08000001), (-0.25300005, 0.26999998, 0.03999999), (-0.25300005, 0.22999999, 0.03999999), (-0.25300005, 0.22999999, 0.08000001), (-0.25300005, 0.26999998, 0.08000001), (0, 0.48, 0.08000004), (0, 0.48, 0.04000002), (-0.02000007, 0.48000002, 0.04000002), (-0.02000007, 0.48000002, 0.08000004), (0, 0.04000002, 0.03999999), (0, 0.04000002, 0.08000001), (-0.02000007, 0.04000002, 0.08000001), (-0.02000007, 0.04000002, 0.03999999), (-0.29999998, 0.27, 0), (-0.29999998, 0.23000002, 0), (-0.02000007, 0.52, 0), (0, 0.52, 0), (-0.02000007, 0, 0), (0, 0, 0), (-0.25300005, 0.26999998, 0), (-0.25300005, 0.22999999, 0), (0, 0.48, 2.9802322e-8), (-0.02000007, 0.48, 2.9802322e-8), (0, 0.04000002, 0), (-0.02000007, 0.04000002, 0), (0.25300005, 0.52, 0.5), (0.18000004, 0.539375, 1.3399999), (0.25300005, 0.5, 0.5), (0.18000004, 0.52, 1.3399999), (0.18000004, 0.540625, 1.14), (0.18000004, 0.52, 1.14), (0.17000005, 0.5, 1.3299999), (0.17000005, 0.5, 1.15), (0.25300005, 0.52, 0.45), (0.25300005, 0.5, 0.45), (0.25300005, 0, 0.5), (0.25300005, 0, 0.45), (0.25300005, 0.4, 0.46), (0.25300005, 0.099999994, 0.46), (0.29999998, 0.4, 0.45999998), (0.29999998, 0.099999994, 0.45999998), (0.25300005, 0.400168, 0.7205), (0.25300005, 0.099832, 0.7205), (0.29999998, 0.400168, 0.7205), (0.29999998, 0.099832, 0.7205), (0.29999998, 0.10599998, 0.49050003), (0.29999998, 0.10616797, 0.7105), (0.29999998, 0.394, 0.49050003), (0.29999998, 0.393832, 0.7105), (0.25300005, 0.394, 0.4905), (0.25300005, 0.393832, 0.7105), (0.25300005, 0.10599998, 0.4905), (0.25300005, 0.10616797, 0.7105), (0.02000007, 0.27000004, 0.44000003), (0.02000007, 0.23000002, 0.44000003), (0.02000007, 0.27000004, 0.19000003), (0.02000007, 0.23000002, 0.19000003), (0.02000007, 0.23000002, 0.23000005), (0.02000007, 0.27000004, 0.23000005), (0.29999998, 0.27000004, 0.04000002), (0.29999998, 0.23000002, 0.04000002), (0.29999998, 0.23000002, 0.08000004), (0.29999998, 0.27000004, 0.08000004), (0.02000007, 0.52000004, 0.03999999), (0.02000007, 0.52000004, 0.08000001), (0.02000007, 0, 0.03999999), (0.02000007, 0, 0.08000001), (0.25300005, 0.26999998, 0.03999999), (0.25300005, 0.22999999, 0.03999999), (0.25300005, 0.22999999, 0.08000001), (0.25300005, 0.26999998, 0.08000001), (0.02000007, 0.48000002, 0.04000002), (0.02000007, 0.48000002, 0.08000004), (0.02000007, 0.04000002, 0.08000001), (0.02000007, 0.04000002, 0.03999999), (0.29999998, 0.27, 0), (0.29999998, 0.23000002, 0), (0.02000007, 0.52, 0), (0.02000007, 0, 0), (0.25300005, 0.26999998, 0), (0.25300005, 0.22999999, 0), (0.02000007, 0.48, 2.9802322e-8), (0.02000007, 0.04000002, 0)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Heater"
    {
        matrix4d xformOp:transform = ( (7.549790126404332e-8, 1, 0, 0), (-1, 7.549790126404332e-8, 0, 0), (0, 0, 1, 0), (2.4000000953674316, 3.700000047683716, 0.10000000149011612, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Heater" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-5.9604645e-8, -1.4901161e-8, 0), (0.8, 0.100000024, 0.7)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [55, 35, 3, 18, 30, 11, 7, 20, 51, 39, 5, 22, 26, 15, 1, 17, 47, 36, 4, 13, 43, 34, 1, 15, 39, 41, 14, 5, 41, 43, 15, 14, 33, 45, 12, 0, 45, 47, 13, 12, 22, 5, 14, 24, 24, 14, 15, 26, 18, 3, 10, 28, 28, 10, 11, 30, 9, 29, 31, 8, 16, 17, 54, 52, 2, 19, 29, 9, 19, 18, 28, 29, 13, 25, 27, 12, 4, 23, 25, 13, 23, 22, 24, 25, 12, 27, 16, 0, 27, 26, 17, 16, 36, 49, 23, 4, 49, 51, 22, 23, 8, 31, 21, 6, 31, 30, 20, 21, 32, 53, 19, 2, 53, 55, 18, 19, 0, 16, 52, 33, 33, 52, 53, 32, 21, 20, 50, 48, 6, 21, 48, 37, 37, 48, 49, 36, 9, 8, 46, 44, 2, 9, 44, 32, 32, 44, 45, 33, 11, 10, 42, 40, 7, 11, 40, 38, 38, 40, 41, 39, 10, 3, 35, 42, 42, 35, 34, 43, 8, 6, 37, 46, 46, 37, 36, 47, 20, 7, 38, 50, 50, 38, 39, 51, 17, 1, 34, 54, 54, 34, 35, 55, 48, 50, 62, 63, 58, 57, 59, 56, 25, 24, 26, 27, 40, 62, 59, 41, 42, 60, 62, 40, 43, 57, 60, 42, 61, 63, 62, 60, 29, 28, 30, 31, 43, 41, 59, 57, 48, 63, 56, 49, 46, 47, 56, 63, 49, 56, 59, 51, 50, 51, 59, 62, 45, 58, 56, 47, 45, 44, 61, 58, 52, 58, 61, 53, 52, 54, 57, 58, 54, 55, 60, 57, 53, 61, 60, 55, 44, 46, 63, 61]
            rel material:binding = </root/_materials/Grey>
            normal3f[] normals = [(-1, 0.0000029802295, 0), (-1, 0.0000029802295, 0), (-1, 0.0000029802295, 0), (-1, 0.0000029802295, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0.0000046565992, 0), (1, 0.0000046565992, 0), (1, 0.0000046565992, 0), (1, 0.0000046565992, 0), (-7.450583e-7, -1, 0), (-7.450583e-7, -1, 0), (-7.450583e-7, -1, 0), (-7.450583e-7, -1, 0), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (4.6566066e-7, 0, 1), (4.6566066e-7, 0, 1), (4.6566066e-7, 0, 1), (4.6566066e-7, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1.2254231e-8, 0, 1), (-1.2254231e-8, 0, 1), (-1.2254231e-8, 0, 1), (-1.2254231e-8, 0, 1), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1.9606793e-8, -1, 0), (1.9606793e-8, -1, 0), (1.9606793e-8, -1, 0), (1.9606793e-8, -1, 0), (7.450571e-7, 1, 0), (7.450571e-7, 1, 0), (7.450571e-7, 1, 0), (7.450571e-7, 1, 0), (-1.9606793e-8, 1, 0), (-1.9606793e-8, 1, 0), (-1.9606793e-8, 1, 0), (-1.9606793e-8, 1, 0), (-1.960679e-8, 1, 0), (-1.960679e-8, 1, 0), (-1.960679e-8, 1, 0), (-1.960679e-8, 1, 0), (-1, -0.000002980231, 0), (-1, -0.000002980231, 0), (-1, -0.000002980231, 0), (-1, -0.000002980231, 0), (7.4505823e-7, 1, 0), (7.4505823e-7, 1, 0), (7.4505823e-7, 1, 0), (7.4505823e-7, 1, 0), (7.4505766e-7, 1, -3.527715e-9), (7.4505766e-7, 1, -3.527715e-9), (7.4505766e-7, 1, -3.527715e-9), (7.4505766e-7, 1, -3.527715e-9), (1.9606793e-8, -1, 0), (1.9606793e-8, -1, 0), (1.9606793e-8, -1, 0), (1.9606793e-8, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (-7.450576e-7, -1, -5.551115e-13), (-7.450576e-7, -1, -5.551115e-13), (-7.450576e-7, -1, -5.551115e-13), (-7.450576e-7, -1, -5.551115e-13), (-7.4505823e-7, -1, 0), (-7.4505823e-7, -1, 0), (-7.4505823e-7, -1, 0), (-7.4505823e-7, -1, 0), (1, 0.0000046566165, 2.7755597e-13), (1, 0.0000046566165, 2.7755597e-13), (1, 0.0000046566165, 2.7755597e-13), (1, 0.0000046566165, 2.7755597e-13), (1, 0.000004515503, 0), (1, 0.000004515503, 0), (1, 0.000004515503, 0), (1, 0.000004515503, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (-1, 0.0000029802297, 0), (-1, 0.0000029802297, 0), (-1, 0.0000029802297, 0), (-1, 0.0000029802297, 0), (-1, 0.0000029802297, 0), (-1, 0.0000029802297, 0), (-1, 0.0000029802297, 0), (-1, 0.0000029802297, 0), (-1, -0.0000029802313, 2.7755578e-13), (-1, -0.0000029802313, 2.7755578e-13), (-1, -0.0000029802313, 2.7755578e-13), (-1, -0.0000029802313, 2.7755578e-13), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, -0.0000045154998, 0), (1, -0.0000045154998, 0), (1, -0.0000045154998, 0), (1, -0.0000045154998, 0), (1, -0.000004656613, 0), (1, -0.000004656613, 0), (1, -0.000004656613, 0), (1, -0.000004656613, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1.22542225e-8, 0, 0.99999994), (-1.22542225e-8, 0, 0.99999994), (-1.22542225e-8, 0, 0.99999994), (-1.22542225e-8, 0, 0.99999994), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (4.6566004e-7, 0, 1), (4.6566004e-7, 0, 1), (4.6566004e-7, 0, 1), (4.6566004e-7, 0, 1), (0.0000015522035, 0, 1), (0.0000015522035, 0, 1), (0.0000015522035, 0, 1), (0.0000015522035, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, -0.0000046565992, 0), (1, -0.0000046565992, 0), (1, -0.0000046565992, 0), (1, -0.0000046565992, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, -0.0000029802295, 0), (-1, -0.0000029802295, 0), (-1, -0.0000029802295, 0), (-1, -0.0000029802295, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-3.6762735e-9, 1, 5.5701115e-9), (-3.6762735e-9, 1, 5.5701115e-9), (-3.6762735e-9, 1, 5.5701115e-9), (-3.6762735e-9, 1, 5.5701115e-9), (1.960679e-8, -1, 0), (1.960679e-8, -1, 0), (1.960679e-8, -1, 0), (1.960679e-8, -1, 0), (-1, 0, -0.0000029802316), (-1, 0, -0.0000029802316), (-1, 0, -0.0000029802316), (-1, 0, -0.0000029802316), (4.9018e-9, -0.99999994, -6.6662943e-7), (4.9018e-9, -0.99999994, -6.6662943e-7), (4.9018e-9, -0.99999994, -6.6662943e-7), (4.9018e-9, -0.99999994, -6.6662943e-7), (1, -2.4253222e-7, 0.00000293367), (1, -2.4253222e-7, 0.00000293367), (1, -2.4253222e-7, 0.00000293367), (1, -2.4253222e-7, 0.00000293367), (-9.803395e-9, -1, 0), (-9.803395e-9, -1, 0), (-9.803395e-9, -1, 0), (-9.803395e-9, -1, 0), (-1.960679e-8, 1, 1.485363e-8), (-1.960679e-8, 1, 1.485363e-8), (-1.960679e-8, 1, 1.485363e-8), (-1.960679e-8, 1, 1.485363e-8), (-1.4705107e-8, 0.99999994, 5.514398e-7), (-1.4705107e-8, 0.99999994, 5.514398e-7), (-1.4705107e-8, 0.99999994, 5.514398e-7), (-1.4705107e-8, 0.99999994, 5.514398e-7), (2.7163484e-8, 0, 1), (2.7163484e-8, 0, 1), (2.7163484e-8, 0, 1), (2.7163484e-8, 0, 1), (-1, 0, 0.000002980235), (-1, 0, 0.000002980235), (-1, 0, 0.000002980235), (-1, 0, 0.000002980235), (3.7252943e-7, 1, 0), (3.7252943e-7, 1, 0), (3.7252943e-7, 1, 0), (3.7252943e-7, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-8.577971e-9, 1, -7.793706e-7), (-8.577971e-9, 1, -7.793706e-7), (-8.577971e-9, 1, -7.793706e-7), (-8.577971e-9, 1, -7.793706e-7), (1, 9.701286e-8, -0.0000022817424), (1, 9.701286e-8, -0.0000022817424), (1, 9.701286e-8, -0.0000022817424), (1, 9.701286e-8, -0.0000022817424), (3.1820085e-7, 4.6566125e-8, 1), (3.1820085e-7, 4.6566125e-8, 1), (3.1820085e-7, 4.6566125e-8, 1), (3.1820085e-7, 4.6566125e-8, 1), (-4.6565983e-8, 0.99999994, 8.4665475e-9), (-4.6565983e-8, 0.99999994, 8.4665475e-9), (-4.6565983e-8, 0.99999994, 8.4665475e-9), (-4.6565983e-8, 0.99999994, 8.4665475e-9), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (3.725278e-7, -1, -8.819314e-9), (3.725278e-7, -1, -8.819314e-9), (3.725278e-7, -1, -8.819314e-9), (3.725278e-7, -1, -8.819314e-9), (4.9016977e-9, -1, 7.3525536e-7), (4.9016977e-9, -1, 7.3525536e-7), (4.9016977e-9, -1, 7.3525536e-7), (4.9016977e-9, -1, 7.3525536e-7)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0), (0, 0, 0.7), (0, 0.100000024, 0), (0, 0.100000024, 0.7), (0.8, 0, 0), (0.8, 0, 0.7), (0.8, 0.100000024, 0), (0.8, 0.100000024, 0.7), (0.78, 0.100000024, 0), (0.019999996, 0.10000001, 0), (0.020000026, 0.10000001, 0.7), (0.78, 0.100000024, 0.7), (0.020000026, -1.4901161e-8, 0), (0.78, 0, 0), (0.78, 0, 0.7), (0.019999996, -1.4901161e-8, 0.7), (0, 0, 0.019999996), (0, 0, 0.67999995), (0, 0.100000024, 0.67999995), (0, 0.100000024, 0.01999998), (0.8, 0.100000024, 0.67999995), (0.8, 0.100000024, 0.01999998), (0.8, 0, 0.67999995), (0.8, 0, 0.01999998), (0.78, 0, 0.67999995), (0.78, 0, 0.01999998), (0.019999996, -1.4901161e-8, 0.67999995), (0.019999996, -1.4901161e-8, 0.01999998), (0.020000026, 0.10000001, 0.67999995), (0.019999996, 0.10000001, 0.01999998), (0.78, 0.100000024, 0.67999995), (0.78, 0.100000024, 0.01999998), (-5.9604645e-8, 0.080000006, 0), (-5.9604645e-8, 0.020000003, 0), (-5.9604645e-8, 0.020000007, 0.7), (-5.9604645e-8, 0.080000006, 0.7), (0.79999995, 0.020000007, 0), (0.79999995, 0.080000006, 0), (0.79999995, 0.080000006, 0.7), (0.79999995, 0.020000003, 0.7), (0.7799999, 0.080000006, 0.7), (0.7799999, 0.020000003, 0.7), (0.019999957, 0.07999999, 0.7), (0.019999947, 0.019999988, 0.7), (0.019999946, 0.07999999, 0), (0.019999955, 0.019999988, 0), (0.7799999, 0.080000006, 0), (0.7799999, 0.020000003, 0), (0.79999995, 0.080000006, 0.01999998), (0.79999995, 0.020000003, 0.01999998), (0.79999995, 0.080000006, 0.67999995), (0.79999995, 0.020000003, 0.67999995), (-5.9604645e-8, 0.020000007, 0.01999999), (-5.9604645e-8, 0.080000006, 0.019999985), (-5.9604645e-8, 0.020000007, 0.67999995), (-5.9604645e-8, 0.080000006, 0.67999995), (0.78, 0.02000001, 0.01999998), (0.020000001, 0.020000003, 0.67999995), (0.019999996, 0.020000013, 0.01999998), (0.78, 0.02000001, 0.67999995), (0.02000002, 0.08000001, 0.67999995), (0.019999996, 0.08000001, 0.01999998), (0.78, 0.080000006, 0.67999995), (0.78, 0.080000006, 0.01999998)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Smartphone"
    {
        matrix4d xformOp:transform = ( (7.549790126404332e-8, 1, 0, 0), (-1, 7.549790126404332e-8, 0, 0), (0, 0, 1, 0), (0.44999998807907104, 1.149999976158142, 0.5, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Smartphone" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(0, 0, 0), (0.06999999, 0.15999997, 0.0050000027)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 7, 6, 6, 7, 5, 4, 4, 5, 1, 0, 2, 6, 4, 0, 7, 3, 1, 5]
            rel material:binding = </root/_materials/Black>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0), (0, 0, 0.0050000027), (0, 0.15999997, 0), (0, 0.15999997, 0.0050000027), (0.06999999, 0, 0), (0.06999999, 0, 0.0050000027), (0.06999999, 0.15999997, 0), (0.06999999, 0.15999997, 0.0050000027)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "Black" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [4, 5]
                rel material:binding = </root/_materials/Black>
            }

            def GeomSubset "Grey" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3]
                rel material:binding = </root/_materials/Grey>
            }
        }
    }

    def Xform "BedsideLamp"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.04999999701976776, 1.4499999284744263, 0.5, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "BedsideLamp" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(0, 0, 0), (0.100000024, 0.100000024, 0.25)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 7, 6, 6, 7, 5, 4, 4, 5, 1, 0, 2, 6, 4, 0, 7, 3, 1, 5]
            rel material:binding = </root/_materials/White>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0), (0, 0, 0.25), (0, 0.100000024, 0), (0, 0.100000024, 0.25), (0.100000024, 0, 0), (0.100000024, 0, 0.25), (0.100000024, 0.100000024, 0), (0.100000024, 0.100000024, 0.25)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Monitor"
    {
        matrix4d xformOp:transform = ( (7.549790126404332e-8, -1, 0, 0), (1, 7.549790126404332e-8, 0, 0), (0, 0, 1, 0), (1.2000000476837158, 3.1000001430511475, 0.800000011920929, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Monitor" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.0042261793, -0.039063063, 0), (0.6442262, 0.09999999, 0.465)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 3, 3, 4, 4, 3, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 7, 6, 6, 7, 5, 4, 4, 5, 1, 0, 2, 6, 4, 0, 7, 3, 1, 5, 16, 9, 11, 17, 17, 11, 15, 18, 18, 15, 13, 19, 19, 13, 9, 16, 10, 14, 12, 8, 15, 11, 9, 13, 22, 19, 16, 23, 21, 18, 19, 22, 20, 17, 18, 21, 23, 16, 17, 20, 23, 20, 29, 10, 20, 21, 14, 14, 21, 26, 25, 12, 22, 23, 8, 25, 26, 24, 21, 22, 26, 22, 12, 24, 26, 12, 14, 25, 24, 27, 29, 28, 10, 8, 27, 28, 20, 10, 28, 29, 8, 23, 29, 27]
            rel material:binding = </root/_materials/Black>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-3.7252875e-8, -1, 9.313228e-8), (-3.7252875e-8, -1, 9.313228e-8), (-3.7252875e-8, -1, 9.313228e-8), (-3.7252875e-8, -1, 9.313228e-8), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-7.836207e-8, -0.96761733, -0.25242192), (-7.836207e-8, -0.96761733, -0.25242192), (-7.836207e-8, -0.96761733, -0.25242192), (-7.836207e-8, -0.96761733, -0.25242192), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0.96761733, 0.25242192), (0, 0.96761733, 0.25242192), (0, 0.96761733, 0.25242192), (0, 0.96761733, 0.25242192), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-7.8925666e-8, 0, 1), (-7.8925666e-8, 0, 1), (-7.8925666e-8, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.37742612, 0.8937565, 0.2423813), (0.37742612, 0.8937565, 0.2423813), (0.37742612, 0.8937565, 0.2423813), (0.37742612, 0.8937565, 0.2423813), (0, -1, -4.656612e-7), (0, -1, -4.656612e-7), (0, -1, -4.656612e-7), (0, -1, -4.656612e-7), (0.9063068, -0.4226202, 0.0000011641532), (0.9063068, -0.4226202, 0.0000011641532), (0.9063068, -0.4226202, 0.0000011641532), (7.8925666e-8, 0, 1), (7.8925666e-8, 0, 1), (7.8925666e-8, 0, 1), (-0.35335702, -0.9036256, 0.24207374), (-0.35335702, -0.9036256, 0.24207374), (-0.35335702, -0.9036256, 0.24207374), (-0.35335702, -0.9036256, 0.24207374), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.9063078, -0.42261827, -3.6379827e-8), (-0.9063078, -0.42261827, -3.6379827e-8), (-0.9063078, -0.42261827, -3.6379827e-8), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (-0.37742618, 0.8937567, 0.24238108), (-0.37742618, 0.8937567, 0.24238108), (-0.37742618, 0.8937567, 0.24238108), (-0.37742618, 0.8937567, 0.24238108), (0.35335696, -0.90362555, 0.24207392), (0.35335696, -0.90362555, 0.24207392), (0.35335696, -0.90362555, 0.24207392), (0.35335696, -0.90362555, 0.24207392)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0.099999994), (0, 0, 0.465), (0, 0.01999998, 0.099999994), (0, 0.01999998, 0.465), (0.64, 0, 0.099999994), (0.64, 0, 0.465), (0.64, 0.01999998, 0.099999994), (0.64, 0.01999998, 0.465), (0.295, 0.080000006, 0), (0.295, 0.020000009, 0.29999998), (0.295, 0.09999999, 0), (0.295, 0.03999999, 0.29999998), (0.345, 0.080000006, 0), (0.345, 0.020000009, 0.29999998), (0.345, 0.09999999, 0), (0.345, 0.03999999, 0.29999998), (0.295, 0.020000005, 0.25), (0.295, 0.03999999, 0.25), (0.345, 0.03999999, 0.25), (0.345, 0.020000001, 0.25), (0.295, 0.09999999, 0.02), (0.345, 0.09999999, 0.02), (0.345, 0.08, 0.02), (0.295, 0.08, 0.02), (0.63577384, -0.039063063, 0), (0.6442262, -0.020936925, 0), (0.64, -0.029999997, 0.02), (0.0042261775, -0.039063063, 0), (-0.0042261793, -0.020936925, 0), (6.9849193e-10, -0.029999997, 0.02)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "Laptop"
    {
        matrix4d xformOp:transform = ( (7.549790126404332e-8, -1, 0, 0), (1, 7.549790126404332e-8, 0, 0), (0, 0, 1, 0), (0.800000011920929, 3.1000001430511475, 0.800000011920929, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Laptop" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(0, 0, 0), (0.32, 0.24457766, 0.20696159)]
            int[] faceVertexCounts = [4, 4, 4, 3, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [6, 13, 12, 5, 7, 6, 5, 4, 3, 11, 9, 1, 5, 1, 9, 1, 3, 2, 0, 3, 6, 11, 2, 7, 4, 0, 3, 6, 7, 2, 1, 5, 6, 3, 0, 4, 5, 1, 12, 8, 9, 5, 5, 9, 11, 6, 6, 11, 10, 13, 13, 10, 8, 12, 11, 9, 8, 10]
            rel material:binding = </root/_materials/Black>
            normal3f[] normals = [(5.0931714e-8, -0.9848078, 0.17364803), (5.0931714e-8, -0.9848078, 0.17364803), (5.0931714e-8, -0.9848078, 0.17364803), (5.0931714e-8, -0.9848078, 0.17364803), (-4.7293728e-8, -7.4505806e-8, 1), (-4.7293728e-8, -7.4505806e-8, 1), (-4.7293728e-8, -7.4505806e-8, 1), (-4.7293728e-8, -7.4505806e-8, 1), (0, -0.64279014, 0.7660424), (0, -0.64279014, 0.7660424), (0, -0.64279014, 0.7660424), (0, -0.64279014, 0.7660424), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0.0000035463308, 0), (-1, 0.0000035463308, 0), (-1, 0.0000035463308, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -0.17364798, -0.9848077), (0, -0.17364798, -0.9848077), (0, -0.17364798, -0.9848077), (0, -0.17364798, -0.9848077), (1, -4.3655837e-7, 0), (1, -4.3655837e-7, 0), (1, -4.3655837e-7, 0), (1, -4.3655837e-7, 0), (7.27597e-8, 0.17364873, 0.9848077), (7.27597e-8, 0.17364873, 0.9848077), (7.27597e-8, 0.17364873, 0.9848077), (7.27597e-8, 0.17364873, 0.9848077), (0, 0.9848078, -0.17364803), (0, 0.9848078, -0.17364803), (0, 0.9848078, -0.17364803), (0, 0.9848078, -0.17364803)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0), (0, 0.19999999, 0), (0.32, 0, 0), (0.32, 0.19999999, 0), (0, 0, 0.010000005), (0, 0.19999999, 0.010000035), (0.32, 0.19999999, 0.010000035), (0.32, 0, 0.010000035), (0, 0.24457766, 0.2052251), (0, 0.20984805, 0.008263558), (0.32, 0.24457766, 0.2052251), (0.32, 0.20984805, 0.008263558), (0, 0.23472957, 0.20696159), (0.32, 0.2347296, 0.20696157)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "Black" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0]
                rel material:binding = </root/_materials/Black>
            }

            def GeomSubset "Grey" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
                rel material:binding = </root/_materials/Grey>
            }
        }
    }

    def Xform "Console"
    {
        matrix4d xformOp:transform = ( (7.549790126404332e-8, -1, -1.5151288224046766e-8, 0), (0.9848077297210693, 7.698191240024244e-8, -0.1736481785774231, 0), (0.1736481785774231, -1.8110338784183e-9, 0.9848077297210693, 0), (1.100000023841858, 2.750000238418579, 0.800000011920929, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Console" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(0, 0, 0), (0.28999996, 0.03, 0.120000005)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 10, 9, 18, 23, 6, 7, 5, 4, 12, 15, 1, 0, 8, 6, 4, 13, 10, 3, 1, 15, 7, 11, 14, 5, 11, 10, 15, 14, 2, 9, 12, 0, 9, 8, 13, 12, 4, 5, 14, 13, 13, 14, 15, 12, 7, 6, 21, 20, 9, 10, 11, 8, 22, 19, 20, 21, 17, 16, 23, 18, 9, 2, 17, 18, 8, 11, 19, 22, 11, 7, 20, 19, 3, 10, 23, 16, 2, 3, 16, 17, 6, 8, 22, 21]
            rel material:binding = </root/_materials/Black>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0.99999994, -1.0719641e-7, -6.86057e-8), (0.99999994, -1.0719641e-7, -6.86057e-8), (0.99999994, -1.0719641e-7, -6.86057e-8), (0.99999994, -1.0719641e-7, -6.86057e-8), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 1.6767634e-8), (0, 1, 1.6767634e-8), (0, 1, 1.6767634e-8), (0, 1, 1.6767634e-8), (0, 0.47514892, -0.8799054), (0, 0.47514892, -0.8799054), (0, 0.47514892, -0.8799054), (0, 0.47514892, -0.8799054), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, 0.5144958, 0.85749286), (0, 0.5144958, 0.85749286), (0, 0.5144958, 0.85749286), (0, 0.5144958, 0.85749286), (0, 0.51449585, 0.8574929), (0, 0.51449585, 0.8574929), (0, 0.51449585, 0.8574929), (0, 0.51449585, 0.8574929), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, 0.4751489, -0.8799054), (0, 0.4751489, -0.8799054), (0, 0.4751489, -0.8799054), (0, 0.4751489, -0.8799054)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0, 0, 0), (0, 0, 0.120000005), (0, 0.01, 0), (0, 0.01, 0.120000005), (0.28999996, 0, 0), (0.28999996, 0, 0.120000005), (0.28999996, 0.01, 0), (0.28999996, 0.01, 0.120000005), (0.26, 0.01, 0), (0.030000001, 0.01, 0), (0.030000009, 0.01, 0.120000005), (0.26, 0.01, 0.120000005), (0.030000009, 0, 0), (0.26, 0, 0), (0.26, 0, 0.120000005), (0.030000001, 0, 0.120000005), (0, 0.03, 0.108), (0, 0.03, 0.0108), (0.030000001, 0.03, 0.0108), (0.26, 0.03, 0.108), (0.28999996, 0.03, 0.108), (0.28999996, 0.03, 0.0108), (0.26, 0.03, 0.0108), (0.030000009, 0.03, 0.108)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            uniform token subdivisionScheme = "none"
        }
    }

    def Xform "BlocksLighthouse"
    {
        matrix4d xformOp:transform = ( (7.549790126404332e-8, -1, 0, 0), (1, 7.549790126404332e-8, 0, 0), (0, 0, 1, 0), (1.159999966621399, 3.111999750137329, 0.800000011920929, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "BlocksShrine_001" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.23800008, -0.03999996, 0), (-6.7055225e-8, 0.111999966, 0.27600038)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 3, 4, 3, 4, 3, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 3, 4, 4, 3, 4, 3, 4, 3, 3, 4, 3, 3, 4, 3, 3, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 3, 4, 4, 3, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 3, 4, 4, 3, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 3, 4, 3, 4, 3, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 3, 4, 4, 3, 4, 3, 4, 3, 3, 4, 3, 3, 4, 3, 3, 4, 3, 3, 3, 4, 4, 3, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 14, 4, 4, 3, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 8, 4, 5, 4, 4, 4, 4, 7, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 10, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [3, 111, 5, 9, 111, 0, 6, 5, 1, 112, 8, 110, 113, 4, 10, 11, 112, 3, 9, 8, 0, 113, 11, 6, 4, 2, 7, 10, 11, 10, 18, 19, 5, 6, 13, 12, 6, 11, 19, 13, 110, 8, 16, 14, 8, 9, 17, 16, 10, 7, 15, 18, 9, 5, 12, 17, 19, 18, 26, 27, 12, 13, 21, 20, 13, 19, 27, 21, 14, 16, 24, 22, 16, 17, 25, 24, 18, 15, 23, 26, 17, 12, 20, 25, 15, 14, 22, 23, 23, 22, 30, 31, 27, 26, 34, 35, 20, 21, 29, 28, 21, 27, 35, 29, 26, 23, 31, 34, 24, 25, 33, 32, 22, 24, 32, 30, 31, 30, 38, 39, 30, 32, 40, 38, 33, 28, 36, 41, 32, 33, 41, 40, 28, 29, 37, 36, 34, 31, 39, 42, 29, 35, 43, 37, 35, 34, 42, 43, 41, 36, 44, 49, 40, 41, 49, 48, 36, 37, 45, 44, 42, 39, 47, 50, 37, 43, 51, 45, 43, 42, 50, 51, 39, 38, 46, 47, 38, 40, 48, 46, 56, 54, 82, 83, 49, 44, 76, 77, 48, 49, 73, 72, 54, 55, 67, 66, 60, 61, 63, 62, 44, 45, 61, 60, 53, 52, 62, 63, 65, 64, 66, 67, 47, 46, 64, 65, 91, 71, 59, 69, 68, 70, 71, 90, 63, 61, 88, 51, 50, 68, 69, 58, 59, 71, 70, 72, 73, 75, 74, 63, 90, 53, 57, 56, 74, 75, 88, 61, 45, 77, 76, 78, 79, 78, 62, 52, 52, 57, 79, 78, 78, 76, 60, 62, 80, 81, 83, 82, 60, 76, 44, 79, 57, 75, 46, 48, 81, 80, 85, 84, 86, 87, 50, 47, 84, 85, 79, 75, 73, 77, 55, 58, 87, 86, 88, 89, 91, 90, 73, 49, 77, 45, 51, 89, 88, 59, 53, 90, 91, 51, 69, 89, 91, 89, 69, 71, 50, 85, 68, 68, 85, 87, 70, 58, 70, 87, 65, 84, 47, 67, 86, 84, 65, 67, 55, 86, 64, 46, 80, 64, 80, 82, 66, 54, 66, 82, 48, 72, 81, 74, 83, 81, 72, 56, 83, 74, 57, 52, 92, 97, 56, 57, 97, 96, 52, 53, 93, 92, 58, 55, 95, 98, 53, 59, 99, 93, 59, 58, 98, 99, 55, 54, 94, 95, 54, 56, 96, 94, 97, 92, 100, 104, 96, 97, 104, 103, 92, 93, 145, 100, 98, 95, 102, 105, 93, 99, 106, 145, 99, 98, 105, 106, 95, 94, 101, 102, 94, 96, 103, 101, 112, 1, 135, 136, 114, 115, 117, 116, 0, 111, 116, 117, 144, 124, 113, 122, 121, 123, 124, 143, 117, 115, 141, 4, 113, 124, 123, 125, 126, 128, 127, 117, 143, 0, 3, 112, 127, 128, 130, 129, 131, 132, 131, 116, 111, 111, 3, 132, 131, 131, 129, 114, 116, 133, 134, 136, 135, 132, 3, 128, 138, 137, 139, 140, 132, 128, 126, 130, 2, 4, 140, 139, 141, 142, 144, 143, 113, 0, 143, 144, 209, 210, 257, 255, 144, 142, 122, 124, 121, 138, 140, 123, 4, 123, 140, 257, 259, 260, 258, 120, 139, 137, 118, 120, 2, 139, 210, 211, 259, 257, 107, 133, 135, 119, 1, 119, 135, 127, 136, 134, 125, 112, 136, 127, 147, 146, 172, 173, 104, 100, 166, 167, 103, 104, 163, 162, 146, 183, 157, 156, 150, 151, 153, 152, 100, 145, 151, 150, 184, 185, 152, 153, 155, 154, 156, 157, 102, 101, 154, 155, 181, 161, 182, 159, 158, 160, 161, 180, 153, 151, 178, 106, 105, 158, 159, 149, 182, 161, 160, 162, 163, 165, 164, 153, 180, 184, 148, 147, 164, 165, 178, 151, 145, 167, 166, 168, 169, 168, 152, 185, 185, 148, 169, 168, 168, 166, 150, 152, 170, 171, 173, 172, 150, 166, 100, 169, 148, 165, 101, 103, 171, 170, 175, 174, 176, 177, 105, 102, 174, 175, 169, 165, 163, 167, 183, 149, 177, 176, 178, 179, 181, 180, 163, 104, 167, 145, 106, 179, 178, 182, 184, 180, 181, 106, 159, 179, 181, 179, 159, 161, 105, 175, 158, 158, 175, 177, 160, 149, 160, 177, 155, 174, 102, 157, 176, 174, 155, 157, 183, 176, 154, 101, 170, 154, 170, 172, 156, 146, 156, 172, 103, 162, 171, 164, 173, 171, 162, 147, 173, 164, 184, 182, 188, 147, 186, 146, 148, 187, 186, 147, 146, 186, 189, 183, 185, 187, 148, 186, 187, 191, 190, 189, 188, 182, 149, 183, 189, 149, 188, 187, 185, 184, 190, 191, 192, 193, 189, 186, 190, 193, 188, 189, 193, 192, 187, 188, 192, 191, 25, 20, 28, 33, 15, 7, 110, 14, 264, 203, 206, 226, 249, 227, 205, 200, 211, 212, 261, 259, 353, 226, 206, 340, 214, 201, 202, 213, 259, 261, 262, 260, 220, 219, 208, 207, 219, 218, 209, 208, 218, 217, 210, 209, 217, 216, 211, 210, 216, 215, 212, 211, 215, 214, 213, 212, 343, 233, 267, 339, 344, 358, 222, 345, 345, 222, 223, 347, 347, 223, 224, 349, 349, 224, 225, 351, 351, 225, 226, 353, 261, 263, 264, 262, 198, 233, 232, 196, 196, 232, 231, 194, 194, 231, 230, 243, 243, 230, 229, 245, 245, 229, 228, 247, 247, 228, 227, 249, 212, 213, 263, 261, 252, 254, 358, 221, 254, 256, 222, 358, 256, 258, 223, 222, 258, 260, 224, 223, 260, 262, 225, 224, 262, 264, 226, 225, 237, 236, 239, 238, 7, 234, 242, 239, 236, 237, 238, 241, 240, 255, 257, 258, 256, 208, 209, 255, 253, 253, 255, 256, 254, 207, 208, 253, 251, 251, 253, 254, 252, 215, 248, 250, 214, 233, 198, 265, 267, 216, 246, 248, 215, 197, 220, 268, 266, 217, 244, 246, 216, 207, 251, 272, 269, 218, 108, 244, 217, 266, 268, 276, 275, 219, 195, 108, 218, 271, 270, 274, 273, 220, 197, 195, 219, 197, 198, 196, 195, 220, 207, 269, 268, 198, 197, 266, 265, 214, 250, 199, 201, 267, 265, 279, 277, 213, 202, 204, 263, 263, 204, 203, 264, 252, 221, 270, 271, 251, 252, 271, 272, 279, 275, 283, 287, 280, 273, 282, 286, 273, 274, 282, 269, 272, 280, 278, 265, 266, 275, 279, 339, 267, 277, 356, 272, 271, 273, 280, 268, 269, 278, 276, 307, 308, 305, 306, 196, 194, 285, 281, 247, 249, 296, 294, 275, 276, 283, 278, 280, 286, 277, 279, 287, 248, 246, 293, 295, 245, 247, 294, 292, 246, 244, 291, 293, 243, 245, 292, 290, 244, 108, 288, 291, 199, 250, 297, 235, 195, 196, 281, 284, 194, 243, 290, 285, 250, 248, 295, 297, 249, 200, 289, 296, 108, 195, 284, 288, 289, 235, 297, 295, 293, 291, 288, 284, 281, 285, 290, 292, 294, 296, 302, 307, 306, 301, 313, 298, 300, 315, 337, 302, 299, 308, 304, 303, 305, 333, 299, 302, 301, 300, 298, 303, 304, 335, 333, 301, 301, 306, 320, 335, 302, 337, 324, 307, 333, 316, 314, 299, 316, 313, 315, 314, 310, 312, 322, 321, 309, 311, 318, 317, 317, 318, 320, 319, 308, 307, 324, 323, 298, 330, 328, 327, 310, 321, 336, 331, 321, 322, 323, 324, 306, 305, 319, 320, 318, 311, 332, 334, 300, 325, 326, 329, 311, 309, 313, 316, 312, 310, 314, 315, 312, 315, 300, 329, 304, 308, 323, 325, 305, 303, 327, 319, 323, 322, 326, 325, 313, 309, 330, 298, 309, 317, 328, 330, 322, 312, 329, 326, 317, 319, 327, 328, 332, 333, 335, 334, 299, 331, 336, 337, 321, 324, 337, 336, 314, 310, 331, 299, 325, 300, 304, 303, 298, 327, 320, 318, 334, 335, 311, 316, 333, 332, 270, 338, 355, 274, 338, 339, 356, 355, 228, 352, 354, 227, 352, 351, 353, 354, 229, 350, 352, 228, 350, 349, 351, 352, 230, 348, 350, 229, 348, 347, 349, 350, 231, 346, 348, 230, 346, 345, 347, 348, 232, 374, 346, 231, 374, 344, 345, 346, 221, 342, 338, 270, 342, 343, 339, 338, 227, 354, 341, 205, 354, 353, 340, 341, 385, 365, 360, 375, 375, 360, 361, 377, 368, 366, 363, 362, 378, 381, 394, 387, 365, 370, 361, 360, 357, 358, 371, 364, 364, 371, 370, 365, 374, 232, 369, 379, 379, 369, 368, 381, 232, 359, 367, 369, 369, 367, 366, 368, 372, 357, 364, 383, 383, 364, 365, 385, 367, 384, 386, 366, 384, 383, 385, 386, 359, 373, 384, 367, 373, 372, 383, 384, 371, 380, 382, 370, 380, 379, 381, 382, 358, 344, 380, 371, 344, 374, 379, 380, 382, 377, 393, 392, 382, 381, 378, 377, 363, 376, 378, 362, 376, 375, 377, 378, 366, 386, 376, 363, 386, 385, 375, 376, 233, 343, 373, 359, 233, 359, 232, 362, 378, 387, 388, 361, 370, 391, 390, 381, 368, 389, 394, 368, 362, 388, 389, 377, 361, 390, 393, 370, 382, 392, 391, 343, 342, 372, 373, 342, 221, 357, 372, 357, 221, 358, 405, 404, 398, 399, 404, 403, 397, 398, 395, 396, 402, 401, 402, 492, 406, 405, 404, 403, 494, 401, 418, 417, 414, 413, 407, 408, 425, 422, 421, 409, 413, 414, 411, 420, 419, 408, 407, 415, 416, 410, 412, 412, 410, 419, 420, 408, 419, 410, 416, 418, 413, 409, 422, 423, 424, 421, 408, 409, 426, 425, 409, 411, 424, 423, 426, 411, 407, 421, 424, 429, 430, 428, 427, 423, 422, 427, 428, 425, 426, 430, 429, 426, 423, 428, 430, 422, 425, 429, 427, 399, 400, 406, 405, 435, 434, 436, 437, 436, 434, 432, 431, 483, 435, 437, 484, 434, 435, 483, 486, 480, 479, 489, 488, 433, 432, 491, 396, 402, 492, 441, 443, 444, 442, 446, 445, 440, 439, 444, 443, 445, 446, 440, 445, 443, 441, 440, 441, 442, 439, 442, 444, 446, 439, 449, 451, 452, 450, 454, 453, 448, 447, 452, 451, 453, 454, 448, 453, 451, 449, 448, 449, 450, 447, 450, 452, 454, 447, 457, 459, 460, 458, 462, 461, 456, 455, 460, 459, 461, 462, 456, 461, 459, 457, 456, 457, 458, 455, 458, 460, 462, 455, 465, 467, 468, 466, 470, 469, 464, 463, 468, 467, 469, 470, 464, 469, 467, 465, 464, 465, 466, 463, 466, 468, 470, 463, 473, 475, 476, 474, 478, 477, 472, 471, 476, 475, 477, 478, 472, 477, 475, 473, 472, 473, 474, 471, 474, 476, 478, 471, 489, 479, 482, 490, 479, 480, 481, 482, 493, 494, 403, 397, 486, 483, 484, 485, 480, 486, 485, 481, 433, 488, 487, 438, 488, 489, 490, 487, 400, 491, 492, 406, 395, 401, 494, 493, 438, 431, 432, 433]
            rel material:binding = </root/_materials/White>
            normal3f[] normals = [(0.7071142, -0.7070993, 0), (0.7071142, -0.7070993, 0), (0.7071142, -0.7070993, 0), (0.7071142, -0.7070993, 0), (0.99999994, 2.021079e-7, 0), (0.99999994, 2.021079e-7, 0), (0.99999994, 2.021079e-7, 0), (0.99999994, 2.021079e-7, 0), (-0.70710677, -0.70710677, 0), (-0.70710677, -0.70710677, 0), (-0.70710677, -0.70710677, 0), (-0.70710677, -0.70710677, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0.7071067, 0.7071069, 0), (0.7071067, 0.7071069, 0), (0.7071067, 0.7071069, 0), (0.7071067, 0.7071069, 0), (-0.7070996, 0.7071139, 0), (-0.7070996, 0.7071139, 0), (-0.7070996, 0.7071139, 0), (-0.7070996, 0.7071139, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 2.694771e-7, 0), (1, 2.694771e-7, 0), (1, 2.694771e-7, 0), (1, 2.694771e-7, 0), (0.7071068, 0.70710677, 0), (0.7071068, 0.70710677, 0), (0.7071068, 0.70710677, 0), (0.7071068, 0.70710677, 0), (-0.7071069, -0.70710665, 0), (-0.7071069, -0.70710665, 0), (-0.7071069, -0.70710665, 0), (-0.7071069, -0.70710665, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0.7070996, 0.70711386, 0), (-0.7070996, 0.70711386, 0), (-0.7070996, 0.70711386, 0), (-0.7070996, 0.70711386, 0), (0.7071143, -0.7070993, 0), (0.7071143, -0.7070993, 0), (0.7071143, -0.7070993, 0), (0.7071143, -0.7070993, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.99999994, 2.021079e-7, 0), (0.99999994, 2.021079e-7, 0), (0.99999994, 2.021079e-7, 0), (0.99999994, 2.021079e-7, 0), (0.7071066, 0.7071069, 0), (0.7071066, 0.7071069, 0), (0.7071066, 0.7071069, 0), (0.7071066, 0.7071069, 0), (-0.7071066, -0.7071069, 0), (-0.7071066, -0.7071069, 0), (-0.7071066, -0.7071069, 0), (-0.7071066, -0.7071069, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (-0.70709956, 0.7071141, 0), (-0.70709956, 0.7071141, 0), (-0.70709956, 0.7071141, 0), (-0.70709956, 0.7071141, 0), (0.7071141, -0.70709944, 0), (0.7071141, -0.70709944, 0), (0.7071141, -0.70709944, 0), (0.7071141, -0.70709944, 0), (-0.99999994, -2.021079e-7, 0), (-0.99999994, -2.021079e-7, 0), (-0.99999994, -2.021079e-7, 0), (-0.99999994, -2.021079e-7, 0), (-1, -3.233726e-7, 0), (-1, -3.233726e-7, 0), (-1, -3.233726e-7, 0), (-1, -3.233726e-7, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 2.4252944e-7, 0), (1, 2.4252944e-7, 0), (1, 2.4252944e-7, 0), (1, 2.4252944e-7, 0), (0.7071069, 0.70710665, 0), (0.7071069, 0.70710665, 0), (0.7071069, 0.70710665, 0), (0.7071069, 0.70710665, 0), (-0.7070998, 0.70711374, 0), (-0.7070998, 0.70711374, 0), (-0.7070998, 0.70711374, 0), (-0.7070998, 0.70711374, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0.7071069, -0.70710665, 0), (-0.7071069, -0.70710665, 0), (-0.7071069, -0.70710665, 0), (-0.7071069, -0.70710665, 0), (-1, -2.0210774e-7, 0), (-1, -2.0210774e-7, 0), (-1, -2.0210774e-7, 0), (-1, -2.0210774e-7, 0), (-0.70710707, -0.7071065, 0), (-0.70710707, -0.7071065, 0), (-0.70710707, -0.7071065, 0), (-0.70710707, -0.7071065, 0), (0.70711386, -0.7070997, 0), (0.70711386, -0.7070997, 0), (0.70711386, -0.7070997, 0), (0.70711386, -0.7070997, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 2.0210774e-7, 0), (1, 2.0210774e-7, 0), (1, 2.0210774e-7, 0), (1, 2.0210774e-7, 0), (-0.7070996, 0.7071139, 0), (-0.7070996, 0.7071139, 0), (-0.7070996, 0.7071139, 0), (-0.7070996, 0.7071139, 0), (0.7071064, 0.7071071, 0), (0.7071064, 0.7071071, 0), (0.7071064, 0.7071071, 0), (0.7071064, 0.7071071, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.7071144, -0.70709914, 0), (0.7071144, -0.70709914, 0), (0.7071144, -0.70709914, 0), (0.7071144, -0.70709914, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 2.0210774e-7, 0), (1, 2.0210774e-7, 0), (1, 2.0210774e-7, 0), (1, 2.0210774e-7, 0), (-0.7070996, 0.7071139, 0), (-0.7070996, 0.7071139, 0), (-0.7070996, 0.7071139, 0), (-0.7070996, 0.7071139, 0), (0.7071067, 0.7071069, 0), (0.7071067, 0.7071069, 0), (0.7071067, 0.7071069, 0), (0.7071067, 0.7071069, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, -2.0210774e-7, 0), (-1, -2.0210774e-7, 0), (-1, -2.0210774e-7, 0), (-1, -2.0210774e-7, 0), (-0.70710677, -0.70710677, 0), (-0.70710677, -0.70710677, 0), (-0.70710677, -0.70710677, 0), (-0.70710677, -0.70710677, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.000001286233, 0, -1), (0.000001286233, 0, -1), (0.000001286233, 0, -1), (0.000001286233, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.0000018189689, 0, 1), (-0.0000018189689, 0, 1), (-0.0000018189689, 0, 1), (-0.0000018189689, 0, 1), (0.99999994, 2.2737194e-7, 0), (0.99999994, 2.2737194e-7, 0), (0.99999994, 2.2737194e-7, 0), (0.99999994, 2.2737194e-7, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0.0000018189689, 0, -1), (0.0000018189689, 0, -1), (0.0000018189689, 0, -1), (0.0000018189689, 0, -1), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0.9238796, 0.38268334, 0), (0.9238796, 0.38268334, 0), (0.9238796, 0.38268334, 0), (0.9238796, 0.38268334, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.70711434, -0.70709914, 0), (0.70711434, -0.70709914, 0), (0.70711434, -0.70709914, 0), (0.70711434, -0.70709914, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.9238812, -0.3826793, 0), (0.9238812, -0.3826793, 0), (0.9238812, -0.3826793, 0), (0.9238812, -0.3826793, 0), (-0.707107, -0.7071066, 0), (-0.707107, -0.7071066, 0), (-0.707107, -0.7071066, 0), (-0.707107, -0.7071066, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.0000012862198, 0, -1), (0.0000012862198, 0, -1), (0.0000012862198, 0, -1), (0.0000012862198, 0, -1), (-0.70709944, 0.70711404, 0), (-0.70709944, 0.70711404, 0), (-0.70709944, 0.70711404, 0), (-0.70709944, 0.70711404, 0), (0.0000012862324, 0, -1), (0.0000012862324, 0, -1), (0.0000012862324, 0, -1), (0.0000012862324, 0, -1), (0.38268757, -0.92387784, 0), (0.38268757, -0.92387784, 0), (0.38268757, -0.92387784, 0), (0.38268757, -0.92387784, 0), (0.0000012862324, 0, 1), (0.0000012862324, 0, 1), (0.0000012862324, 0, 1), (0.0000012862324, 0, 1), (0.7071076, 0.70710605, 0), (0.7071076, 0.70710605, 0), (0.7071076, 0.70710605, 0), (0.7071076, 0.70710605, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.0000012862199, 0, -0.99999994), (-0.0000012862199, 0, -0.99999994), (-0.0000012862199, 0, -0.99999994), (0.38268432, 0.9238792, 0), (0.38268432, 0.9238792, 0), (0.38268432, 0.9238792, 0), (0.38268432, 0.9238792, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.38267845, 0.9238816, 0), (-0.38267845, 0.9238816, 0), (-0.38267845, 0.9238816, 0), (-0.38267845, 0.9238816, 0), (0.0000025724664, 0, 1), (0.0000025724664, 0, 1), (0.0000025724664, 0, 1), (-0.000005144807, 0, -1), (-0.000005144807, 0, -1), (-0.000005144807, 0, -1), (-0.9238774, 0.3826885, 0), (-0.9238774, 0.3826885, 0), (-0.9238774, 0.3826885, 0), (-0.9238774, 0.3826885, 0), (-0.000005144807, 0, 1), (-0.000005144807, 0, 1), (-0.000005144807, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.92387885, -0.3826851, 0), (-0.92387885, -0.3826851, 0), (-0.92387885, -0.3826851, 0), (-0.92387885, -0.3826851, 0), (-0.0000051448765, 0, 1), (-0.0000051448765, 0, 1), (-0.0000051448765, 0, 1), (-0.0000025724407, 0, -1), (-0.0000025724407, 0, -1), (-0.0000025724407, 0, -1), (-0.38268378, -0.92387944, 0), (-0.38268378, -0.92387944, 0), (-0.38268378, -0.92387944, 0), (-0.38268378, -0.92387944, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.70711386, -0.7070997, 0), (0.70711386, -0.7070997, 0), (0.70711386, -0.7070997, 0), (0.70711386, -0.7070997, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 2.0210774e-7, 0), (1, 2.0210774e-7, 0), (1, 2.0210774e-7, 0), (1, 2.0210774e-7, 0), (-0.7070996, 0.7071139, 0), (-0.7070996, 0.7071139, 0), (-0.7070996, 0.7071139, 0), (-0.7070996, 0.7071139, 0), (0.7071064, 0.7071071, 0), (0.7071064, 0.7071071, 0), (0.7071064, 0.7071071, 0), (0.7071064, 0.7071071, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, -2.0210774e-7, 0), (-1, -2.0210774e-7, 0), (-1, -2.0210774e-7, 0), (-1, -2.0210774e-7, 0), (-0.70710707, -0.7071065, 0), (-0.70710707, -0.7071065, 0), (-0.70710707, -0.7071065, 0), (-0.70710707, -0.7071065, 0), (0.7071143, -0.70709926, 0), (0.7071143, -0.70709926, 0), (0.7071143, -0.70709926, 0), (0.7071143, -0.70709926, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0.99999994, 2.3444339e-7, 0), (0.99999994, 2.3444339e-7, 0), (0.99999994, 2.3444339e-7, 0), (0.99999994, 2.3444339e-7, 0), (-0.7070996, 0.7071139, 0), (-0.7070996, 0.7071139, 0), (-0.7070996, 0.7071139, 0), (-0.7070996, 0.7071139, 0), (0.70710665, 0.7071069, 0), (0.70710665, 0.7071069, 0), (0.70710665, 0.7071069, 0), (0.70710665, 0.7071069, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0.99999994, -2.021079e-7, 0), (-0.99999994, -2.021079e-7, 0), (-0.99999994, -2.021079e-7, 0), (-0.99999994, -2.021079e-7, 0), (-0.7071066, -0.7071069, 0), (-0.7071066, -0.7071069, 0), (-0.7071066, -0.7071069, 0), (-0.7071066, -0.7071069, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 2.0210784e-7, 0), (1, 2.0210784e-7, 0), (1, 2.0210784e-7, 0), (1, 2.0210784e-7, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.92387915, 0.38268447, 0), (0.92387915, 0.38268447, 0), (0.92387915, 0.38268447, 0), (0.92387915, 0.38268447, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.7071142, -0.70709926, 0), (0.7071142, -0.70709926, 0), (0.7071142, -0.70709926, 0), (0.7071142, -0.70709926, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.9238813, -0.3826793, 0), (0.9238813, -0.3826793, 0), (0.9238813, -0.3826793, 0), (0.9238813, -0.3826793, 0), (-0.70710677, -0.70710677, 0), (-0.70710677, -0.70710677, 0), (-0.70710677, -0.70710677, 0), (-0.70710677, -0.70710677, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.7070996, 0.7071139, 0), (-0.7070996, 0.7071139, 0), (-0.7070996, 0.7071139, 0), (-0.7070996, 0.7071139, 0), (0.3826882, -0.92387754, 0), (0.3826882, -0.92387754, 0), (0.3826882, -0.92387754, 0), (0.3826882, -0.92387754, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.70710677, 0.70710677, 0), (0.70710677, 0.70710677, 0), (0.70710677, 0.70710677, 0), (0.70710677, 0.70710677, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.382684, 0.9238793, 0), (0.382684, 0.9238793, 0), (0.382684, 0.9238793, 0), (0.382684, 0.9238793, 0), (-0.38267845, 0.92388165, 0), (-0.38267845, 0.92388165, 0), (-0.38267845, 0.92388165, 0), (-0.38267845, 0.92388165, 0), (-3.215583e-7, 0, 1), (-3.215583e-7, 0, 1), (-3.215583e-7, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0.9238775, 0.3826882, 0), (-0.9238775, 0.3826882, 0), (-0.9238775, 0.3826882, 0), (-0.9238775, 0.3826882, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0.92387915, -0.3826842, 0), (-0.92387915, -0.3826842, 0), (-0.92387915, -0.3826842, 0), (-0.92387915, -0.3826842, 0), (-6.4310956e-7, 0, 1), (-6.4310956e-7, 0, 1), (-6.4310956e-7, 0, 1), (-0.3826833, -0.9238796, 0), (-0.3826833, -0.9238796, 0), (-0.3826833, -0.9238796, 0), (-0.3826833, -0.9238796, 0), (-3.215551e-7, 0, 1), (-3.215551e-7, 0, 1), (-3.215551e-7, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.000002572466, -0.0000026341504, -1), (0.000002572466, -0.0000026341504, -1), (0.000002572466, -0.0000026341504, -1), (0.000002572466, -0.0000026341504, -1), (0, -0.000003725291, -1), (0, -0.000003725291, -1), (0, -0.000003725291, -1), (0, -0.000003725291, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 2.5263466e-7, 0), (1, 2.5263466e-7, 0), (1, 2.5263466e-7, 0), (1, 2.5263466e-7, 0), (0.0000036379395, 4.6565697e-7, -1), (0.0000036379395, 4.6565697e-7, -1), (0.0000036379395, 4.6565697e-7, -1), (0.0000036379395, 4.6565697e-7, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, -2.0210774e-7, 0), (-1, -2.0210774e-7, 0), (-1, -2.0210774e-7, 0), (-1, -2.0210774e-7, 0), (-0.0000036379379, -1.734704e-12, -1), (-0.0000036379379, -1.734704e-12, -1), (-0.0000036379379, -1.734704e-12, -1), (-0.0000036379379, -1.734704e-12, -1), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.9238794, 0.38268366, 0), (0.9238794, 0.38268366, 0), (0.9238794, 0.38268366, 0), (0.9238794, 0.38268366, 0), (0, 0.000003725291, -1), (0, 0.000003725291, -1), (0, 0.000003725291, -1), (0, 0.000003725291, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -0.99999994, -2.021079e-7), (0, -0.99999994, -2.021079e-7), (0, -0.99999994, -2.021079e-7), (0, -0.99999994, -2.021079e-7), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.70711434, -0.70709914, 0), (0.70711434, -0.70709914, 0), (0.70711434, -0.70709914, 0), (0.70711434, -0.70709914, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.92388135, -0.3826791, 0), (0.92388135, -0.3826791, 0), (0.92388135, -0.3826791, 0), (0.92388135, -0.3826791, 0), (-0.7071072, -0.70710635, 0), (-0.7071072, -0.70710635, 0), (-0.7071072, -0.70710635, 0), (-0.7071072, -0.70710635, 0), (0, -0.0000015430456, -1), (0, -0.0000015430456, -1), (0, -0.0000015430456, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.0000025724396, -0.0000026341775, -1), (-0.0000025724396, -0.0000026341775, -1), (-0.0000025724396, -0.0000026341775, -1), (-0.0000025724396, -0.0000026341775, -1), (-0.7070992, 0.70711434, 0), (-0.7070992, 0.70711434, 0), (-0.7070992, 0.70711434, 0), (-0.7070992, 0.70711434, 0), (-0.0000025724648, 0.0000026342045, -1), (-0.0000025724648, 0.0000026342045, -1), (-0.0000025724648, 0.0000026342045, -1), (-0.0000025724648, 0.0000026342045, -1), (0.38268763, -0.9238777, 0), (0.38268763, -0.9238777, 0), (0.38268763, -0.9238777, 0), (0.38268763, -0.9238777, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.70710635, 0.7071071, 0), (0.70710635, 0.7071071, 0), (0.70710635, 0.7071071, 0), (0.70710635, 0.7071071, 0), (0, -0.0000037252926, -1), (0, -0.0000037252926, -1), (0, -0.0000037252926, -1), (0.0000025724928, 8.5141806e-7, -1), (0.0000025724928, 8.5141806e-7, -1), (0.0000025724928, 8.5141806e-7, -1), (0.0000025724928, 8.5141806e-7, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.0000025724398, 0.00000372529, -0.99999994), (-0.0000025724398, 0.00000372529, -0.99999994), (-0.0000025724398, 0.00000372529, -0.99999994), (0.38268402, 0.9238793, 0), (0.38268402, 0.9238793, 0), (0.38268402, 0.9238793, 0), (0.38268402, 0.9238793, 0), (0.0000025724664, 0.0000037252894, -1), (0.0000025724664, 0.0000037252894, -1), (0.0000025724664, 0.0000037252894, -1), (-0.3826785, 0.9238816, 0), (-0.3826785, 0.9238816, 0), (-0.3826785, 0.9238816, 0), (-0.3826785, 0.9238816, 0), (-0.0000025724664, 0, 1), (-0.0000025724664, 0, 1), (-0.0000025724664, 0, 1), (0, 0.0000015430849, -1), (0, 0.0000015430849, -1), (0, 0.0000015430849, -1), (-0.9238775, 0.38268837, 0), (-0.9238775, 0.38268837, 0), (-0.9238775, 0.38268837, 0), (-0.9238775, 0.38268837, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.0000051448765, -0.0000015430664, -1), (-0.0000051448765, -0.0000015430664, -1), (-0.0000051448765, -0.0000015430664, -1), (-0.9238786, -0.38268563, 0), (-0.9238786, -0.38268563, 0), (-0.9238786, -0.38268563, 0), (-0.9238786, -0.38268563, 0), (-0.0000051448765, 0, 1), (-0.0000051448765, 0, 1), (-0.0000051448765, 0, 1), (0, -0.0000037252914, -1), (0, -0.0000037252914, -1), (0, -0.0000037252914, -1), (-0.38268122, -0.92388046, 0.0000014523748), (-0.38268122, -0.92388046, 0.0000014523748), (-0.38268122, -0.92388046, 0.0000014523748), (-0.38268122, -0.92388046, 0.0000014523748), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0.44020265, 0.440203, 0.7825873), (0.44020265, 0.440203, 0.7825873), (0.44020265, 0.440203, 0.7825873), (-0.44020456, -0.44020456, 0.78258544), (-0.44020456, -0.44020456, 0.78258544), (-0.44020456, -0.44020456, 0.78258544), (0, -0.6000002, 0.79999995), (0, -0.6000002, 0.79999995), (0, -0.6000002, 0.79999995), (0, -0.6000002, 0.79999995), (-0.59999925, -1.6168747e-7, 0.8000005), (-0.59999925, -1.6168747e-7, 0.8000005), (-0.59999925, -1.6168747e-7, 0.8000005), (-0.59999925, -1.6168747e-7, 0.8000005), (0.44020778, -0.44019833, 0.7825871), (0.44020778, -0.44019833, 0.7825871), (0.44020778, -0.44019833, 0.7825871), (9.3132263e-7, -1, 0), (9.3132263e-7, -1, 0), (9.3132263e-7, -1, 0), (9.3132263e-7, -1, 0), (-0.0000045272304, 0.6000003, 0.7999998), (-0.0000045272304, 0.6000003, 0.7999998), (-0.0000045272304, 0.6000003, 0.7999998), (-0.0000045272304, 0.6000003, 0.7999998), (-0.44019678, 0.44020602, 0.78258896), (-0.44019678, 0.44020602, 0.78258896), (-0.44019678, 0.44020602, 0.78258896), (0.59999985, 1.6168633e-7, 0.80000013), (0.59999985, 1.6168633e-7, 0.80000013), (0.59999985, 1.6168633e-7, 0.80000013), (0.59999985, 1.6168633e-7, 0.80000013), (-5.0881505e-7, 0, 1), (-5.0881505e-7, 0, 1), (-5.0881505e-7, 0, 1), (-5.0881505e-7, 0, 1), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.000020954709, 1, 0), (-0.000020954709, 1, 0), (-0.000020954709, 1, 0), (-0.000020954709, 1, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.7071143, -0.7070993, 0), (0.7071143, -0.7070993, 0), (0.7071143, -0.7070993, 0), (0.7071143, -0.7070993, 0), (-1, -2.694771e-7, 0), (-1, -2.694771e-7, 0), (-1, -2.694771e-7, 0), (-1, -2.694771e-7, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 2.0210993e-7, 0), (1, 2.0210993e-7, 0), (1, 2.0210993e-7, 0), (1, 2.0210993e-7, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 2.0210986e-7, 0), (1, 2.0210986e-7, 0), (1, 2.0210986e-7, 0), (1, 2.0210986e-7, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 2.0211003e-7, 0), (1, 2.0211003e-7, 0), (1, 2.0211003e-7, 0), (1, 2.0211003e-7, 0), (1, 2.0210979e-7, 0), (1, 2.0210979e-7, 0), (1, 2.0210979e-7, 0), (1, 2.0210979e-7, 0), (1, 2.0211003e-7, 0), (1, 2.0211003e-7, 0), (1, 2.0211003e-7, 0), (1, 2.0211003e-7, 0), (1, 2.021099e-7, 0), (1, 2.021099e-7, 0), (1, 2.021099e-7, 0), (1, 2.021099e-7, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 8.2784436e-7), (-1, 0, 8.2784436e-7), (-1, 0, 8.2784436e-7), (-1, 0, 8.2784436e-7), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, -6.984879e-7, 0), (-1, -6.984879e-7, 0), (-1, -6.984879e-7, 0), (-1, -6.984879e-7, 0), (-1, -3.4924372e-7, 0), (-1, -3.4924372e-7, 0), (-1, -3.4924372e-7, 0), (-1, -3.4924372e-7, 0), (0, 1, -8.084401e-7), (0, 1, -8.084401e-7), (0, 1, -8.084401e-7), (0, 1, -8.084401e-7), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, -8.084401e-7), (0, 1, -8.084401e-7), (0, 1, -8.084401e-7), (0, 1, -8.084401e-7), (-2.3283046e-7, 1, 0), (-2.3283046e-7, 1, 0), (-2.3283046e-7, 1, 0), (-2.3283046e-7, 1, 0), (-2.3283046e-7, 1, -2.3282738e-7), (-2.3283046e-7, 1, -2.3282738e-7), (-2.3283046e-7, 1, -2.3282738e-7), (-2.3283046e-7, 1, -2.3282738e-7), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, -8.084388e-7), (0, 1, -8.084388e-7), (0, 1, -8.084388e-7), (0, 1, -8.084388e-7), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-4.656612e-7, 1, 0), (-4.656612e-7, 1, 0), (-4.656612e-7, 1, 0), (-4.656612e-7, 1, 0), (-4.656612e-7, 1, 0), (2.328306e-7, -1, 0), (2.328306e-7, -1, 0), (2.328306e-7, -1, 0), (2.328306e-7, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, -2.694799e-7), (0, -1, -2.694799e-7), (0, -1, -2.694799e-7), (0, -1, -2.694799e-7), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 1.515824e-7, 0), (1, 1.515824e-7, 0), (1, 1.515824e-7, 0), (1, 1.515824e-7, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0.74740905, 0, 0.6643642), (-0.74740905, 0, 0.6643642), (-0.74740905, 0, 0.6643642), (-0.74740905, 0, 0.6643642), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.7474096, 1.5105873e-7, 0.66436356), (0.7474096, 1.5105873e-7, 0.66436356), (0.7474096, 1.5105873e-7, 0.66436356), (0.7474096, 1.5105873e-7, 0.66436356), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (3.1321656e-7, -1, 0), (3.1321656e-7, -1, 0), (3.1321656e-7, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0.35312843, 0, 0.9355748), (-0.35312843, 0, 0.9355748), (-0.35312843, 0, 0.9355748), (-0.35312843, 0, 0.9355748), (0.35312846, 0, 0.93557477), (0.35312846, 0, 0.93557477), (0.35312846, 0, 0.93557477), (0.35312846, 0, 0.93557477), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0.7505986, 1.3473996e-7, -0.66075844), (0.7505986, 1.3473996e-7, -0.66075844), (0.7505986, 1.3473996e-7, -0.66075844), (0.7505986, 1.3473996e-7, -0.66075844), (-0.7505979, 0, -0.6607592), (-0.7505979, 0, -0.6607592), (-0.7505979, 0, -0.6607592), (-0.7505979, 0, -0.6607592), (-0.7487375, -2.2754146e-7, 0.6628666), (-0.7487375, -2.2754146e-7, 0.6628666), (-0.7487375, -2.2754146e-7, 0.6628666), (-0.7487375, -2.2754146e-7, 0.6628666), (0.3531286, 0, 0.9355747), (0.3531286, 0, 0.9355747), (0.3531286, 0, 0.9355747), (0.3531286, 0, 0.9355747), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0.7505991, 0, -0.660758), (0.7505991, 0, -0.660758), (0.7505991, 0, -0.660758), (0.7505991, 0, -0.660758), (0.7487378, 0, 0.6628663), (0.7487378, 0, 0.6628663), (0.7487378, 0, 0.6628663), (0.7487378, 0, 0.6628663), (-0.35312986, 9.257185e-8, 0.93557435), (-0.35312986, 9.257185e-8, 0.93557435), (-0.35312986, 9.257185e-8, 0.93557435), (-0.35312986, 9.257185e-8, 0.93557435), (-0.7505986, 0, -0.6607585), (-0.7505986, 0, -0.6607585), (-0.7505986, 0, -0.6607585), (-0.7505986, 0, -0.6607585), (0, 1, -2.4243718e-7), (0, 1, -2.4243718e-7), (0, 1, -2.4243718e-7), (0, 1, -2.4243718e-7), (0.7487377, 0, -0.66286635), (0.7487377, 0, -0.66286635), (0.7487377, 0, -0.66286635), (0.7487377, 0, -0.66286635), (-0.7487375, -3.6084936e-7, -0.66286665), (-0.7487375, -3.6084936e-7, -0.66286665), (-0.7487375, -3.6084936e-7, -0.66286665), (-0.7487375, -3.6084936e-7, -0.66286665), (-0.7487375, 0, -0.6628666), (-0.7487375, 0, -0.6628666), (-0.7487375, 0, -0.6628666), (-0.7487375, 0, -0.6628666), (0.35312846, 0, 0.93557477), (0.35312846, 0, 0.93557477), (0.35312846, 0, 0.93557477), (0.35312846, 0, 0.93557477), (-0.3531293, 0, 0.93557453), (-0.3531293, 0, 0.93557453), (-0.3531293, 0, 0.93557453), (-0.3531293, 0, 0.93557453), (0.7487377, 0, 0.66286623), (0.7487377, 0, 0.66286623), (0.7487377, 0, 0.66286623), (0.7487377, 0, 0.66286623), (0.74873793, 0, -0.6628662), (0.74873793, 0, -0.6628662), (0.74873793, 0, -0.6628662), (0.74873793, 0, -0.6628662), (-0.7505975, 0, -0.66075975), (-0.7505975, 0, -0.66075975), (-0.7505975, 0, -0.66075975), (-0.7505975, 0, -0.66075975), (0.7505983, 0, -0.6607588), (0.7505983, 0, -0.6607588), (0.7505983, 0, -0.6607588), (0.7505983, 0, -0.6607588), (-0.74873775, 0, 0.66286635), (-0.74873775, 0, 0.66286635), (-0.74873775, 0, 0.66286635), (-0.74873775, 0, 0.66286635), (0, -1, -1.226617e-7), (0, -1, -1.226617e-7), (0, -1, -1.226617e-7), (0, -1, -1.226617e-7), (1.04286464e-7, -1, 0), (1.04286464e-7, -1, 0), (1.04286464e-7, -1, 0), (1.04286464e-7, -1, 0), (0.74873763, 0, 0.6628664), (0.74873763, 0, 0.6628664), (0.74873763, 0, 0.6628664), (0.74873763, 0, 0.6628664), (-0.74873763, 0, -0.66286653), (-0.74873763, 0, -0.66286653), (-0.74873763, 0, -0.66286653), (-0.74873763, 0, -0.66286653), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0.7487375, 0, 0.6628666), (-0.7487375, 0, 0.6628666), (-0.7487375, 0, 0.6628666), (-0.7487375, 0, 0.6628666), (0.7487375, 0, -0.6628666), (0.7487375, 0, -0.6628666), (0.7487375, 0, -0.6628666), (0.7487375, 0, -0.6628666), (-0.74740905, 0, 0.6643642), (-0.74740905, 0, 0.6643642), (-0.74740905, 0, 0.6643642), (-0.74740905, 0, 0.6643642), (-0.7474089, 0, 0.66436416), (-0.7474089, 0, 0.66436416), (-0.7474089, 0, 0.66436416), (-0.7474089, 0, 0.66436416), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, -1.16414526e-7, 0), (-1, -1.16414526e-7, 0), (-1, -1.16414526e-7, 0), (-1, -1.16414526e-7, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, -1.1641459e-7, 0), (-1, -1.1641459e-7, 0), (-1, -1.1641459e-7, 0), (-1, -1.1641459e-7, 0), (-1, 9.1839155e-7, 0), (-1, 9.1839155e-7, 0), (-1, 9.1839155e-7, 0), (-1, 9.1839155e-7, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, -0.0000024835265), (-1, 0, -0.0000024835265), (-1, 0, -0.0000024835265), (-1, 0, -0.0000024835265), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.25881827, -4.5912702e-7, 0.96592605), (-0.25881827, -4.5912702e-7, 0.96592605), (-0.25881827, -4.5912702e-7, 0.96592605), (-0.25881827, -4.5912702e-7, 0.96592605), (-0.96592605, 0.0000015333422, -0.25881797), (-0.96592605, 0.0000015333422, -0.25881797), (-0.96592605, 0.0000015333422, -0.25881797), (-0.96592605, 0.0000015333422, -0.25881797), (0, -1, 1.0105469e-7), (0, -1, 1.0105469e-7), (0, -1, 1.0105469e-7), (0, -1, 1.0105469e-7), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 2.021097e-7), (0, 1, 2.021097e-7), (0, 1, 2.021097e-7), (0, 1, 2.021097e-7), (0, 1, -4.0421875e-7), (0, 1, -4.0421875e-7), (0, 1, -4.0421875e-7), (0, 1, -4.0421875e-7), (2.2489755e-7, 1, -1.5158264e-7), (2.2489755e-7, 1, -1.5158264e-7), (2.2489755e-7, 1, -1.5158264e-7), (2.2489755e-7, 1, -1.5158264e-7), (0.25881958, 0, -0.96592563), (0.25881958, 0, -0.96592563), (0.25881958, 0, -0.96592563), (0.25881958, 0, -0.96592563), (0.25881884, 0, -0.9659259), (0.25881884, 0, -0.9659259), (0.25881884, 0, -0.9659259), (0.25881884, 0, -0.9659259), (-4.4979402e-7, -1, -2.021097e-7), (-4.4979402e-7, -1, -2.021097e-7), (-4.4979402e-7, -1, -2.021097e-7), (-4.4979402e-7, -1, -2.021097e-7), (0, -1, -7.579126e-8), (0, -1, -7.579126e-8), (0, -1, -7.579126e-8), (0, -1, -7.579126e-8), (-0.25881946, 4.5474735e-7, 0.9659257), (-0.25881946, 4.5474735e-7, 0.9659257), (-0.25881946, 4.5474735e-7, 0.9659257), (-0.25881946, 4.5474735e-7, 0.9659257), (-0.25881898, 1.10116e-7, 0.9659259), (-0.25881898, 1.10116e-7, 0.9659259), (-0.25881898, 1.10116e-7, 0.9659259), (-0.25881898, 1.10116e-7, 0.9659259), (-0.25881863, 0, 0.965926), (-0.25881863, 0, 0.965926), (-0.25881863, 0, 0.965926), (-0.25881863, 0, 0.965926), (-0.25881904, 5.743873e-8, 0.9659258), (-0.25881904, 5.743873e-8, 0.9659258), (-0.25881904, 5.743873e-8, 0.9659258), (-0.25881904, 5.743873e-8, 0.9659258), (-0.25881937, 4.547472e-7, 0.9659258), (-0.25881937, 4.547472e-7, 0.9659258), (-0.25881937, 4.547472e-7, 0.9659258), (-0.25881937, 4.547472e-7, 0.9659258), (-0.25881886, -7.579114e-8, 0.9659259), (-0.25881886, -7.579114e-8, 0.9659259), (-0.25881886, -7.579114e-8, 0.9659259), (-0.25881886, -7.579114e-8, 0.9659259), (0.25881884, -3.657928e-7, -0.9659259), (0.25881884, -3.657928e-7, -0.9659259), (0.25881884, -3.657928e-7, -0.9659259), (0.25881884, -3.657928e-7, -0.9659259), (0.25881892, 0, -0.9659258), (0.25881892, 0, -0.9659258), (0.25881892, 0, -0.9659258), (0.25881892, 0, -0.9659258), (0.25881895, -6.9223387e-7, -0.9659259), (0.25881895, -6.9223387e-7, -0.9659259), (0.25881895, -6.9223387e-7, -0.9659259), (0.25881895, -6.9223387e-7, -0.9659259), (0.25881934, 0, -0.9659258), (0.25881934, 0, -0.9659258), (0.25881934, 0, -0.9659258), (0.25881934, 0, -0.9659258), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0.25882, -1.0711671e-7, -0.96592563), (0.25882, -1.0711671e-7, -0.96592563), (0.25882, -1.0711671e-7, -0.96592563), (0.25882, -1.0711671e-7, -0.96592563), (-0.9659256, 0, -0.2588199), (-0.9659256, 0, -0.2588199), (-0.9659256, 0, -0.2588199), (-0.9659256, 0, -0.2588199), (-0.96592563, 2.7844985e-8, -0.25881973), (-0.96592563, 2.7844985e-8, -0.25881973), (-0.96592563, 2.7844985e-8, -0.25881973), (-0.96592563, 2.7844985e-8, -0.25881973), (-0.2588201, 0, 0.9659255), (-0.2588201, 0, 0.9659255), (-0.2588201, 0, 0.9659255), (-0.2588201, 0, 0.9659255), (-0.2588186, 2.2737319e-7, 0.9659259), (-0.2588186, 2.2737319e-7, 0.9659259), (-0.2588186, 2.2737319e-7, 0.9659259), (-0.2588186, 2.2737319e-7, 0.9659259), (-0.13052675, 0, 0.9914448), (-0.13052675, 0, 0.9914448), (-0.13052675, 0, 0.9914448), (-0.13052675, 0, 0.9914448), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 3.316378e-7, 0), (-1, 3.316378e-7, 0), (-1, 3.316378e-7, 0), (-1, 3.316378e-7, 0), (1, 3.9861524e-7, 0), (1, 3.9861524e-7, 0), (1, 3.9861524e-7, 0), (1, 3.9861524e-7, 0), (-0.13052675, 0, 0.9914447), (-0.13052675, 0, 0.9914447), (-0.13052675, 0, 0.9914447), (-0.13052675, 0, 0.9914447), (-0.1305263, 0, 0.9914449), (-0.1305263, 0, 0.9914449), (-0.1305263, 0, 0.9914449), (-0.1305263, 0, 0.9914449), (-0.000003089557, 1, -0.0000013882565), (-0.000003089557, 1, -0.0000013882565), (-0.000003089557, 1, -0.0000013882565), (-0.0017241326, -0.99999857, 0), (-0.0017241326, -0.99999857, 0), (-0.0017241326, -0.99999857, 0), (-0.0017241326, -0.99999857, 0), (1, -1.7323707e-7, 0), (1, -1.7323707e-7, 0), (1, -1.7323707e-7, 0), (1, -1.7323707e-7, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1.6615645e-10, 0, 1), (1.6615645e-10, 0, 1), (1.6615645e-10, 0, 1), (1.6615645e-10, 0, 1), (1.6615645e-10, 0, 1), (1.6615645e-10, 0, 1), (1.6615645e-10, 0, 1), (1.6615645e-10, 0, 1), (-0.71172506, 0.70245814, 0), (-0.71172506, 0.70245814, 0), (-0.71172506, 0.70245814, 0), (-0.71172506, 0.70245814, 0), (0, -0.99999994, -6.928624e-7), (0, -0.99999994, -6.928624e-7), (0, -0.99999994, -6.928624e-7), (0, -0.99999994, -6.928624e-7), (0, -0.99999994, -6.928624e-7), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.70710677, -0.7071069, -0.0000011248694), (-0.70710677, -0.7071069, -0.0000011248694), (-0.70710677, -0.7071069, -0.0000011248694), (-0.70710677, -0.7071069, -0.0000011248694), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0.99999994, -6.062546e-7), (0, 0.99999994, -6.062546e-7), (0, 0.99999994, -6.062546e-7), (0, 0.99999994, -6.062546e-7), (0, 0.99999994, -6.062546e-7), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.0000018626415, 1, 0), (-0.0000018626415, 1, 0), (-0.0000018626415, 1, 0), (-0.0000018626415, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0.99855787, -0.05368595, 0), (-0.99855787, -0.05368595, 0), (-0.99855787, -0.05368595, 0), (-0.99855787, -0.05368595, 0), (-0.7474098, 0, 0.66436327), (-0.7474098, 0, 0.66436327), (-0.7474098, 0, 0.66436327), (-0.7474098, 0, 0.66436327), (0, 0.7474097, 0.6643635), (0, 0.7474097, 0.6643635), (0, 0.7474097, 0.6643635), (0, 0.7474097, 0.6643635), (0.0000017172762, -0.74740964, 0.66436344), (0.0000017172762, -0.74740964, 0.66436344), (0.0000017172762, -0.74740964, 0.66436344), (0.0000017172762, -0.74740964, 0.66436344), (0, 1.419059e-7, 1), (0, 1.419059e-7, 1), (0, 1.419059e-7, 1), (0, 1.419059e-7, 1), (0, 1.419059e-7, 1), (0, 1.419059e-7, 1), (0, 1.419059e-7, 1), (0, 1.419059e-7, 1), (0, 1.419059e-7, 1), (0, 1.419059e-7, 1), (-0.18208466, 0.98328286, 0), (-0.18208466, 0.98328286, 0), (-0.18208466, 0.98328286, 0), (-0.18208466, 0.98328286, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-2.3283052e-7, 1, -0.0000024250148), (-2.3283052e-7, 1, -0.0000024250148), (-2.3283052e-7, 1, -0.0000024250148), (-2.3283052e-7, 1, -0.0000024250148), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1.1641522e-7, -1, 0), (1.1641522e-7, -1, 0), (1.1641522e-7, -1, 0), (1.1641522e-7, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0.0000052385913, 0.0000021287008), (1, 0.0000052385913, 0.0000021287008), (1, 0.0000052385913, 0.0000021287008), (1, 0.0000052385913, 0.0000021287008), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.00001909218, 1, -0.000007275983), (-0.00001909218, 1, -0.000007275983), (-0.00001909218, 1, -0.000007275983), (-0.00001909218, 1, -0.000007275983), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0.0000013073792, 0.0000013096551, 1), (0.0000013073792, 0.0000013096551, 1), (0.0000013073792, 0.0000013096551, 1), (0.0000013073792, 0.0000013096551, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-9.3132064e-7, 1, -3.4647346e-7), (-9.3132064e-7, 1, -3.4647346e-7), (-9.3132064e-7, 1, -3.4647346e-7), (-9.3132064e-7, 1, -3.4647346e-7), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-9.3132064e-7, 1, -3.5478953e-7), (-9.3132064e-7, 1, -3.5478953e-7), (-9.3132064e-7, 1, -3.5478953e-7), (-9.3132064e-7, 1, -3.5478953e-7), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (1, 0.000005543603, -0.000002128744), (1, 0.000005543603, -0.000002128744), (1, 0.000005543603, -0.000002128744), (1, 0.000005543603, -0.000002128744), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0.0000018626546, 0.99999994, -0.0000014191639), (0.0000018626546, 0.99999994, -0.0000014191639), (0.0000018626546, 0.99999994, -0.0000014191639), (0.0000018626546, 0.99999994, -0.0000014191639), (6.821259e-7, 6.9849835e-7, -1), (6.821259e-7, 6.9849835e-7, -1), (6.821259e-7, 6.9849835e-7, -1), (6.821259e-7, 6.9849835e-7, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0.000005100016, -0.747412, 0.66436064), (0.000005100016, -0.747412, 0.66436064), (0.000005100016, -0.747412, 0.66436064), (0.000005100016, -0.747412, 0.66436064), (0.6304744, -0.21015638, 0.747219), (0.6304744, -0.21015638, 0.747219), (0.6304744, -0.21015638, 0.747219), (0.6304744, -0.21015638, 0.747219), (-0.55469775, -0.832052, 0), (-0.55469775, -0.832052, 0), (-0.55469775, -0.832052, 0), (-0.55469775, -0.832052, 0), (-0.48897105, -0.65196484, 0.579525), (-0.48897105, -0.65196484, 0.579525), (-0.48897105, -0.65196484, 0.579525), (-0.48897105, -0.65196484, 0.579525), (0, -0.7474087, 0.6643645), (0, -0.7474087, 0.6643645), (0, -0.7474087, 0.6643645), (0, -0.7474087, 0.6643645), (0.051572982, -0.73492426, 0.6761853), (0.051572982, -0.73492426, 0.6761853), (0.051572982, -0.73492426, 0.6761853), (0.051572982, -0.73492426, 0.6761853), (-0.5986722, -0.5986724, 0.5321493), (-0.5986722, -0.5986724, 0.5321493), (-0.5986722, -0.5986724, 0.5321493), (-0.5986722, -0.5986724, 0.5321493), (-0.4722188, 0.8814814, 0), (-0.4722188, 0.8814814, 0), (-0.4722188, 0.8814814, 0), (-0.4722188, 0.8814814, 0), (-0.24252994, -0.970144, 0), (-0.24252994, -0.970144, 0), (-0.24252994, -0.970144, 0), (-0.24252994, -0.970144, 0), (0.7467154, 0.04307972, 0.66374725), (0.7467154, 0.04307972, 0.66374725), (0.7467154, 0.04307972, 0.66374725), (0.7467154, 0.04307972, 0.66374725)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.030000072, 0.072000295, 0.033000372), (-0.094000064, 0.039999958, 0.033000372), (-0.09400007, 0.07200029, 0.033000372), (-0.045999732, 0.023999961, 0.033000372), (-0.078000076, 0.08799996, 0.033000372), (-0.030000065, 0.039999966, 0.051000368), (-0.030000072, 0.072000295, 0.051000368), (-0.09400007, 0.07200029, 0.051000368), (-0.07800007, 0.023999961, 0.051000368), (-0.045999732, 0.023999961, 0.051000368), (-0.078000076, 0.08799996, 0.051000368), (-0.04599974, 0.08799996, 0.051000368), (-0.030000065, 0.039999966, 0.10500038), (-0.030000072, 0.072000295, 0.10500038), (-0.094000064, 0.039999958, 0.10500038), (-0.09400007, 0.07200029, 0.10500038), (-0.07800007, 0.023999961, 0.10500038), (-0.045999732, 0.023999961, 0.10500038), (-0.078000076, 0.08799996, 0.10500038), (-0.04599974, 0.08799996, 0.10500038), (-0.030000065, 0.039999966, 0.12300037), (-0.030000072, 0.072000295, 0.12300037), (-0.094000064, 0.039999958, 0.12300037), (-0.09400007, 0.07200029, 0.12300037), (-0.07800007, 0.023999961, 0.12300037), (-0.045999732, 0.023999961, 0.12300037), (-0.078000076, 0.08799996, 0.12300037), (-0.04599974, 0.08799996, 0.12300037), (-0.030000065, 0.039999966, 0.16800037), (-0.030000072, 0.072000295, 0.16800037), (-0.094000064, 0.039999958, 0.16800037), (-0.09400007, 0.07200029, 0.16800037), (-0.07800007, 0.023999961, 0.16800037), (-0.045999732, 0.023999961, 0.16800037), (-0.078000076, 0.08799996, 0.16800037), (-0.04599974, 0.08799996, 0.16800037), (-0.030000065, 0.039999966, 0.17700037), (-0.030000072, 0.072000295, 0.17700037), (-0.094000064, 0.039999958, 0.17700037), (-0.09400007, 0.07200029, 0.17700037), (-0.07800007, 0.023999961, 0.17700037), (-0.045999732, 0.023999961, 0.17700037), (-0.078000076, 0.08799996, 0.17700037), (-0.04599974, 0.08799996, 0.17700037), (-0.030000065, 0.039999966, 0.19500038), (-0.030000072, 0.072000295, 0.19500038), (-0.094000064, 0.039999958, 0.19500038), (-0.09400007, 0.07200029, 0.19500038), (-0.07800007, 0.023999961, 0.19500038), (-0.045999732, 0.023999961, 0.19500038), (-0.078000076, 0.08799996, 0.19500038), (-0.04599974, 0.08799996, 0.19500038), (-0.030000065, 0.039999966, 0.20100036), (-0.030000072, 0.072000295, 0.20100036), (-0.094000064, 0.039999958, 0.20100036), (-0.09400007, 0.07200029, 0.20100036), (-0.07800007, 0.023999961, 0.20100036), (-0.045999732, 0.023999961, 0.20100036), (-0.078000076, 0.08799996, 0.20100036), (-0.04599974, 0.08799996, 0.20100036), (-0.02200006, 0.039999966, 0.19500038), (-0.022000067, 0.072000295, 0.19500038), (-0.02200006, 0.039999966, 0.20100036), (-0.022000067, 0.072000295, 0.20100036), (-0.10200007, 0.039999954, 0.19500038), (-0.10200008, 0.07200028, 0.19500038), (-0.10200007, 0.039999954, 0.20100036), (-0.10200008, 0.07200028, 0.20100036), (-0.078000076, 0.09599996, 0.19500038), (-0.04599974, 0.09599996, 0.19500038), (-0.078000076, 0.09599996, 0.20100036), (-0.04599974, 0.09599996, 0.20100036), (-0.07800007, 0.015999962, 0.19500038), (-0.045999732, 0.015999962, 0.19500038), (-0.07800007, 0.015999962, 0.20100036), (-0.045999732, 0.015999962, 0.20100036), (-0.024343152, 0.034343172, 0.19500038), (-0.04034282, 0.018343166, 0.19500038), (-0.024343152, 0.034343172, 0.20100036), (-0.04034282, 0.018343166, 0.20100036), (-0.09965692, 0.034343105, 0.19500038), (-0.08365692, 0.018343106, 0.19500038), (-0.09965692, 0.034343105, 0.20100036), (-0.08365692, 0.018343106, 0.20100036), (-0.09965687, 0.0776572, 0.19500038), (-0.08365688, 0.093656875, 0.19500038), (-0.09965687, 0.0776572, 0.20100036), (-0.08365688, 0.093656875, 0.20100036), (-0.024343219, 0.07765715, 0.19500038), (-0.040342886, 0.093656816, 0.19500038), (-0.024343219, 0.07765715, 0.20100036), (-0.040342886, 0.093656816, 0.20100036), (-0.030000065, 0.039999966, 0.21000037), (-0.030000072, 0.072000295, 0.21000037), (-0.094000064, 0.039999958, 0.21000037), (-0.09400007, 0.07200029, 0.21000037), (-0.07800007, 0.023999961, 0.21000037), (-0.045999732, 0.023999961, 0.21000037), (-0.078000076, 0.08799996, 0.21000037), (-0.04599974, 0.08799996, 0.21000037), (-0.030000065, 0.039999966, 0.24600035), (-0.094000064, 0.039999958, 0.24600035), (-0.09400007, 0.07200029, 0.24600035), (-0.07800007, 0.023999961, 0.24600035), (-0.045999732, 0.023999961, 0.24600035), (-0.078000076, 0.08799996, 0.24600035), (-0.04599974, 0.08799996, 0.24600035), (-0.10200007, 0.039999954, 0.015000373), (-0.12600006, 0.03199996, 0.06000037), (-0.094000064, 0.039999958, 0.08700037), (-0.094000064, 0.039999958, 0.051000368), (-0.030000065, 0.039999966, 0.033000372), (-0.07800007, 0.023999961, 0.033000372), (-0.04599974, 0.08799996, 0.033000372), (-0.02200006, 0.039999966, 0.015000373), (-0.022000067, 0.072000295, 0.015000373), (-0.02200006, 0.039999966, 0.033000372), (-0.022000067, 0.072000295, 0.033000372), (-0.10200008, 0.07200028, 0.015000373), (-0.10200007, 0.039999954, 0.033000372), (-0.10200008, 0.07200028, 0.033000372), (-0.078000076, 0.09599996, 0.015000373), (-0.04599974, 0.09599996, 0.015000373), (-0.078000076, 0.09599996, 0.033000372), (-0.04599974, 0.09599996, 0.033000372), (-0.07800007, 0.015999962, 0.015000373), (-0.045999732, 0.015999962, 0.015000373), (-0.07800007, 0.015999962, 0.033000372), (-0.045999732, 0.015999962, 0.033000372), (-0.024343152, 0.034343172, 0.015000373), (-0.04034282, 0.018343166, 0.015000373), (-0.024343152, 0.034343172, 0.033000372), (-0.04034282, 0.018343166, 0.033000372), (-0.09965692, 0.034343105, 0.015000373), (-0.08365692, 0.018343106, 0.015000373), (-0.09965692, 0.034343105, 0.033000372), (-0.08365692, 0.018343106, 0.033000372), (-0.09965687, 0.0776572, 0.015000373), (-0.08365688, 0.093656875, 0.015000373), (-0.09965687, 0.0776572, 0.033000372), (-0.08365688, 0.093656875, 0.033000372), (-0.024343219, 0.07765715, 0.015000373), (-0.040342886, 0.093656816, 0.015000373), (-0.024343219, 0.07765715, 0.033000372), (-0.040342886, 0.093656816, 0.033000372), (-0.030000072, 0.072000295, 0.24600038), (-0.094000064, 0.039999958, 0.25500038), (-0.07800007, 0.023999961, 0.25500038), (-0.045999732, 0.023999961, 0.25500038), (-0.078000076, 0.08799996, 0.25500038), (-0.02200006, 0.039999966, 0.24600038), (-0.022000067, 0.072000295, 0.24600038), (-0.02200006, 0.039999966, 0.25500038), (-0.022000067, 0.072000295, 0.25500038), (-0.10200007, 0.039999954, 0.24600038), (-0.10200008, 0.07200028, 0.24600038), (-0.10200007, 0.039999954, 0.25500038), (-0.10200008, 0.07200028, 0.25500038), (-0.078000076, 0.09599996, 0.24600038), (-0.04599974, 0.09599996, 0.24600038), (-0.078000076, 0.09599996, 0.25500038), (-0.04599974, 0.09599996, 0.25500038), (-0.07800007, 0.015999962, 0.24600038), (-0.045999732, 0.015999962, 0.24600038), (-0.078, 0.015999962, 0.25500038), (-0.045999732, 0.015999962, 0.25500038), (-0.024343152, 0.034343172, 0.24600038), (-0.04034282, 0.018343166, 0.24600038), (-0.024343152, 0.034343172, 0.25500038), (-0.04034282, 0.018343166, 0.25500038), (-0.09965692, 0.034343105, 0.24600038), (-0.08365692, 0.018343106, 0.24600038), (-0.09965692, 0.034343105, 0.25500038), (-0.08365692, 0.018343106, 0.25500038), (-0.09965687, 0.0776572, 0.24600038), (-0.08365688, 0.093656875, 0.24600038), (-0.09965687, 0.0776572, 0.25500038), (-0.08365688, 0.093656875, 0.25500038), (-0.024343219, 0.07765715, 0.24600038), (-0.040342886, 0.093656816, 0.24600038), (-0.024343219, 0.07765715, 0.25500038), (-0.040342886, 0.093656816, 0.25500038), (-0.04599974, 0.08799996, 0.25500038), (-0.09400007, 0.07200029, 0.25500038), (-0.030000072, 0.072000295, 0.25500038), (-0.030000065, 0.039999966, 0.25500038), (-0.07000007, 0.047999956, 0.2730004), (-0.05400007, 0.04799997, 0.2730004), (-0.05400007, 0.06400013, 0.2730004), (-0.07000007, 0.063999794, 0.2730004), (-0.07000007, 0.047999956, 0.27600038), (-0.05400007, 0.04799997, 0.27600038), (-0.05400007, 0.06400013, 0.27600038), (-0.07000007, 0.063999794, 0.27600038), (-0.15800005, 0.03199996, 0.06000037), (-0.12600006, 0.03199996, 0.06900037), (-0.15800005, 0.03199996, 0.06900037), (-0.12600006, 0.03199996, 0.07800037), (-0.15800005, 0.03199996, 0.07800037), (-0.12600006, 0.03199996, 0.015000373), (-0.15800005, 0.03199996, 0.015000373), (-0.11000007, 0.03199996, 0.015000373), (-0.110000074, 0.09599996, 0.015000373), (-0.15800007, 0.09599996, 0.015000373), (-0.12600008, 0.09599996, 0.015000373), (-0.17400008, 0.03199996, 0.015000373), (-0.17400008, 0.09599996, 0.015000373), (-0.110000074, 0.09599997, 0.07800037), (-0.110000074, 0.09599997, 0.06900037), (-0.110000074, 0.09599997, 0.060000367), (-0.110000074, 0.09599997, 0.051000368), (-0.110000074, 0.09599997, 0.04200037), (-0.110000074, 0.09599997, 0.03300037), (-0.110000074, 0.09599996, 0.02400037), (-0.11000007, 0.03199996, 0.024000373), (-0.11000007, 0.03199996, 0.033000372), (-0.11000007, 0.03199996, 0.042000372), (-0.11000007, 0.03199996, 0.05100037), (-0.11000007, 0.03199996, 0.06000037), (-0.11000007, 0.03199996, 0.06900037), (-0.11000007, 0.03199996, 0.07800037), (-0.17400007, 0.09599997, 0.07800037), (-0.17400008, 0.09599997, 0.060000367), (-0.17400008, 0.09599997, 0.051000368), (-0.17400008, 0.09599997, 0.04200037), (-0.17400008, 0.09599997, 0.03300037), (-0.17400008, 0.09599996, 0.02400037), (-0.17400008, 0.03199996, 0.024000373), (-0.17400008, 0.03199996, 0.033000372), (-0.17400008, 0.03199996, 0.042000372), (-0.17400008, 0.03199996, 0.05100037), (-0.17400008, 0.03199996, 0.06000037), (-0.17400008, 0.03199996, 0.06900037), (-0.17400008, 0.03199996, 0.07800037), (-0.09400007, 0.07200029, 0.015000373), (-0.12600006, 0.03999996, 0.015000373), (-0.09400007, 0.07200029, 0.078000374), (-0.094000064, 0.039999958, 0.078000374), (-0.11000007, 0.039999954, 0.078000374), (-0.110000074, 0.07200028, 0.078000374), (-0.094000064, 0.039999958, 0.015000373), (-0.11000007, 0.039999954, 0.015000373), (-0.110000074, 0.07200028, 0.015000373), (-0.15800005, 0.03199996, 0.05100037), (-0.12600006, 0.03199996, 0.05100037), (-0.15800005, 0.03199996, 0.042000372), (-0.12600006, 0.03199996, 0.042000372), (-0.15800005, 0.03199996, 0.033000372), (-0.12600006, 0.03199996, 0.033000372), (-0.15800005, 0.03199996, 0.024000373), (-0.12600006, 0.03199996, 0.024000373), (-0.12600008, 0.09599997, 0.07800037), (-0.15800007, 0.09599997, 0.07800037), (-0.12600008, 0.09599997, 0.06900037), (-0.15800007, 0.09599997, 0.06900037), (-0.12600008, 0.09599997, 0.060000367), (-0.15800007, 0.09599997, 0.060000367), (-0.12600008, 0.09599997, 0.051000368), (-0.15800007, 0.09599997, 0.051000368), (-0.12600008, 0.09599997, 0.04200037), (-0.15800007, 0.09599997, 0.04200037), (-0.12600008, 0.09599997, 0.03300037), (-0.15800007, 0.09599997, 0.03300037), (-0.12600008, 0.09599996, 0.02400037), (-0.15800007, 0.09599996, 0.02400037), (-0.15800005, 0.03199996, 0.08100037), (-0.12600006, 0.03199996, 0.08100037), (-0.17400008, 0.03199996, 0.08100037), (-0.11000007, 0.03199996, 0.08100037), (-0.110000074, 0.09599997, 0.08100037), (-0.17400008, 0.09599997, 0.08100037), (-0.15800007, 0.09599997, 0.08100037), (-0.12600008, 0.09599997, 0.08100037), (-0.15800007, 0.09599997, 0.090000376), (-0.16600007, 0.09599997, 0.090000376), (-0.12600006, 0.03199996, 0.090000376), (-0.11800007, 0.03199996, 0.090000376), (-0.16600007, 0.03199996, 0.090000376), (-0.118000075, 0.09599997, 0.090000376), (-0.15800005, 0.03199996, 0.090000376), (-0.12600008, 0.09599997, 0.090000376), (-0.15800005, 0.03999996, 0.06900037), (-0.15800008, 0.09599997, 0.09900038), (-0.12600006, 0.03199996, 0.09900038), (-0.12600006, 0.03999996, 0.06900037), (-0.15800005, 0.03999996, 0.06000037), (-0.12600008, 0.09599997, 0.09900038), (-0.15800005, 0.03199996, 0.09900038), (-0.12600006, 0.03999996, 0.06000037), (-0.15800005, 0.03999996, 0.015000373), (-0.15800005, 0.03999996, 0.05100037), (-0.12600006, 0.03999996, 0.05100037), (-0.15800005, 0.03999996, 0.042000372), (-0.12600006, 0.03999996, 0.042000372), (-0.15800005, 0.03999996, 0.033000372), (-0.12600006, 0.03999996, 0.033000372), (-0.15800005, 0.03999996, 0.024000373), (-0.12600006, 0.03999996, 0.024000373), (-0.15800029, 0.103999965, 0.09900038), (-0.12599985, 0.023999961, 0.09900038), (-0.12599987, 0.103999965, 0.09900038), (-0.15800028, 0.023999961, 0.108000375), (-0.12599985, 0.023999961, 0.108000375), (-0.15800029, 0.103999965, 0.108000375), (-0.12599987, 0.103999965, 0.108000375), (-0.15800029, 0.087999955, 0.108000375), (-0.15800028, 0.03999996, 0.108000375), (-0.12599985, 0.03999996, 0.108000375), (-0.12599985, 0.08799996, 0.108000375), (-0.1756115, 0.08799996, 0.0791077), (-0.10817897, 0.03999996, 0.07887089), (-0.17561151, 0.03999996, 0.0791077), (-0.10817899, 0.08799996, 0.07887089), (-0.15800029, 0.08799996, 0.09900038), (-0.12599985, 0.03999996, 0.09900038), (-0.12599987, 0.08799996, 0.09900038), (-0.15800028, 0.03999996, 0.09900038), (-0.18155834, 0.08799996, 0.08586309), (-0.18155834, 0.03999996, 0.08586309), (-0.16394712, 0.08799996, 0.10575576), (-0.1639471, 0.03999996, 0.10575577), (-0.10223215, 0.03999996, 0.08562628), (-0.10223216, 0.08799996, 0.08562628), (-0.12005303, 0.08799996, 0.10575577), (-0.12005302, 0.03999996, 0.10575577), (-0.12005303, 0.103999965, 0.10575577), (-0.10223216, 0.103999965, 0.08562628), (-0.16394712, 0.103999965, 0.10575576), (-0.18155834, 0.103999965, 0.08586309), (-0.10817899, 0.103999965, 0.07887089), (-0.1756115, 0.103999965, 0.0791077), (-0.10817897, 0.023999963, 0.07887089), (-0.17561151, 0.023999961, 0.0791077), (-0.15800028, 0.023999961, 0.09900038), (-0.18155834, 0.023999961, 0.08586309), (-0.1639471, 0.023999961, 0.10575577), (-0.10223215, 0.023999963, 0.08562628), (-0.12005302, 0.023999963, 0.10575577), (-0.17400008, 0.08799997, 0.08100037), (-0.17400008, 0.03999996, 0.08100037), (-0.17400008, 0.08799996, 0.015000373), (-0.17400008, 0.039999958, 0.015000373), (-0.17400008, 0.08799997, 0.07800037), (-0.17400008, 0.03999996, 0.07800037), (-0.17400008, 0.08799997, 0.06900037), (-0.17400008, 0.08799997, 0.060000367), (-0.17400008, 0.03999996, 0.060000367), (-0.17400008, 0.08799997, 0.051000368), (-0.17400008, 0.03999996, 0.05100037), (-0.17400008, 0.08799997, 0.04200037), (-0.17400008, 0.03999996, 0.042000372), (-0.17400008, 0.08799997, 0.033000372), (-0.17400008, 0.03999996, 0.033000372), (-0.17400008, 0.08799996, 0.024000373), (-0.17400008, 0.039999958, 0.024000373), (-0.16600007, 0.08799997, 0.090000376), (-0.16600007, 0.03999996, 0.090000376), (-0.17632943, 0.09599996, 0.0776937), (-0.17400007, 0.09599996, 0.06900037), (-0.17632945, 0.03199996, 0.0776937), (-0.22269386, 0.09599997, 0.065270394), (-0.22036451, 0.09599997, 0.056577053), (-0.22036451, 0.031999964, 0.056577057), (-0.22269389, 0.031999964, 0.06527039), (-0.18405685, 0.09599996, 0.07562315), (-0.21496645, 0.09599997, 0.06734095), (-0.21496648, 0.031999964, 0.06734095), (-0.18405685, 0.031999964, 0.07562315), (-0.2126371, 0.031999964, 0.058647614), (-0.18172748, 0.031999964, 0.06692982), (-0.2126371, 0.09599997, 0.05864761), (-0.18172748, 0.09599996, 0.06692981), (-0.17632945, 0.08799997, 0.0776937), (-0.17632943, 0.03999996, 0.0776937), (-0.17400008, 0.03999996, 0.06900037), (-0.22269389, 0.08799997, 0.06527039), (-0.22269389, 0.03999996, 0.06527039), (-0.22036451, 0.08799997, 0.05657705), (-0.22036451, 0.03999996, 0.056577057), (-0.18172748, 0.03999996, 0.06692982), (-0.18172748, 0.08799997, 0.06692982), (-0.2126371, 0.03999996, 0.058647614), (-0.2126371, 0.08799997, 0.058647614), (-0.18405686, 0.08799997, 0.07562315), (-0.18405685, 0.03999996, 0.07562315), (-0.21496646, 0.08799997, 0.06734094), (-0.21496648, 0.03999996, 0.06734095), (-0.22036451, 0.03999996, 0.014965098), (-0.22036451, 0.031999964, 0.014965098), (-0.2126371, 0.031999964, 0.015000374), (-0.22036451, 0.09599997, 0.014965095), (-0.2126371, 0.09599997, 0.01500037), (-0.2126371, 0.08799997, 0.015000374), (-0.22036451, 0.08799997, 0.014965091), (-0.2126371, 0.03999996, 0.015000374), (-0.15800007, -0.03999968, 0), (-0.110000074, -0.03999968, 0), (-0.23800008, -4.0978193e-8, 0), (-0.23800007, 0.11199996, 0), (-0.0060000718, 0.11159996, 0), (-6.7055225e-8, -3.7252903e-8, 0), (-0.15800007, -0.03999968, 0.003), (-0.110000074, -0.03999968, 0.003), (-0.23800008, -4.0978193e-8, 0.003), (-0.23800007, 0.11199996, 0.003), (-0.0060000718, 0.11159996, 0.003), (-6.7055225e-8, -3.7252903e-8, 0.003), (-0.22300008, 0.103999965, 0.011999999), (-0.22300008, 0.103999965, 0.015000373), (-0.22300008, 0.00799996, 0.015000373), (-0.014000066, 0.08799996, 0.015000373), (-0.22300008, 0.00799996, 0.011999999), (-0.014000066, 0.08799996, 0.011999999), (-0.040000066, 0.00799996, 0.015000373), (-0.040000066, 0.00799996, 0.011999999), (-0.014000066, 0.034342963, 0.011999999), (-0.014000066, 0.034342963, 0.015000373), (-0.014000066, 0.034342963, 0.011999999), (-0.014000066, 0.034342963, 0.015000373), (-0.030000072, 0.103999965, 0.015000373), (-0.030000065, 0.103999965, 0.011999999), (-0.23000008, 0.103999965, 0.011999999), (-0.23000008, 0.103999965, 0.015000373), (-0.23000008, 0.00799996, 0.015000373), (-0.23000008, 0.00799996, 0.011999999), (-0.22800007, 0.103999965, 0.015000373), (-0.22800007, 0.007999964, 0.015000373), (-0.23000008, 0.103999965, 0.021), (-0.23000008, 0.00799996, 0.021), (-0.22800007, 0.103999965, 0.021), (-0.22800007, 0.007999964, 0.021), (-0.0060000643, 0.111999966, 0.003), (-0.014000066, 0.103999965, 0.011999999), (-0.008000068, 0.00799996, 0.011999999), (-0.23000008, 0.103999965, 0.011999999), (-0.23000008, 0.00799996, 0.011999999), (-0.23800007, 0.111999966, 0.003), (-0.23800007, -4.0978193e-8, 0.003), (-6.7055225e-8, -4.0978193e-8, 0.003), (-0.12600006, 0.00799996, 0.011999999), (-0.12600006, 0.00799996, 0.015000373), (-0.15800008, 0.007999957, 0.015000373), (-0.15800008, 0.007999957, 0.011999999), (-0.15800008, -0.03999967, 0.015000373), (-0.15800008, -0.03999967, 0.011999999), (-0.12600006, -0.039999656, 0.015000373), (-0.12600006, -0.03999967, 0.011999999), (-0.15000007, -0.03199967, 0.003), (-0.15000007, -0.03199967, 0.024), (-0.15800008, -0.03199967, 0.024), (-0.15800008, -0.03199967, 0.003), (-0.15800008, -0.03999967, 0.024), (-0.15799999, -0.03999996, 0.003000021), (-0.15000007, -0.039999656, 0.024), (-0.15000007, -0.03999967, 0.003), (-0.12600006, -0.03199967, 0.003), (-0.12600006, -0.03199967, 0.024), (-0.13400008, -0.03199967, 0.024), (-0.13400008, -0.03199967, 0.003), (-0.13400008, -0.03999967, 0.024), (-0.13400008, -0.03999967, 0.003), (-0.12600006, -0.039999656, 0.024), (-0.12600006, -0.03999967, 0.003), (-0.12600006, 0.007999953, 0.003), (-0.12600006, 0.007999953, 0.024), (-0.13400008, 0.007999953, 0.024), (-0.13400008, 0.007999953, 0.003), (-0.13400008, -4.8428774e-8, 0.024), (-0.13400008, -4.8428774e-8, 0.003), (-0.12600006, -3.3527613e-8, 0.024), (-0.12600006, -4.8428774e-8, 0.003), (-0.15000007, 0.007999957, 0.003), (-0.15000007, 0.007999957, 0.024), (-0.15800008, 0.007999957, 0.024), (-0.15800008, 0.007999957, 0.003), (-0.15799999, 0, 0.023999989), (-0.15800008, -4.4703484e-8, 0.003), (-0.15000007, -2.9802322e-8, 0.024), (-0.15000007, -4.4703484e-8, 0.003), (-0.16600037, 0.007999897, 0.012000024), (-0.17400026, -0.015999913, 0.012000024), (-0.16600037, -0.02399993, 0.003000021), (-0.15800047, 0, 0.003000021), (-0.22200036, 0.008000016, 0.012000024), (-0.22200036, 0, 0.003000021), (-0.1900003, -0.02399993, 0.003000021), (-0.1900003, -0.015999913, 0.012000024), (-0.11800027, -0.0079999175, 0.0030000107), (-0.11800027, 3.1664968e-8, 0.012000011), (-0.1260004, 0.00800015, 0.012000018), (-0.1260004, 2.2711707e-7, 0.0030000159), (-0.056000404, -0.030000001, 0), (-0.056000404, -0.030000001, 0.003), (-0.19, -0.031999897, 0), (-0.19, -0.031999897, 0.003)]
            bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.5), (0.625, 0.5), (0.625, 0.75), (0.625, 0), (0.625, 1), (0.625, 1), (0.625, 0), (0.625, 0.5), (0.625, 0.25), (0.625, 0.25), (0.625, 0.5), (0.625, 1), (0.625, 0.75), (0.625, 0.75), (0.625, 1), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.5), (0.625, 0.25), (0.625, 0.25), (0.625, 0.5), (0.625, 0.75), (0.625, 0.5), (0.625, 0.5), (0.625, 0.75), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0), (0.625, 1), (0.625, 1), (0.625, 0), (0.625, 1), (0.625, 0.75), (0.625, 0.75), (0.625, 1), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.5), (0.625, 0.25), (0.625, 0.25), (0.625, 0.5), (0.625, 0.75), (0.625, 0.5), (0.625, 0.5), (0.625, 0.75), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0), (0.625, 1), (0.625, 1), (0.625, 0), (0.625, 1), (0.625, 0.75), (0.625, 0.75), (0.625, 1), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.625, 0.5), (0.625, 0.25), (0.625, 0.25), (0.625, 0.5), (0.625, 0.75), (0.625, 0.5), (0.625, 0.5), (0.625, 0.75), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 1), (0.625, 0.75), (0.625, 0.75), (0.625, 1), (0.625, 0), (0.625, 1), (0.625, 1), (0.625, 0), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.625, 0), (0.625, 1), (0.625, 1), (0.625, 0), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 1), (0.625, 0.75), (0.625, 0.75), (0.625, 1), (0.625, 0.75), (0.625, 0.5), (0.625, 0.5), (0.625, 0.75), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.25), (0.625, 0.25), (0.625, 0.5), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 1), (0.625, 0.75), (0.625, 0.75), (0.625, 1), (0.625, 0.75), (0.625, 0.5), (0.625, 0.5), (0.625, 0.75), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.25), (0.625, 0.25), (0.625, 0.5), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.625, 0), (0.625, 1), (0.625, 1), (0.625, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 1), (0.625, 0.75), (0.625, 0.75), (0.625, 1), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.75), (0.625, 0.5), (0.625, 0.5), (0.625, 0.75), (0.625, 0.75), (0.625, 0.5), (0.625, 0.5), (0.625, 0.75), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0.25), (0, 0), (0, 0), (0, 0), (0.625, 0.5), (0.625, 0.25), (0.625, 0.25), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.25), (0.625, 0.25), (0.625, 0.5), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 1), (0.625, 0.75), (0.625, 0.75), (0.625, 1), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0), (0.625, 1), (0.625, 1), (0.625, 0), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0, 0), (0, 0), (0, 0), (0.625, 0), (0.625, 1), (0.625, 1), (0.625, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0, 0), (0.625, 0.25), (0, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0, 0), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0, 0), (0.625, 0), (0, 0), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0, 0), (0, 0), (0.625, 1), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.75), (0.625, 0.5), (0.625, 0.5), (0.625, 0.75), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.5), (0.625, 0.25), (0.625, 0.25), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 1), (0.625, 0.75), (0.625, 0.75), (0.625, 1), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0), (0.625, 1), (0.625, 1), (0.625, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0, 0), (0.625, 0.25), (0, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0, 0), (0.625, 0), (0, 0), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0, 0), (0, 0), (0.625, 1), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 1), (0.625, 0.75), (0.625, 0.75), (0.625, 1), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.75), (0.625, 0.5), (0.625, 0.5), (0.625, 0.75), (0.625, 0.75), (0.625, 0.5), (0.625, 0.5), (0.625, 0.75), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0.25), (0, 0), (0, 0), (0, 0), (0.625, 0.5), (0.625, 0.25), (0.625, 0.25), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.25), (0.625, 0.25), (0.625, 0.5), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 1), (0.625, 0.75), (0.625, 0.75), (0.625, 1), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0), (0.625, 1), (0.625, 1), (0.625, 0), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0, 0), (0, 0), (0, 0), (0.625, 0), (0.625, 1), (0.625, 1), (0.625, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.5), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0, 0), (0.625, 0.25), (0, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0, 0), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0, 0), (0.625, 0), (0, 0), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0, 0), (0, 0), (0.625, 1), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.25), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0.24999997), (0.625, 0.25), (0.625, 0.25), (0.625, 0.24999999), (0.62499994, 0), (0.62499994, 0), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.62499994, 0.16666664), (0.625, 0.24999999), (0.625, 0.25), (0.625, 0.16666666), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.62499994, 0.24999997), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0), (0.6249999, 0), (0.625, 0.25), (0.625, 0.25), (0.6249999, 0), (0.625, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.62499994, 0.24999997), (0.625, 0.25), (0.625, 0.08333333), (0.625, 0), (0.625, 0), (0.625, 0.08333333), (0.625, 0.16666666), (0.625, 0.25), (0.625, 0.25), (0.625, 0.16666666), (0.625, 0.16666666), (0.625, 0.25), (0.625, 0.25), (0.625, 0.16666666), (0.625, 0.16666666), (0.625, 0.25), (0.625, 0.25), (0.62499994, 0.16666666), (0.62499994, 0.16666666), (0.625, 0.25), (0.625, 0.25), (0.62499994, 0.16666666), (0.62499994, 0.16666666), (0.625, 0.25), (0.625, 0.24999999), (0.62499994, 0.16666664), (0.625, 0.25), (0.62499994, 0.24999997), (0.625, 0.24999997), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.62499994, 0), (0.62499994, 0), (0.62499994, 0), (0.62499994, 0), (0.625, 0), (0.62499994, 0), (0.62499994, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.62499994, 0), (0.62499994, 0), (0.62499994, 0), (0.62499994, 0), (0.62499994, 0), (0.62499994, 0), (0.62499994, 0), (0.62499994, 0), (0.62499994, 0), (0.62499994, 0), (0.625, 0.25), (0.62499994, 0.24999997), (0.62499994, 0.24999997), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.24999997), (0.625, 0.24999999), (0.625, 0.25), (0.625, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.6249999, 0), (0.6249999, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.6249999, 0), (0.6249999, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.62499994, 0), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.62499994, 0.24999997), (0.625, 0.25), (0.625, 0.25), (0.62499994, 0.24999997), (0.62499994, 0.24999997), (0.625, 0.25), (0.625, 0.25), (0.625, 0.24999997), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0.08333333), (0.625, 0), (0.625, 0), (0.625, 0.08333333), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0), (0.625, 0.083333336), (0.625, 0.16666667), (0.62499994, 0.16666666), (0.625, 0.083333336), (0.62499994, 0), (0.62499994, 0), (0.62499994, 0), (0.62499994, 0), (0.62499994, 0), (0.62499994, 0), (0.62499994, 0), (0.62499994, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.62499994, 0), (0.62499994, 0), (0.62499994, 0), (0.62499994, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.62499994, 0), (0.62499994, 0), (0.625, 0), (0.625, 0), (0.6249999, 0), (0.6249999, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.62499994, 0), (0.62499994, 0), (0.625, 0), (0.62499994, 0), (0.625, 0), (0.625, 0), (0.62499994, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.62499994, 0), (0.625, 0), (0.625, 0), (0.62499994, 0), (0.6249999, 0), (0.625, 0), (0.625, 0), (0.6249999, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.6249999, 0), (0.625, 0), (0.62499994, 0), (0.62499994, 0), (0.625, 0), (0.62499994, 0), (0.62499994, 0), (0.62499994, 0), (0.625, 0), (0.625, 0.083333336), (0.625, 0.083333336), (0.625, 0), (0.625, 0.16666666), (0.625, 0.25), (0.625, 0.25), (0.62499994, 0.16666666), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0.16666667), (0.625, 0.25), (0.625, 0.25), (0.62499994, 0.16666666), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0.083333336), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0.083333336), (0.625, 0), (0.62499994, 0.08333332), (0.62499994, 0.08333333), (0.625, 0), (0.62499994, 0.08333332), (0.625, 0.16666666), (0.62499994, 0.16666666), (0.62499994, 0.08333333), (0.578125, 0), (0.625, 0.25), (0.625, 0.24999999), (0.625, 8.7311486e-10), (0.575, 0.23), (0.625, 0), (0.625, 9.895301e-10), (0.625, 0.24999999), (0.625, 0.24999999), (0.625, 9.895301e-10), (0.625, 0), (0.625, 0.25), (0.625, 0.16666667), (0.625, 0.083333336), (0.625, 0), (0.625, 0.25), (0, 0), (0.525, 0.20999998), (0.5730966, 0.22923863), (0, 0), (0.578125, 0), (0.625, 8.7311486e-10), (0.62500006, 0), (0.5761934, 0), (0.625, 8.7311486e-10), (0.625, 0.24999999), (0.625, 0.25), (0.625, 0), (0.625, 0.083333336), (0.62499994, 0.16666666), (0.625, 0.25), (0.625, 0), (0.625, 9.895301e-10), (0.625, 0), (0.625, 0), (0.625, 0), (0, 0), (0, 0), (0.57634056, 0.23053622), (0.5800564, 0.23202258), (0.625, 0), (0.575, 0.23), (0, 0), (0.625, 0), (0.625, 0.25), (0.578125, 0), (0, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.5800564, 0.23202258), (0, 0), (0.625, 0.16666667), (0.625, 0.25), (0, 0), (0.62499994, 0.16666666), (0, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.24999999), (0.57634056, 0.23053622), (0.625, 0.25), (0, 0), (0.575, 0.23), (0.525, 0.20999998), (0, 0), (0.575, 0.23), (0.625, 0.24999999), (0.5730966, 0.22923863), (0.525, 0.20999998), (0.625, 0.24999999), (0.625, 0.25), (0.5800564, 0.23202258), (0.57634056, 0.23053622), (0.625, 0.24999999), (0.625, 0.25), (0.625, 0.25), (0.5730966, 0.22923863), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.5761934, 0), (0.62500006, 0), (0.625, 0), (0.625, 8.7311486e-10), (0.625, 0), (0.625, 0), (0.62500006, 0), (0, 0), (0.578125, 0), (0.5761934, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0), (0.625, 9.895301e-10), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0), (0.625, 0.25), (0.625, 0.16666666), (0.625, 0.16666666), (0.625, 0.25), (0.625, 0.16666666), (0.625, 0.08333333), (0.625, 0.08333333), (0.625, 0.16666666), (0.62499994, 0), (0.62499994, 0.08333333), (0.625, 0.08333333), (0.62499994, 0), (0.62499994, 0.08333333), (0.62499994, 0.16666666), (0.62499994, 0.16666664), (0.625, 0.08333333), (0.62499994, 0), (0.6249999, 0.08333333), (0.62499994, 0.08333333), (0.62499994, 0), (0.6249999, 0.08333333), (0.62499994, 0.16666666), (0.62499994, 0.16666666), (0.62499994, 0.08333333), (0.625, 0), (0.625, 0.08333333), (0.6249999, 0.08333333), (0.62499994, 0), (0.625, 0.08333333), (0.625, 0.16666666), (0.62499994, 0.16666666), (0.6249999, 0.08333333), (0.625, 0), (0.625, 0.08333333), (0.625, 0.08333333), (0.625, 0), (0.625, 0.08333333), (0.625, 0.16666666), (0.625, 0.16666666), (0.625, 0.08333333), (0.62499994, 0), (0.62499994, 0.08333333), (0.625, 0.08333333), (0.625, 0), (0.62499994, 0.08333333), (0.625, 0.16666666), (0.625, 0.16666666), (0.625, 0.08333333), (0.625, 0.25), (0.625, 0.16666666), (0.625, 0.16666666), (0.625, 0.25), (0.625, 0.16666666), (0.625, 0.08333333), (0.625, 0.08333333), (0.625, 0.16666666), (0.62499994, 0), (0.625, 0.08333333), (0.625, 0.08333333), (0.625, 0), (0.625, 0.08333333), (0.62499994, 0.16666664), (0.625, 0.16666666), (0.625, 0.08333333), (0.625, 0.16666666), (0.625, 0.25), (0.625, 0.25), (0.625, 0.16666666), (0.625, 0.16666666), (0.625, 0.25), (0.625, 0.25), (0.62499994, 0.16666666), (0.6249999, 0), (0.625, 0), (0.625, 0), (0.62499994, 0), (0.6249999, 0.08333333), (0.6249999, 0.083333336), (0.6249999, 0.083333336), (0.6249999, 0.08333333), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.62499994, 0.08333333), (0.62499994, 0), (0.6249999, 0), (0.6249999, 0.083333336), (0.6249999, 0.083333336), (0.6249999, 0), (0.6249999, 0), (0.6249999, 0.083333336), (0.62499994, 0), (0.625, 0), (0.625, 0), (0.6249999, 0), (0.6249999, 0), (0.625, 0), (0.625, 0), (0.6249999, 0), (0.625, 0.16666666), (0.625, 0.25), (0.625, 0.25), (0.62500006, 0.16666666), (0.62500006, 0.16666666), (0.625, 0.25), (0.625, 0.25), (0.625, 0.16666666), (0.625, 0), (0.62500006, 0.08333333), (0.625, 0.08333333), (0.625, 0), (0.62500006, 0.08333333), (0.62500006, 0.16666666), (0.625, 0.16666666), (0.625, 0.08333333), (0.625, 0), (0.625, 0.08333333), (0.62500006, 0.08333333), (0.625, 0), (0.625, 0.08333333), (0.625, 0.16666666), (0.62500006, 0.16666666), (0.62500006, 0.08333333), (0.625, 0.25), (0.62499994, 0.16666667), (0.62499994, 0.16666667), (0.625, 0.25), (0.62499994, 0.16666667), (0.6249999, 0.083333336), (0.6249999, 0.083333336), (0.62499994, 0.16666667), (0.625, 0.25), (0.625, 0.16666666), (0.62499994, 0.16666667), (0.625, 0.25), (0.625, 0.16666666), (0.62499994, 0.08333333), (0.6249999, 0.083333336), (0.62499994, 0.16666667), (0.62499994, 0.16666667), (0.62499994, 0.16666666), (0.62499994, 0.16666666), (0.62499994, 0.16666667), (0.62499994, 0.16666667), (0.6249999, 0.083333336), (0.6249999, 0.08333333), (0.62499994, 0.16666666), (0.625, 0), (0.625, 0.08333333), (0.6249999, 0.08333333), (0.62499994, 0), (0.625, 0.08333333), (0.625, 0.16666666), (0.62499994, 0.16666666), (0.6249999, 0.08333333), (0.625, 0), (0.625, 0.08333333), (0.625, 0.08333333), (0.625, 0), (0.625, 0.08333333), (0.625, 0.16666666), (0.625, 0.16666666), (0.625, 0.08333333), (0.625, 0), (0.625, 0.08333333), (0.625, 0.08333333), (0.625, 0), (0.625, 0), (0.625, 0), (0.62499994, 0), (0.62499994, 0), (0.6249999, 0.08333333), (0.6249999, 0.08333333), (0.62499994, 0), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0.6249999, 0.083333336), (0.6249999, 0), (0.6249999, 0), (0.6249999, 0.083333336), (0.6249999, 0), (0.62499994, 0), (0.62499994, 0), (0.6249999, 0), (0.62499994, 0.16666666), (0.625, 0.25), (0.625, 0.25), (0.62499994, 0.16666666), (0.625, 0.25), (0.62499994, 0.16666667), (0.62499994, 0.16666667), (0.625, 0.25), (0.625, 0.08333333), (0.625, 0.16666666), (0.625, 0.16666666), (0.625, 0.08333333), (0.625, 0.16666666), (0.625, 0.25), (0.625, 0.25), (0.625, 0.16666666), (0.625, 0.25), (0.625, 0.25), (0.625, 0.25), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 0.7802764), (0.625, 0.78090286), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 0.78090286), (0.625, 0.7802764), (0.625, 1), (0.625, 0.7543895), (0.625, 0.7543895), (0.625, 1), (0.625, 1), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.75), (0.625, 0.7543895), (0.625, 0.7543895), (0.625, 1), (0.625, 0.7543895), (0.625, 0.75), (0.625, 0.75), (0, 0), (0.625, 0.78090286), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0, 0), (0, 0), (0.5208334, 0.8333334), (0.625, 1), (0.625, 1), (0.5208333, 0.8333333), (0.625, 1), (0.625, 1), (0.5208334, 0.8333334), (0.46875003, 0.75), (0.4166667, 0.6666667), (0.20833334, 0.33333334), (0.15625, 0.25), (0.10416667, 0.16666667), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0.625, 1), (0.625, 0.78090286), (0.625, 0.7802764), (0.625, 1), (0.625, 0.7543895), (0.625, 0.7543895), (0.625, 1), (0.625, 1), (0.625, 0.7802764), (0.625, 0.78090286), (0.625, 0.7543895), (0.625, 0.7543895), (0.625, 1), (0.625, 0.7543895), (0.625, 0.78090286), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 0.7802764), (0.625, 0.7543895), (0.625, 1), (0.625, 1), (0.625, 0.78090286), (0.625, 0.7802764), (0.625, 1), (0.625, 0.7543895), (0.625, 0.7543895), (0.625, 1), (0.625, 1), (0.625, 0.7802764), (0.625, 0.78090286), (0.625, 0.7543895), (0.625, 0.7543895), (0.625, 1), (0.625, 0.7543895), (0.625, 0.78090286), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 0.7802764), (0.625, 0.7543895), (0.625, 1), (0.625, 1), (0.625, 0.78090286), (0.625, 0.7802764), (0.625, 1), (0.625, 0.7543895), (0.625, 0.7543895), (0.625, 1), (0.625, 1), (0.625, 0.7802764), (0.625, 0.78090286), (0.625, 0.7543895), (0.625, 0.7543895), (0.625, 1), (0.625, 0.7543895), (0.625, 0.78090286), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 0.7802764), (0.625, 0.7543895), (0.625, 1), (0.625, 1), (0.625, 0.78090286), (0.625, 0.7802764), (0.625, 1), (0.625, 0.7543895), (0.625, 0.7543895), (0.625, 1), (0.625, 1), (0.625, 0.7802764), (0.625, 0.78090286), (0.625, 0.7543895), (0.625, 0.7543895), (0.625, 1), (0.625, 0.7543895), (0.625, 0.78090286), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 0.7802764), (0.625, 0.7543895), (0.625, 1), (0.625, 1), (0.625, 0.78090286), (0.625, 0.7802764), (0.625, 1), (0.625, 0.7543895), (0.625, 0.7543895), (0.625, 1), (0.625, 1), (0.625, 0.7802764), (0.625, 0.78090286), (0.625, 0.7543895), (0.625, 0.7543895), (0.625, 1), (0.625, 0.7543895), (0.625, 0.78090286), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 1), (0.625, 0.7802764), (0.625, 0.7543895), (0.625, 1), (0.15625, 0.25), (0.20833334, 0.33333334), (0.20833331, 0.3333333), (0.15624999, 0.24999999), (0.20833334, 0.33333334), (0.4166667, 0.6666667), (0.41666663, 0.6666666), (0.20833331, 0.3333333), (0, 0), (0, 0), (0, 0), (0, 0), (0.46875003, 0.75), (0.5208334, 0.8333334), (0.5208333, 0.8333333), (0.46874997, 0.75), (0.4166667, 0.6666667), (0.46875003, 0.75), (0.46874997, 0.75), (0.41666663, 0.6666666), (0, 0), (0.10416667, 0.16666667), (0.10416666, 0.16666666), (0, 0), (0.10416667, 0.16666667), (0.15625, 0.25), (0.15624999, 0.24999999), (0.10416666, 0.16666666), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "White" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 37, 38, 39, 40, 41, 42, 43, 44, 93, 94, 95, 96, 97, 98, 99, 100, 130, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 205, 206, 207, 208, 209, 210, 211, 213, 215, 219, 221, 224, 226, 228, 231, 233, 235, 237, 238, 239, 240, 243, 244, 247, 251, 255, 256, 259, 261, 262, 265, 266, 267, 276, 277, 278, 279, 280, 283, 284, 285, 286, 288, 334, 335, 338, 339, 344, 345]
                rel material:binding = </root/_materials/White>
            }

            def GeomSubset "BlockBrightRed" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [7, 8, 9, 10, 11, 12, 13, 22, 23, 24, 25, 26, 27, 28, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204]
                rel material:binding = </root/_materials/BlockBrightRed>
            }

            def GeomSubset "BlockNougat" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [29, 30, 31, 32, 33, 34, 35, 36, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 138, 139, 140, 141, 217, 246, 248, 250, 257, 258, 263, 264, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 306, 307, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 342, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 389, 395, 396, 397, 398, 399, 400, 401, 402, 403, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439]
                rel material:binding = </root/_materials/BlockNougat>
            }

            def GeomSubset "BlockTransClear" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [101, 102, 103, 104, 105, 106, 107, 108]
                rel material:binding = </root/_materials/BlockTransClear>
            }

            def GeomSubset "BlockLightRoyalBlue" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [134, 137, 212, 214, 216, 218, 220, 222, 223, 225, 227, 229, 230, 232, 234, 236, 241, 242, 245, 249, 252, 253, 254, 260, 268, 269, 270, 271, 272, 273, 274, 275, 281, 282, 287, 289, 301, 302, 303, 304, 305, 308, 309, 312, 313, 330, 331, 332, 333, 336, 337, 340, 341, 360, 364, 384, 385, 386, 387, 404, 409, 442, 447, 448]
                rel material:binding = </root/_materials/BlockLightRoyalBlue>
            }

            def GeomSubset "BlockLightNougat" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [388, 390, 391, 392, 393, 394]
                rel material:binding = </root/_materials/BlockLightNougat>
            }

            def GeomSubset "BlockTrBrown" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [405, 406, 407, 408, 440, 441, 443, 444, 445, 446, 449]
                rel material:binding = </root/_materials/BlockTrBrown>
            }
        }
    }
}

